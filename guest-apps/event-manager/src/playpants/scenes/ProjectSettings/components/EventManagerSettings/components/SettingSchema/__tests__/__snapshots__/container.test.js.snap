// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingSchema renders default values 1`] = `
<SettingSchema
  Responsibilities={
    Object {
      "group": Object {
        "members": Object {
          "data": Array [
            Object {
              "email": "admin@test.com",
              "id": 3,
              "name": "Admin",
              "username": "admin",
            },
            Object {
              "email": "noreply@demonware.net",
              "id": 1,
              "name": "Initial User",
              "username": "username",
            },
          ],
          "loading": false,
          "next": null,
          "params": Object {
            "id": "7",
          },
        },
      },
      "groups": Object {
        "data": Array [
          Object {
            "description": "",
            "id": 1,
            "name": "GTR Group 1",
            "project": 1,
          },
          Object {
            "description": "",
            "id": 6,
            "name": "asdf",
            "project": 1,
          },
          Object {
            "description": "asdf",
            "id": 2,
            "name": "GTR Group",
            "project": 1,
          },
          Object {
            "description": "",
            "id": 3,
            "name": "New Group",
            "project": 1,
          },
          Object {
            "description": "",
            "id": 5,
            "name": "sanghawk group test",
            "project": 1,
          },
          Object {
            "description": "",
            "id": 7,
            "name": "sanghawk group testsdfgsdf",
            "project": 1,
          },
        ],
        "loading": false,
        "next": null,
        "params": Object {
          "project": 1,
        },
      },
      "responsibilityGroups": Object {
        "data": Array [
          Object {
            "env_type": "Certification",
            "group": 7,
            "id": 25,
            "project": 1,
            "responsibilities": Array [
              3,
            ],
            "user": null,
          },
          Object {
            "env_type": "Development",
            "group": 7,
            "id": 26,
            "project": 1,
            "responsibilities": Array [],
            "user": null,
          },
        ],
        "loading": false,
        "next": null,
        "params": Object {
          "group": "7",
          "project": 1,
        },
      },
      "responsibilityOptions": Object {
        "data": Array [
          Object {
            "code": "authorize_pubstorage",
            "id": 1,
            "name": "Authorize | Publisher Storage",
          },
          Object {
            "code": "authorize_motd",
            "id": 2,
            "name": "Authorize | MOTD",
          },
          Object {
            "code": "authorize_playlist",
            "id": 3,
            "name": "Authorize | Playlists",
          },
          Object {
            "code": "authorize_pubvars",
            "id": 4,
            "name": "Authorize | Publisher Variables",
          },
          Object {
            "code": "authorize_pyscript",
            "id": 5,
            "name": "Authorize | PyScript",
          },
          Object {
            "code": "authorize_publisher_objects",
            "id": 6,
            "name": "Authorize | Publisher Objects",
          },
        ],
        "loading": false,
        "next": null,
      },
      "user": Object {
        "assignedGroups": Object {
          "data": Array [
            Object {
              "description": "",
              "id": 1,
              "name": "Group 1",
              "project": 1,
            },
          ],
          "loading": false,
          "next": null,
          "params": Object {
            "project": 1,
            "userID": 1,
          },
        },
      },
    }
  }
  Schemas={
    Object {
      "data": Array [],
      "loading": false,
    }
  }
  Users={
    Object {
      "availableUsers": Object {
        "data": Array [
          Object {
            "_links": Object {
              "self": Object {
                "href": "http://127.0.0.1:8081/api/v2/users/3/",
              },
            },
            "email": "admin@test.com",
            "enabled": true,
            "id": 3,
            "isSuperuser": false,
            "name": "Admin",
            "username": "admin",
          },
          Object {
            "_links": Object {
              "self": Object {
                "href": "http://127.0.0.1:8081/api/v2/users/4/",
              },
            },
            "email": "guest@test.com",
            "enabled": true,
            "id": 4,
            "isSuperuser": false,
            "name": "Guest",
            "username": "guest",
          },
          Object {
            "_links": Object {
              "self": Object {
                "href": "http://127.0.0.1:8081/api/v2/users/1/",
              },
            },
            "email": "noreply@demonware.net",
            "enabled": true,
            "id": 1,
            "isSuperuser": true,
            "name": "Initial User",
            "username": "username",
          },
          Object {
            "_links": Object {
              "self": Object {
                "href": "http://127.0.0.1:8081/api/v2/users/2/",
              },
            },
            "email": "readonly@test.com",
            "enabled": true,
            "id": 2,
            "isSuperuser": false,
            "name": "Readonly",
            "username": "readonly",
          },
        ],
        "loading": false,
        "next": null,
        "params": Object {
          "sort": "name",
        },
      },
      "userListFilters": Object {
        "query": "",
      },
    }
  }
  baseUrl=""
  clearSchema={[MockFunction]}
  eventSettings={
    Object {
      "statuses": Object {
        "active": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Active",
          "show_authorization": true,
        },
        "approved": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Approved",
          "show_authorization": true,
        },
        "cancelled": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Cancelled",
          "show_authorization": true,
        },
        "ended": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Ended",
          "show_authorization": true,
        },
        "expired": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Expired",
          "show_authorization": true,
        },
        "open": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": true,
          "is_read_only": false,
          "name": "Open",
          "show_authorization": false,
        },
        "pending": Object {
          "allow_authorization": true,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": true,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Pending Approval",
          "show_authorization": true,
        },
        "published": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Published",
          "show_authorization": true,
        },
        "rejected": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": true,
          "allow_open": true,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Rejected",
          "show_authorization": true,
        },
        "scheduled": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Scheduled",
          "show_authorization": true,
        },
      },
    }
  }
  fetchSchema={[MockFunction]}
  formContext={Object {}}
  formData={
    Object {
      "statuses": Object {
        "active": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Active",
          "show_authorization": true,
        },
        "approved": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Approved",
          "show_authorization": true,
        },
        "cancelled": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Cancelled",
          "show_authorization": true,
        },
        "ended": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Ended",
          "show_authorization": true,
        },
        "expired": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Expired",
          "show_authorization": true,
        },
        "open": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": true,
          "is_read_only": false,
          "name": "Open",
          "show_authorization": false,
        },
        "pending": Object {
          "allow_authorization": true,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": true,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Pending Approval",
          "show_authorization": true,
        },
        "published": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Published",
          "show_authorization": true,
        },
        "rejected": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": true,
          "allow_open": true,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Rejected",
          "show_authorization": true,
        },
        "scheduled": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Scheduled",
          "show_authorization": true,
        },
      },
    }
  }
  handleSubmit={[MockFunction]}
  hasCurrentProjectSettings={true}
  match={
    Object {
      "params": Object {
        "id": 1,
      },
    }
  }
  onFetchAvailableUsers={[MockFunction]}
  settingSchema={
    Object {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "description": "Project Setting - Event Settings",
      "properties": Object {
        "statuses": Object {
          "additionalProperties": false,
          "properties": Object {
            "cancelled": Object {
              "additionalProperties": false,
              "properties": Object {
                "allow_delete": Object {
                  "type": "boolean",
                },
                "is_read_only": Object {
                  "type": "boolean",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "is_read_only",
              ],
              "type": "object",
            },
            "scheduled": Object {
              "additionalProperties": false,
              "properties": Object {
                "allow_delete": Object {
                  "type": "boolean",
                },
                "is_read_only": Object {
                  "type": "boolean",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "is_read_only",
              ],
              "type": "object",
            },
          },
          "type": "object",
        },
      },
      "type": "object",
      "version": 1,
    }
  }
  updateProjectSetting={[MockFunction]}
>
  <StatelessSettingSchema
    Responsibilities={
      Object {
        "group": Object {
          "members": Object {
            "data": Array [
              Object {
                "email": "admin@test.com",
                "id": 3,
                "name": "Admin",
                "username": "admin",
              },
              Object {
                "email": "noreply@demonware.net",
                "id": 1,
                "name": "Initial User",
                "username": "username",
              },
            ],
            "loading": false,
            "next": null,
            "params": Object {
              "id": "7",
            },
          },
        },
        "groups": Object {
          "data": Array [
            Object {
              "description": "",
              "id": 1,
              "name": "GTR Group 1",
              "project": 1,
            },
            Object {
              "description": "",
              "id": 6,
              "name": "asdf",
              "project": 1,
            },
            Object {
              "description": "asdf",
              "id": 2,
              "name": "GTR Group",
              "project": 1,
            },
            Object {
              "description": "",
              "id": 3,
              "name": "New Group",
              "project": 1,
            },
            Object {
              "description": "",
              "id": 5,
              "name": "sanghawk group test",
              "project": 1,
            },
            Object {
              "description": "",
              "id": 7,
              "name": "sanghawk group testsdfgsdf",
              "project": 1,
            },
          ],
          "loading": false,
          "next": null,
          "params": Object {
            "project": 1,
          },
        },
        "responsibilityGroups": Object {
          "data": Array [
            Object {
              "env_type": "Certification",
              "group": 7,
              "id": 25,
              "project": 1,
              "responsibilities": Array [
                3,
              ],
              "user": null,
            },
            Object {
              "env_type": "Development",
              "group": 7,
              "id": 26,
              "project": 1,
              "responsibilities": Array [],
              "user": null,
            },
          ],
          "loading": false,
          "next": null,
          "params": Object {
            "group": "7",
            "project": 1,
          },
        },
        "responsibilityOptions": Object {
          "data": Array [
            Object {
              "code": "authorize_pubstorage",
              "id": 1,
              "name": "Authorize | Publisher Storage",
            },
            Object {
              "code": "authorize_motd",
              "id": 2,
              "name": "Authorize | MOTD",
            },
            Object {
              "code": "authorize_playlist",
              "id": 3,
              "name": "Authorize | Playlists",
            },
            Object {
              "code": "authorize_pubvars",
              "id": 4,
              "name": "Authorize | Publisher Variables",
            },
            Object {
              "code": "authorize_pyscript",
              "id": 5,
              "name": "Authorize | PyScript",
            },
            Object {
              "code": "authorize_publisher_objects",
              "id": 6,
              "name": "Authorize | Publisher Objects",
            },
          ],
          "loading": false,
          "next": null,
        },
        "user": Object {
          "assignedGroups": Object {
            "data": Array [
              Object {
                "description": "",
                "id": 1,
                "name": "Group 1",
                "project": 1,
              },
            ],
            "loading": false,
            "next": null,
            "params": Object {
              "project": 1,
              "userID": 1,
            },
          },
        },
      }
    }
    Schemas={
      Object {
        "data": Array [],
        "loading": false,
      }
    }
    Users={
      Object {
        "availableUsers": Object {
          "data": Array [
            Object {
              "_links": Object {
                "self": Object {
                  "href": "http://127.0.0.1:8081/api/v2/users/3/",
                },
              },
              "email": "admin@test.com",
              "enabled": true,
              "id": 3,
              "isSuperuser": false,
              "name": "Admin",
              "username": "admin",
            },
            Object {
              "_links": Object {
                "self": Object {
                  "href": "http://127.0.0.1:8081/api/v2/users/4/",
                },
              },
              "email": "guest@test.com",
              "enabled": true,
              "id": 4,
              "isSuperuser": false,
              "name": "Guest",
              "username": "guest",
            },
            Object {
              "_links": Object {
                "self": Object {
                  "href": "http://127.0.0.1:8081/api/v2/users/1/",
                },
              },
              "email": "noreply@demonware.net",
              "enabled": true,
              "id": 1,
              "isSuperuser": true,
              "name": "Initial User",
              "username": "username",
            },
            Object {
              "_links": Object {
                "self": Object {
                  "href": "http://127.0.0.1:8081/api/v2/users/2/",
                },
              },
              "email": "readonly@test.com",
              "enabled": true,
              "id": 2,
              "isSuperuser": false,
              "name": "Readonly",
              "username": "readonly",
            },
          ],
          "loading": false,
          "next": null,
          "params": Object {
            "sort": "name",
          },
        },
        "userListFilters": Object {
          "query": "",
        },
      }
    }
    baseUrl=""
    clearSchema={[MockFunction]}
    displaySubmit={false}
    eventSettings={
      Object {
        "statuses": Object {
          "active": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Active",
            "show_authorization": true,
          },
          "approved": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Approved",
            "show_authorization": true,
          },
          "cancelled": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Cancelled",
            "show_authorization": true,
          },
          "ended": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Ended",
            "show_authorization": true,
          },
          "expired": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Expired",
            "show_authorization": true,
          },
          "open": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": true,
            "is_read_only": false,
            "name": "Open",
            "show_authorization": false,
          },
          "pending": Object {
            "allow_authorization": true,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": true,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Pending Approval",
            "show_authorization": true,
          },
          "published": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Published",
            "show_authorization": true,
          },
          "rejected": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": true,
            "allow_open": true,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Rejected",
            "show_authorization": true,
          },
          "scheduled": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Scheduled",
            "show_authorization": true,
          },
        },
      }
    }
    expandAll={[Function]}
    fetchSchema={[MockFunction]}
    fieldsToTop={Array []}
    formContext={Object {}}
    formData={
      Object {
        "statuses": Object {
          "active": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Active",
            "show_authorization": true,
          },
          "approved": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Approved",
            "show_authorization": true,
          },
          "cancelled": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Cancelled",
            "show_authorization": true,
          },
          "ended": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Ended",
            "show_authorization": true,
          },
          "expired": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Expired",
            "show_authorization": true,
          },
          "open": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": true,
            "is_read_only": false,
            "name": "Open",
            "show_authorization": false,
          },
          "pending": Object {
            "allow_authorization": true,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": true,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Pending Approval",
            "show_authorization": true,
          },
          "published": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Published",
            "show_authorization": true,
          },
          "rejected": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": true,
            "allow_open": true,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Rejected",
            "show_authorization": true,
          },
          "scheduled": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Scheduled",
            "show_authorization": true,
          },
        },
      }
    }
    formRef={[Function]}
    handleChange={[Function]}
    handleFormChange={[Function]}
    handleSelection={[Function]}
    handleSubmit={[MockFunction]}
    hasCurrentProjectSettings={true}
    isExpanded={Object {}}
    match={
      Object {
        "params": Object {
          "id": 1,
        },
      }
    }
    onFetchAvailableUsers={[MockFunction]}
    openKeys={Array []}
    rootAsRow={false}
    settingSchema={
      Object {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "additionalProperties": false,
        "description": "Project Setting - Event Settings",
        "properties": Object {
          "statuses": Object {
            "additionalProperties": false,
            "properties": Object {
              "cancelled": Object {
                "additionalProperties": false,
                "properties": Object {
                  "allow_delete": Object {
                    "type": "boolean",
                  },
                  "is_read_only": Object {
                    "type": "boolean",
                  },
                  "name": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "is_read_only",
                ],
                "type": "object",
              },
              "scheduled": Object {
                "additionalProperties": false,
                "properties": Object {
                  "allow_delete": Object {
                    "type": "boolean",
                  },
                  "is_read_only": Object {
                    "type": "boolean",
                  },
                  "name": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "is_read_only",
                ],
                "type": "object",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
        "version": 1,
      }
    }
    uiSchema={Object {}}
    updateProjectSetting={[MockFunction]}
  >
    <Form
      ArrayFieldTemplate={[Function]}
      ErrorList={[Function]}
      FieldTemplate={[Function]}
      ObjectFieldTemplate={[Function]}
      className="form formWidth"
      disabled={false}
      formContext={Object {}}
      formData={
        Object {
          "statuses": Object {
            "active": Object {
              "allow_authorization": false,
              "allow_cancel": true,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Active",
              "show_authorization": true,
            },
            "approved": Object {
              "allow_authorization": false,
              "allow_cancel": true,
              "allow_delete": true,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Approved",
              "show_authorization": true,
            },
            "cancelled": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Cancelled",
              "show_authorization": true,
            },
            "ended": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Ended",
              "show_authorization": true,
            },
            "expired": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Expired",
              "show_authorization": true,
            },
            "open": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": true,
              "allow_open": false,
              "allow_request_approval": true,
              "is_read_only": false,
              "name": "Open",
              "show_authorization": false,
            },
            "pending": Object {
              "allow_authorization": true,
              "allow_cancel": true,
              "allow_delete": true,
              "allow_open": true,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Pending Approval",
              "show_authorization": true,
            },
            "published": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Published",
              "show_authorization": true,
            },
            "rejected": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": true,
              "allow_open": true,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Rejected",
              "show_authorization": true,
            },
            "scheduled": Object {
              "allow_authorization": false,
              "allow_cancel": true,
              "allow_delete": true,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Scheduled",
              "show_authorization": true,
            },
          },
        }
      }
      key=""
      liveValidate={false}
      noHtml5Validate={false}
      noValidate={false}
      omitExtraData={false}
      onChange={[Function]}
      onSubmit={[MockFunction]}
      safeRenderCompletion={false}
      schema={
        Object {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "Project Setting - Event Settings",
          "properties": Object {
            "statuses": Object {
              "additionalProperties": false,
              "properties": Object {
                "cancelled": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "allow_delete": Object {
                      "type": "boolean",
                    },
                    "is_read_only": Object {
                      "type": "boolean",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                    "is_read_only",
                  ],
                  "type": "object",
                },
                "scheduled": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "allow_delete": Object {
                      "type": "boolean",
                    },
                    "is_read_only": Object {
                      "type": "boolean",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                    "is_read_only",
                  ],
                  "type": "object",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
          "version": 1,
        }
      }
      uiSchema={Object {}}
      widgets={
        Object {
          "BaseInput": [Function],
          "CheckboxWidget": [Function],
          "SelectWidget": [Function],
        }
      }
    >
      <form
        className="form formWidth"
        noValidate={false}
        onSubmit={[Function]}
      >
        <SchemaField
          autofocus={false}
          disabled={false}
          errorSchema={Object {}}
          formContext={Object {}}
          formData={
            Object {
              "statuses": Object {
                "active": Object {
                  "allow_authorization": false,
                  "allow_cancel": true,
                  "allow_delete": false,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Active",
                  "show_authorization": true,
                },
                "approved": Object {
                  "allow_authorization": false,
                  "allow_cancel": true,
                  "allow_delete": true,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Approved",
                  "show_authorization": true,
                },
                "cancelled": Object {
                  "allow_authorization": false,
                  "allow_cancel": false,
                  "allow_delete": false,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Cancelled",
                  "show_authorization": true,
                },
                "ended": Object {
                  "allow_authorization": false,
                  "allow_cancel": false,
                  "allow_delete": false,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Ended",
                  "show_authorization": true,
                },
                "expired": Object {
                  "allow_authorization": false,
                  "allow_cancel": false,
                  "allow_delete": false,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Expired",
                  "show_authorization": true,
                },
                "open": Object {
                  "allow_authorization": false,
                  "allow_cancel": false,
                  "allow_delete": true,
                  "allow_open": false,
                  "allow_request_approval": true,
                  "is_read_only": false,
                  "name": "Open",
                  "show_authorization": false,
                },
                "pending": Object {
                  "allow_authorization": true,
                  "allow_cancel": true,
                  "allow_delete": true,
                  "allow_open": true,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Pending Approval",
                  "show_authorization": true,
                },
                "published": Object {
                  "allow_authorization": false,
                  "allow_cancel": false,
                  "allow_delete": false,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Published",
                  "show_authorization": true,
                },
                "rejected": Object {
                  "allow_authorization": false,
                  "allow_cancel": false,
                  "allow_delete": true,
                  "allow_open": true,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Rejected",
                  "show_authorization": true,
                },
                "scheduled": Object {
                  "allow_authorization": false,
                  "allow_cancel": true,
                  "allow_delete": true,
                  "allow_open": false,
                  "allow_request_approval": false,
                  "is_read_only": true,
                  "name": "Scheduled",
                  "show_authorization": true,
                },
              },
            }
          }
          idSchema={
            Object {
              "$id": "root",
              "statuses": Object {
                "$id": "root_statuses",
                "cancelled": Object {
                  "$id": "root_statuses_cancelled",
                  "allow_delete": Object {
                    "$id": "root_statuses_cancelled_allow_delete",
                  },
                  "is_read_only": Object {
                    "$id": "root_statuses_cancelled_is_read_only",
                  },
                  "name": Object {
                    "$id": "root_statuses_cancelled_name",
                  },
                },
                "scheduled": Object {
                  "$id": "root_statuses_scheduled",
                  "allow_delete": Object {
                    "$id": "root_statuses_scheduled_allow_delete",
                  },
                  "is_read_only": Object {
                    "$id": "root_statuses_scheduled_is_read_only",
                  },
                  "name": Object {
                    "$id": "root_statuses_scheduled_name",
                  },
                },
              },
            }
          }
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readonly={false}
          registry={
            Object {
              "ArrayFieldTemplate": [Function],
              "FieldTemplate": [Function],
              "ObjectFieldTemplate": [Function],
              "definitions": Object {},
              "fields": Object {
                "AnyOfField": [Function],
                "ArrayField": [Function],
                "BooleanField": [Function],
                "DescriptionField": [Function],
                "NullField": [Function],
                "NumberField": [Function],
                "ObjectField": [Function],
                "OneOfField": [Function],
                "SchemaField": [Function],
                "StringField": [Function],
                "TitleField": [Function],
                "UnsupportedField": [Function],
              },
              "formContext": Object {},
              "widgets": Object {
                "AltDateTimeWidget": [Function],
                "AltDateWidget": [Function],
                "BaseInput": [Function],
                "CheckboxWidget": [Function],
                "CheckboxesWidget": [Function],
                "ColorWidget": [Function],
                "DateTimeWidget": [Function],
                "DateWidget": [Function],
                "EmailWidget": [Function],
                "FileWidget": [Function],
                "HiddenWidget": [Function],
                "PasswordWidget": [Function],
                "RadioWidget": [Function],
                "RangeWidget": [Function],
                "SelectWidget": [Function],
                "TextWidget": [Function],
                "TextareaWidget": [Function],
                "URLWidget": [Function],
                "UpDownWidget": [Function],
              },
            }
          }
          safeRenderCompletion={false}
          schema={
            Object {
              "$schema": "http://json-schema.org/draft-07/schema#",
              "additionalProperties": false,
              "description": "Project Setting - Event Settings",
              "properties": Object {
                "statuses": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "cancelled": Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "allow_delete": Object {
                          "type": "boolean",
                        },
                        "is_read_only": Object {
                          "type": "boolean",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "name",
                        "is_read_only",
                      ],
                      "type": "object",
                    },
                    "scheduled": Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "allow_delete": Object {
                          "type": "boolean",
                        },
                        "is_read_only": Object {
                          "type": "boolean",
                        },
                        "name": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "name",
                        "is_read_only",
                      ],
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "object",
              "version": 1,
            }
          }
          uiSchema={Object {}}
        >
          <CustomFieldTemplate
            classNames="form-group field field-object"
            description={
              <DescriptionField
                description="Project Setting - Event Settings"
                formContext={Object {}}
                id="root__description"
              />
            }
            disabled={false}
            displayLabel={false}
            errors={<ErrorList />}
            fields={
              Object {
                "AnyOfField": [Function],
                "ArrayField": [Function],
                "BooleanField": [Function],
                "DescriptionField": [Function],
                "NullField": [Function],
                "NumberField": [Function],
                "ObjectField": [Function],
                "OneOfField": [Function],
                "SchemaField": [Function],
                "StringField": [Function],
                "TitleField": [Function],
                "UnsupportedField": [Function],
              }
            }
            formContext={Object {}}
            help={<Help />}
            hidden={false}
            id="root"
            rawDescription="Project Setting - Event Settings"
            readonly={false}
            schema={
              Object {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "additionalProperties": false,
                "description": "Project Setting - Event Settings",
                "properties": Object {
                  "statuses": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "cancelled": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "allow_delete": Object {
                            "type": "boolean",
                          },
                          "is_read_only": Object {
                            "type": "boolean",
                          },
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                          "is_read_only",
                        ],
                        "type": "object",
                      },
                      "scheduled": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "allow_delete": Object {
                            "type": "boolean",
                          },
                          "is_read_only": Object {
                            "type": "boolean",
                          },
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                          "is_read_only",
                        ],
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
                "version": 1,
              }
            }
            uiSchema={Object {}}
          >
            <div
              className="form-group field field-object"
            >
              <ObjectField
                autofocus={false}
                disabled={false}
                errorSchema={Object {}}
                formContext={Object {}}
                formData={
                  Object {
                    "statuses": Object {
                      "active": Object {
                        "allow_authorization": false,
                        "allow_cancel": true,
                        "allow_delete": false,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Active",
                        "show_authorization": true,
                      },
                      "approved": Object {
                        "allow_authorization": false,
                        "allow_cancel": true,
                        "allow_delete": true,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Approved",
                        "show_authorization": true,
                      },
                      "cancelled": Object {
                        "allow_authorization": false,
                        "allow_cancel": false,
                        "allow_delete": false,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Cancelled",
                        "show_authorization": true,
                      },
                      "ended": Object {
                        "allow_authorization": false,
                        "allow_cancel": false,
                        "allow_delete": false,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Ended",
                        "show_authorization": true,
                      },
                      "expired": Object {
                        "allow_authorization": false,
                        "allow_cancel": false,
                        "allow_delete": false,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Expired",
                        "show_authorization": true,
                      },
                      "open": Object {
                        "allow_authorization": false,
                        "allow_cancel": false,
                        "allow_delete": true,
                        "allow_open": false,
                        "allow_request_approval": true,
                        "is_read_only": false,
                        "name": "Open",
                        "show_authorization": false,
                      },
                      "pending": Object {
                        "allow_authorization": true,
                        "allow_cancel": true,
                        "allow_delete": true,
                        "allow_open": true,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Pending Approval",
                        "show_authorization": true,
                      },
                      "published": Object {
                        "allow_authorization": false,
                        "allow_cancel": false,
                        "allow_delete": false,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Published",
                        "show_authorization": true,
                      },
                      "rejected": Object {
                        "allow_authorization": false,
                        "allow_cancel": false,
                        "allow_delete": true,
                        "allow_open": true,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Rejected",
                        "show_authorization": true,
                      },
                      "scheduled": Object {
                        "allow_authorization": false,
                        "allow_cancel": true,
                        "allow_delete": true,
                        "allow_open": false,
                        "allow_request_approval": false,
                        "is_read_only": true,
                        "name": "Scheduled",
                        "show_authorization": true,
                      },
                    },
                  }
                }
                idSchema={
                  Object {
                    "$id": "root",
                    "statuses": Object {
                      "$id": "root_statuses",
                      "cancelled": Object {
                        "$id": "root_statuses_cancelled",
                        "allow_delete": Object {
                          "$id": "root_statuses_cancelled_allow_delete",
                        },
                        "is_read_only": Object {
                          "$id": "root_statuses_cancelled_is_read_only",
                        },
                        "name": Object {
                          "$id": "root_statuses_cancelled_name",
                        },
                      },
                      "scheduled": Object {
                        "$id": "root_statuses_scheduled",
                        "allow_delete": Object {
                          "$id": "root_statuses_scheduled_allow_delete",
                        },
                        "is_read_only": Object {
                          "$id": "root_statuses_scheduled_is_read_only",
                        },
                        "name": Object {
                          "$id": "root_statuses_scheduled_name",
                        },
                      },
                    },
                  }
                }
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                readonly={false}
                registry={
                  Object {
                    "ArrayFieldTemplate": [Function],
                    "FieldTemplate": [Function],
                    "ObjectFieldTemplate": [Function],
                    "definitions": Object {},
                    "fields": Object {
                      "AnyOfField": [Function],
                      "ArrayField": [Function],
                      "BooleanField": [Function],
                      "DescriptionField": [Function],
                      "NullField": [Function],
                      "NumberField": [Function],
                      "ObjectField": [Function],
                      "OneOfField": [Function],
                      "SchemaField": [Function],
                      "StringField": [Function],
                      "TitleField": [Function],
                      "UnsupportedField": [Function],
                    },
                    "formContext": Object {},
                    "widgets": Object {
                      "AltDateTimeWidget": [Function],
                      "AltDateWidget": [Function],
                      "BaseInput": [Function],
                      "CheckboxWidget": [Function],
                      "CheckboxesWidget": [Function],
                      "ColorWidget": [Function],
                      "DateTimeWidget": [Function],
                      "DateWidget": [Function],
                      "EmailWidget": [Function],
                      "FileWidget": [Function],
                      "HiddenWidget": [Function],
                      "PasswordWidget": [Function],
                      "RadioWidget": [Function],
                      "RangeWidget": [Function],
                      "SelectWidget": [Function],
                      "TextWidget": [Function],
                      "TextareaWidget": [Function],
                      "URLWidget": [Function],
                      "UpDownWidget": [Function],
                    },
                  }
                }
                required={false}
                safeRenderCompletion={false}
                schema={
                  Object {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "additionalProperties": false,
                    "description": "Project Setting - Event Settings",
                    "properties": Object {
                      "statuses": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "cancelled": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "allow_delete": Object {
                                "type": "boolean",
                              },
                              "is_read_only": Object {
                                "type": "boolean",
                              },
                              "name": Object {
                                "type": "string",
                              },
                            },
                            "required": Array [
                              "name",
                              "is_read_only",
                            ],
                            "type": "object",
                          },
                          "scheduled": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "allow_delete": Object {
                                "type": "boolean",
                              },
                              "is_read_only": Object {
                                "type": "boolean",
                              },
                              "name": Object {
                                "type": "string",
                              },
                            },
                            "required": Array [
                              "name",
                              "is_read_only",
                            ],
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                    "version": 1,
                  }
                }
                uiSchema={
                  Object {
                    "classNames": undefined,
                  }
                }
              >
                <ObjectFieldTemplate
                  DescriptionField={[Function]}
                  TitleField={[Function]}
                  description="Project Setting - Event Settings"
                  disabled={false}
                  formContext={Object {}}
                  formData={
                    Object {
                      "statuses": Object {
                        "active": Object {
                          "allow_authorization": false,
                          "allow_cancel": true,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Active",
                          "show_authorization": true,
                        },
                        "approved": Object {
                          "allow_authorization": false,
                          "allow_cancel": true,
                          "allow_delete": true,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Approved",
                          "show_authorization": true,
                        },
                        "cancelled": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Cancelled",
                          "show_authorization": true,
                        },
                        "ended": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Ended",
                          "show_authorization": true,
                        },
                        "expired": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Expired",
                          "show_authorization": true,
                        },
                        "open": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": true,
                          "allow_open": false,
                          "allow_request_approval": true,
                          "is_read_only": false,
                          "name": "Open",
                          "show_authorization": false,
                        },
                        "pending": Object {
                          "allow_authorization": true,
                          "allow_cancel": true,
                          "allow_delete": true,
                          "allow_open": true,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Pending Approval",
                          "show_authorization": true,
                        },
                        "published": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Published",
                          "show_authorization": true,
                        },
                        "rejected": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": true,
                          "allow_open": true,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Rejected",
                          "show_authorization": true,
                        },
                        "scheduled": Object {
                          "allow_authorization": false,
                          "allow_cancel": true,
                          "allow_delete": true,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Scheduled",
                          "show_authorization": true,
                        },
                      },
                    }
                  }
                  idSchema={
                    Object {
                      "$id": "root",
                      "statuses": Object {
                        "$id": "root_statuses",
                        "cancelled": Object {
                          "$id": "root_statuses_cancelled",
                          "allow_delete": Object {
                            "$id": "root_statuses_cancelled_allow_delete",
                          },
                          "is_read_only": Object {
                            "$id": "root_statuses_cancelled_is_read_only",
                          },
                          "name": Object {
                            "$id": "root_statuses_cancelled_name",
                          },
                        },
                        "scheduled": Object {
                          "$id": "root_statuses_scheduled",
                          "allow_delete": Object {
                            "$id": "root_statuses_scheduled_allow_delete",
                          },
                          "is_read_only": Object {
                            "$id": "root_statuses_scheduled_is_read_only",
                          },
                          "name": Object {
                            "$id": "root_statuses_scheduled_name",
                          },
                        },
                      },
                    }
                  }
                  onAddClick={[Function]}
                  properties={
                    Array [
                      Object {
                        "content": <SchemaField
                          autofocus={false}
                          disabled={false}
                          errorSchema={Object {}}
                          formData={
                            Object {
                              "active": Object {
                                "allow_authorization": false,
                                "allow_cancel": true,
                                "allow_delete": false,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Active",
                                "show_authorization": true,
                              },
                              "approved": Object {
                                "allow_authorization": false,
                                "allow_cancel": true,
                                "allow_delete": true,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Approved",
                                "show_authorization": true,
                              },
                              "cancelled": Object {
                                "allow_authorization": false,
                                "allow_cancel": false,
                                "allow_delete": false,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Cancelled",
                                "show_authorization": true,
                              },
                              "ended": Object {
                                "allow_authorization": false,
                                "allow_cancel": false,
                                "allow_delete": false,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Ended",
                                "show_authorization": true,
                              },
                              "expired": Object {
                                "allow_authorization": false,
                                "allow_cancel": false,
                                "allow_delete": false,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Expired",
                                "show_authorization": true,
                              },
                              "open": Object {
                                "allow_authorization": false,
                                "allow_cancel": false,
                                "allow_delete": true,
                                "allow_open": false,
                                "allow_request_approval": true,
                                "is_read_only": false,
                                "name": "Open",
                                "show_authorization": false,
                              },
                              "pending": Object {
                                "allow_authorization": true,
                                "allow_cancel": true,
                                "allow_delete": true,
                                "allow_open": true,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Pending Approval",
                                "show_authorization": true,
                              },
                              "published": Object {
                                "allow_authorization": false,
                                "allow_cancel": false,
                                "allow_delete": false,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Published",
                                "show_authorization": true,
                              },
                              "rejected": Object {
                                "allow_authorization": false,
                                "allow_cancel": false,
                                "allow_delete": true,
                                "allow_open": true,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Rejected",
                                "show_authorization": true,
                              },
                              "scheduled": Object {
                                "allow_authorization": false,
                                "allow_cancel": true,
                                "allow_delete": true,
                                "allow_open": false,
                                "allow_request_approval": false,
                                "is_read_only": true,
                                "name": "Scheduled",
                                "show_authorization": true,
                              },
                            }
                          }
                          idSchema={
                            Object {
                              "$id": "root_statuses",
                              "cancelled": Object {
                                "$id": "root_statuses_cancelled",
                                "allow_delete": Object {
                                  "$id": "root_statuses_cancelled_allow_delete",
                                },
                                "is_read_only": Object {
                                  "$id": "root_statuses_cancelled_is_read_only",
                                },
                                "name": Object {
                                  "$id": "root_statuses_cancelled_name",
                                },
                              },
                              "scheduled": Object {
                                "$id": "root_statuses_scheduled",
                                "allow_delete": Object {
                                  "$id": "root_statuses_scheduled_allow_delete",
                                },
                                "is_read_only": Object {
                                  "$id": "root_statuses_scheduled_is_read_only",
                                },
                                "name": Object {
                                  "$id": "root_statuses_scheduled_name",
                                },
                              },
                            }
                          }
                          name="statuses"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onDropPropertyClick={[Function]}
                          onFocus={[Function]}
                          onKeyChange={[Function]}
                          readonly={false}
                          registry={
                            Object {
                              "ArrayFieldTemplate": [Function],
                              "FieldTemplate": [Function],
                              "ObjectFieldTemplate": [Function],
                              "definitions": Object {},
                              "fields": Object {
                                "AnyOfField": [Function],
                                "ArrayField": [Function],
                                "BooleanField": [Function],
                                "DescriptionField": [Function],
                                "NullField": [Function],
                                "NumberField": [Function],
                                "ObjectField": [Function],
                                "OneOfField": [Function],
                                "SchemaField": [Function],
                                "StringField": [Function],
                                "TitleField": [Function],
                                "UnsupportedField": [Function],
                              },
                              "formContext": Object {},
                              "widgets": Object {
                                "AltDateTimeWidget": [Function],
                                "AltDateWidget": [Function],
                                "BaseInput": [Function],
                                "CheckboxWidget": [Function],
                                "CheckboxesWidget": [Function],
                                "ColorWidget": [Function],
                                "DateTimeWidget": [Function],
                                "DateWidget": [Function],
                                "EmailWidget": [Function],
                                "FileWidget": [Function],
                                "HiddenWidget": [Function],
                                "PasswordWidget": [Function],
                                "RadioWidget": [Function],
                                "RangeWidget": [Function],
                                "SelectWidget": [Function],
                                "TextWidget": [Function],
                                "TextareaWidget": [Function],
                                "URLWidget": [Function],
                                "UpDownWidget": [Function],
                              },
                            }
                          }
                          required={false}
                          schema={
                            Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "cancelled": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "allow_delete": Object {
                                      "type": "boolean",
                                    },
                                    "is_read_only": Object {
                                      "type": "boolean",
                                    },
                                    "name": Object {
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "name",
                                    "is_read_only",
                                  ],
                                  "type": "object",
                                },
                                "scheduled": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "allow_delete": Object {
                                      "type": "boolean",
                                    },
                                    "is_read_only": Object {
                                      "type": "boolean",
                                    },
                                    "name": Object {
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "name",
                                    "is_read_only",
                                  ],
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            }
                          }
                          uiSchema={Object {}}
                          wasPropertyKeyModified={false}
                        />,
                        "disabled": false,
                        "name": "statuses",
                        "readonly": false,
                        "required": false,
                      },
                    ]
                  }
                  readonly={false}
                  required={false}
                  schema={
                    Object {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "additionalProperties": false,
                      "description": "Project Setting - Event Settings",
                      "properties": Object {
                        "statuses": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "cancelled": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "allow_delete": Object {
                                  "type": "boolean",
                                },
                                "is_read_only": Object {
                                  "type": "boolean",
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "is_read_only",
                              ],
                              "type": "object",
                            },
                            "scheduled": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "allow_delete": Object {
                                  "type": "boolean",
                                },
                                "is_read_only": Object {
                                  "type": "boolean",
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "is_read_only",
                              ],
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                      },
                      "type": "object",
                      "version": 1,
                    }
                  }
                  uiSchema={
                    Object {
                      "classNames": undefined,
                    }
                  }
                >
                  <div
                    key="statuses"
                  >
                    <SchemaField
                      autofocus={false}
                      disabled={false}
                      errorSchema={Object {}}
                      formData={
                        Object {
                          "active": Object {
                            "allow_authorization": false,
                            "allow_cancel": true,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Active",
                            "show_authorization": true,
                          },
                          "approved": Object {
                            "allow_authorization": false,
                            "allow_cancel": true,
                            "allow_delete": true,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Approved",
                            "show_authorization": true,
                          },
                          "cancelled": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Cancelled",
                            "show_authorization": true,
                          },
                          "ended": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Ended",
                            "show_authorization": true,
                          },
                          "expired": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Expired",
                            "show_authorization": true,
                          },
                          "open": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": true,
                            "allow_open": false,
                            "allow_request_approval": true,
                            "is_read_only": false,
                            "name": "Open",
                            "show_authorization": false,
                          },
                          "pending": Object {
                            "allow_authorization": true,
                            "allow_cancel": true,
                            "allow_delete": true,
                            "allow_open": true,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Pending Approval",
                            "show_authorization": true,
                          },
                          "published": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Published",
                            "show_authorization": true,
                          },
                          "rejected": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": true,
                            "allow_open": true,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Rejected",
                            "show_authorization": true,
                          },
                          "scheduled": Object {
                            "allow_authorization": false,
                            "allow_cancel": true,
                            "allow_delete": true,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Scheduled",
                            "show_authorization": true,
                          },
                        }
                      }
                      idSchema={
                        Object {
                          "$id": "root_statuses",
                          "cancelled": Object {
                            "$id": "root_statuses_cancelled",
                            "allow_delete": Object {
                              "$id": "root_statuses_cancelled_allow_delete",
                            },
                            "is_read_only": Object {
                              "$id": "root_statuses_cancelled_is_read_only",
                            },
                            "name": Object {
                              "$id": "root_statuses_cancelled_name",
                            },
                          },
                          "scheduled": Object {
                            "$id": "root_statuses_scheduled",
                            "allow_delete": Object {
                              "$id": "root_statuses_scheduled_allow_delete",
                            },
                            "is_read_only": Object {
                              "$id": "root_statuses_scheduled_is_read_only",
                            },
                            "name": Object {
                              "$id": "root_statuses_scheduled_name",
                            },
                          },
                        }
                      }
                      key="statuses"
                      name="statuses"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onDropPropertyClick={[Function]}
                      onFocus={[Function]}
                      onKeyChange={[Function]}
                      readonly={false}
                      registry={
                        Object {
                          "ArrayFieldTemplate": [Function],
                          "FieldTemplate": [Function],
                          "ObjectFieldTemplate": [Function],
                          "definitions": Object {},
                          "fields": Object {
                            "AnyOfField": [Function],
                            "ArrayField": [Function],
                            "BooleanField": [Function],
                            "DescriptionField": [Function],
                            "NullField": [Function],
                            "NumberField": [Function],
                            "ObjectField": [Function],
                            "OneOfField": [Function],
                            "SchemaField": [Function],
                            "StringField": [Function],
                            "TitleField": [Function],
                            "UnsupportedField": [Function],
                          },
                          "formContext": Object {},
                          "widgets": Object {
                            "AltDateTimeWidget": [Function],
                            "AltDateWidget": [Function],
                            "BaseInput": [Function],
                            "CheckboxWidget": [Function],
                            "CheckboxesWidget": [Function],
                            "ColorWidget": [Function],
                            "DateTimeWidget": [Function],
                            "DateWidget": [Function],
                            "EmailWidget": [Function],
                            "FileWidget": [Function],
                            "HiddenWidget": [Function],
                            "PasswordWidget": [Function],
                            "RadioWidget": [Function],
                            "RangeWidget": [Function],
                            "SelectWidget": [Function],
                            "TextWidget": [Function],
                            "TextareaWidget": [Function],
                            "URLWidget": [Function],
                            "UpDownWidget": [Function],
                          },
                        }
                      }
                      required={false}
                      schema={
                        Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "cancelled": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "allow_delete": Object {
                                  "type": "boolean",
                                },
                                "is_read_only": Object {
                                  "type": "boolean",
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "is_read_only",
                              ],
                              "type": "object",
                            },
                            "scheduled": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "allow_delete": Object {
                                  "type": "boolean",
                                },
                                "is_read_only": Object {
                                  "type": "boolean",
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "is_read_only",
                              ],
                              "type": "object",
                            },
                          },
                          "type": "object",
                        }
                      }
                      uiSchema={Object {}}
                      wasPropertyKeyModified={false}
                    >
                      <CustomFieldTemplate
                        classNames="form-group field field-object"
                        description={
                          <DescriptionField
                            formContext={Object {}}
                            id="root_statuses__description"
                          />
                        }
                        disabled={false}
                        displayLabel={false}
                        errors={<ErrorList />}
                        fields={
                          Object {
                            "AnyOfField": [Function],
                            "ArrayField": [Function],
                            "BooleanField": [Function],
                            "DescriptionField": [Function],
                            "NullField": [Function],
                            "NumberField": [Function],
                            "ObjectField": [Function],
                            "OneOfField": [Function],
                            "SchemaField": [Function],
                            "StringField": [Function],
                            "TitleField": [Function],
                            "UnsupportedField": [Function],
                          }
                        }
                        formContext={Object {}}
                        help={<Help />}
                        hidden={false}
                        id="root_statuses"
                        label="statuses"
                        onDropPropertyClick={[Function]}
                        onKeyChange={[Function]}
                        readonly={false}
                        required={false}
                        schema={
                          Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "cancelled": Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "allow_delete": Object {
                                    "type": "boolean",
                                  },
                                  "is_read_only": Object {
                                    "type": "boolean",
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "is_read_only",
                                ],
                                "type": "object",
                              },
                              "scheduled": Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "allow_delete": Object {
                                    "type": "boolean",
                                  },
                                  "is_read_only": Object {
                                    "type": "boolean",
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "is_read_only",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          }
                        }
                        uiSchema={Object {}}
                      >
                        <div
                          className="form-group field field-object"
                        >
                          <ObjectField
                            autofocus={false}
                            disabled={false}
                            errorSchema={Object {}}
                            formContext={Object {}}
                            formData={
                              Object {
                                "active": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": true,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Active",
                                  "show_authorization": true,
                                },
                                "approved": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": true,
                                  "allow_delete": true,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Approved",
                                  "show_authorization": true,
                                },
                                "cancelled": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Cancelled",
                                  "show_authorization": true,
                                },
                                "ended": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Ended",
                                  "show_authorization": true,
                                },
                                "expired": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Expired",
                                  "show_authorization": true,
                                },
                                "open": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": true,
                                  "allow_open": false,
                                  "allow_request_approval": true,
                                  "is_read_only": false,
                                  "name": "Open",
                                  "show_authorization": false,
                                },
                                "pending": Object {
                                  "allow_authorization": true,
                                  "allow_cancel": true,
                                  "allow_delete": true,
                                  "allow_open": true,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Pending Approval",
                                  "show_authorization": true,
                                },
                                "published": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Published",
                                  "show_authorization": true,
                                },
                                "rejected": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": true,
                                  "allow_open": true,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Rejected",
                                  "show_authorization": true,
                                },
                                "scheduled": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": true,
                                  "allow_delete": true,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Scheduled",
                                  "show_authorization": true,
                                },
                              }
                            }
                            idSchema={
                              Object {
                                "$id": "root_statuses",
                                "cancelled": Object {
                                  "$id": "root_statuses_cancelled",
                                  "allow_delete": Object {
                                    "$id": "root_statuses_cancelled_allow_delete",
                                  },
                                  "is_read_only": Object {
                                    "$id": "root_statuses_cancelled_is_read_only",
                                  },
                                  "name": Object {
                                    "$id": "root_statuses_cancelled_name",
                                  },
                                },
                                "scheduled": Object {
                                  "$id": "root_statuses_scheduled",
                                  "allow_delete": Object {
                                    "$id": "root_statuses_scheduled_allow_delete",
                                  },
                                  "is_read_only": Object {
                                    "$id": "root_statuses_scheduled_is_read_only",
                                  },
                                  "name": Object {
                                    "$id": "root_statuses_scheduled_name",
                                  },
                                },
                              }
                            }
                            name="statuses"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDropPropertyClick={[Function]}
                            onFocus={[Function]}
                            onKeyChange={[Function]}
                            readonly={false}
                            registry={
                              Object {
                                "ArrayFieldTemplate": [Function],
                                "FieldTemplate": [Function],
                                "ObjectFieldTemplate": [Function],
                                "definitions": Object {},
                                "fields": Object {
                                  "AnyOfField": [Function],
                                  "ArrayField": [Function],
                                  "BooleanField": [Function],
                                  "DescriptionField": [Function],
                                  "NullField": [Function],
                                  "NumberField": [Function],
                                  "ObjectField": [Function],
                                  "OneOfField": [Function],
                                  "SchemaField": [Function],
                                  "StringField": [Function],
                                  "TitleField": [Function],
                                  "UnsupportedField": [Function],
                                },
                                "formContext": Object {},
                                "widgets": Object {
                                  "AltDateTimeWidget": [Function],
                                  "AltDateWidget": [Function],
                                  "BaseInput": [Function],
                                  "CheckboxWidget": [Function],
                                  "CheckboxesWidget": [Function],
                                  "ColorWidget": [Function],
                                  "DateTimeWidget": [Function],
                                  "DateWidget": [Function],
                                  "EmailWidget": [Function],
                                  "FileWidget": [Function],
                                  "HiddenWidget": [Function],
                                  "PasswordWidget": [Function],
                                  "RadioWidget": [Function],
                                  "RangeWidget": [Function],
                                  "SelectWidget": [Function],
                                  "TextWidget": [Function],
                                  "TextareaWidget": [Function],
                                  "URLWidget": [Function],
                                  "UpDownWidget": [Function],
                                },
                              }
                            }
                            required={false}
                            schema={
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "cancelled": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "allow_delete": Object {
                                        "type": "boolean",
                                      },
                                      "is_read_only": Object {
                                        "type": "boolean",
                                      },
                                      "name": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "name",
                                      "is_read_only",
                                    ],
                                    "type": "object",
                                  },
                                  "scheduled": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "allow_delete": Object {
                                        "type": "boolean",
                                      },
                                      "is_read_only": Object {
                                        "type": "boolean",
                                      },
                                      "name": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "name",
                                      "is_read_only",
                                    ],
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                              }
                            }
                            uiSchema={
                              Object {
                                "classNames": undefined,
                              }
                            }
                            wasPropertyKeyModified={false}
                          >
                            <ObjectFieldTemplate
                              DescriptionField={[Function]}
                              TitleField={[Function]}
                              disabled={false}
                              formContext={Object {}}
                              formData={
                                Object {
                                  "active": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": true,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Active",
                                    "show_authorization": true,
                                  },
                                  "approved": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": true,
                                    "allow_delete": true,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Approved",
                                    "show_authorization": true,
                                  },
                                  "cancelled": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Cancelled",
                                    "show_authorization": true,
                                  },
                                  "ended": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Ended",
                                    "show_authorization": true,
                                  },
                                  "expired": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Expired",
                                    "show_authorization": true,
                                  },
                                  "open": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": true,
                                    "allow_open": false,
                                    "allow_request_approval": true,
                                    "is_read_only": false,
                                    "name": "Open",
                                    "show_authorization": false,
                                  },
                                  "pending": Object {
                                    "allow_authorization": true,
                                    "allow_cancel": true,
                                    "allow_delete": true,
                                    "allow_open": true,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Pending Approval",
                                    "show_authorization": true,
                                  },
                                  "published": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Published",
                                    "show_authorization": true,
                                  },
                                  "rejected": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": true,
                                    "allow_open": true,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Rejected",
                                    "show_authorization": true,
                                  },
                                  "scheduled": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": true,
                                    "allow_delete": true,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Scheduled",
                                    "show_authorization": true,
                                  },
                                }
                              }
                              idSchema={
                                Object {
                                  "$id": "root_statuses",
                                  "cancelled": Object {
                                    "$id": "root_statuses_cancelled",
                                    "allow_delete": Object {
                                      "$id": "root_statuses_cancelled_allow_delete",
                                    },
                                    "is_read_only": Object {
                                      "$id": "root_statuses_cancelled_is_read_only",
                                    },
                                    "name": Object {
                                      "$id": "root_statuses_cancelled_name",
                                    },
                                  },
                                  "scheduled": Object {
                                    "$id": "root_statuses_scheduled",
                                    "allow_delete": Object {
                                      "$id": "root_statuses_scheduled_allow_delete",
                                    },
                                    "is_read_only": Object {
                                      "$id": "root_statuses_scheduled_is_read_only",
                                    },
                                    "name": Object {
                                      "$id": "root_statuses_scheduled_name",
                                    },
                                  },
                                }
                              }
                              onAddClick={[Function]}
                              properties={
                                Array [
                                  Object {
                                    "content": <SchemaField
                                      autofocus={false}
                                      disabled={false}
                                      errorSchema={Object {}}
                                      formData={
                                        Object {
                                          "allow_authorization": false,
                                          "allow_cancel": true,
                                          "allow_delete": true,
                                          "allow_open": false,
                                          "allow_request_approval": false,
                                          "is_read_only": true,
                                          "name": "Scheduled",
                                          "show_authorization": true,
                                        }
                                      }
                                      idSchema={
                                        Object {
                                          "$id": "root_statuses_scheduled",
                                          "allow_delete": Object {
                                            "$id": "root_statuses_scheduled_allow_delete",
                                          },
                                          "is_read_only": Object {
                                            "$id": "root_statuses_scheduled_is_read_only",
                                          },
                                          "name": Object {
                                            "$id": "root_statuses_scheduled_name",
                                          },
                                        }
                                      }
                                      name="scheduled"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDropPropertyClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyChange={[Function]}
                                      readonly={false}
                                      registry={
                                        Object {
                                          "ArrayFieldTemplate": [Function],
                                          "FieldTemplate": [Function],
                                          "ObjectFieldTemplate": [Function],
                                          "definitions": Object {},
                                          "fields": Object {
                                            "AnyOfField": [Function],
                                            "ArrayField": [Function],
                                            "BooleanField": [Function],
                                            "DescriptionField": [Function],
                                            "NullField": [Function],
                                            "NumberField": [Function],
                                            "ObjectField": [Function],
                                            "OneOfField": [Function],
                                            "SchemaField": [Function],
                                            "StringField": [Function],
                                            "TitleField": [Function],
                                            "UnsupportedField": [Function],
                                          },
                                          "formContext": Object {},
                                          "widgets": Object {
                                            "AltDateTimeWidget": [Function],
                                            "AltDateWidget": [Function],
                                            "BaseInput": [Function],
                                            "CheckboxWidget": [Function],
                                            "CheckboxesWidget": [Function],
                                            "ColorWidget": [Function],
                                            "DateTimeWidget": [Function],
                                            "DateWidget": [Function],
                                            "EmailWidget": [Function],
                                            "FileWidget": [Function],
                                            "HiddenWidget": [Function],
                                            "PasswordWidget": [Function],
                                            "RadioWidget": [Function],
                                            "RangeWidget": [Function],
                                            "SelectWidget": [Function],
                                            "TextWidget": [Function],
                                            "TextareaWidget": [Function],
                                            "URLWidget": [Function],
                                            "UpDownWidget": [Function],
                                          },
                                        }
                                      }
                                      required={false}
                                      schema={
                                        Object {
                                          "additionalProperties": false,
                                          "properties": Object {
                                            "allow_delete": Object {
                                              "type": "boolean",
                                            },
                                            "is_read_only": Object {
                                              "type": "boolean",
                                            },
                                            "name": Object {
                                              "type": "string",
                                            },
                                          },
                                          "required": Array [
                                            "name",
                                            "is_read_only",
                                          ],
                                          "type": "object",
                                        }
                                      }
                                      uiSchema={Object {}}
                                      wasPropertyKeyModified={false}
                                    />,
                                    "disabled": false,
                                    "name": "scheduled",
                                    "readonly": false,
                                    "required": false,
                                  },
                                  Object {
                                    "content": <SchemaField
                                      autofocus={false}
                                      disabled={false}
                                      errorSchema={Object {}}
                                      formData={
                                        Object {
                                          "allow_authorization": false,
                                          "allow_cancel": false,
                                          "allow_delete": false,
                                          "allow_open": false,
                                          "allow_request_approval": false,
                                          "is_read_only": true,
                                          "name": "Cancelled",
                                          "show_authorization": true,
                                        }
                                      }
                                      idSchema={
                                        Object {
                                          "$id": "root_statuses_cancelled",
                                          "allow_delete": Object {
                                            "$id": "root_statuses_cancelled_allow_delete",
                                          },
                                          "is_read_only": Object {
                                            "$id": "root_statuses_cancelled_is_read_only",
                                          },
                                          "name": Object {
                                            "$id": "root_statuses_cancelled_name",
                                          },
                                        }
                                      }
                                      name="cancelled"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onDropPropertyClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyChange={[Function]}
                                      readonly={false}
                                      registry={
                                        Object {
                                          "ArrayFieldTemplate": [Function],
                                          "FieldTemplate": [Function],
                                          "ObjectFieldTemplate": [Function],
                                          "definitions": Object {},
                                          "fields": Object {
                                            "AnyOfField": [Function],
                                            "ArrayField": [Function],
                                            "BooleanField": [Function],
                                            "DescriptionField": [Function],
                                            "NullField": [Function],
                                            "NumberField": [Function],
                                            "ObjectField": [Function],
                                            "OneOfField": [Function],
                                            "SchemaField": [Function],
                                            "StringField": [Function],
                                            "TitleField": [Function],
                                            "UnsupportedField": [Function],
                                          },
                                          "formContext": Object {},
                                          "widgets": Object {
                                            "AltDateTimeWidget": [Function],
                                            "AltDateWidget": [Function],
                                            "BaseInput": [Function],
                                            "CheckboxWidget": [Function],
                                            "CheckboxesWidget": [Function],
                                            "ColorWidget": [Function],
                                            "DateTimeWidget": [Function],
                                            "DateWidget": [Function],
                                            "EmailWidget": [Function],
                                            "FileWidget": [Function],
                                            "HiddenWidget": [Function],
                                            "PasswordWidget": [Function],
                                            "RadioWidget": [Function],
                                            "RangeWidget": [Function],
                                            "SelectWidget": [Function],
                                            "TextWidget": [Function],
                                            "TextareaWidget": [Function],
                                            "URLWidget": [Function],
                                            "UpDownWidget": [Function],
                                          },
                                        }
                                      }
                                      required={false}
                                      schema={
                                        Object {
                                          "additionalProperties": false,
                                          "properties": Object {
                                            "allow_delete": Object {
                                              "type": "boolean",
                                            },
                                            "is_read_only": Object {
                                              "type": "boolean",
                                            },
                                            "name": Object {
                                              "type": "string",
                                            },
                                          },
                                          "required": Array [
                                            "name",
                                            "is_read_only",
                                          ],
                                          "type": "object",
                                        }
                                      }
                                      uiSchema={Object {}}
                                      wasPropertyKeyModified={false}
                                    />,
                                    "disabled": false,
                                    "name": "cancelled",
                                    "readonly": false,
                                    "required": false,
                                  },
                                ]
                              }
                              readonly={false}
                              required={false}
                              schema={
                                Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "cancelled": Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "allow_delete": Object {
                                          "type": "boolean",
                                        },
                                        "is_read_only": Object {
                                          "type": "boolean",
                                        },
                                        "name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "name",
                                        "is_read_only",
                                      ],
                                      "type": "object",
                                    },
                                    "scheduled": Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "allow_delete": Object {
                                          "type": "boolean",
                                        },
                                        "is_read_only": Object {
                                          "type": "boolean",
                                        },
                                        "name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "name",
                                        "is_read_only",
                                      ],
                                      "type": "object",
                                    },
                                  },
                                  "type": "object",
                                }
                              }
                              title="statuses"
                              uiSchema={
                                Object {
                                  "classNames": undefined,
                                }
                              }
                            >
                              <div
                                key="cancelled"
                              >
                                <SchemaField
                                  autofocus={false}
                                  disabled={false}
                                  errorSchema={Object {}}
                                  formData={
                                    Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": false,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Cancelled",
                                      "show_authorization": true,
                                    }
                                  }
                                  idSchema={
                                    Object {
                                      "$id": "root_statuses_cancelled",
                                      "allow_delete": Object {
                                        "$id": "root_statuses_cancelled_allow_delete",
                                      },
                                      "is_read_only": Object {
                                        "$id": "root_statuses_cancelled_is_read_only",
                                      },
                                      "name": Object {
                                        "$id": "root_statuses_cancelled_name",
                                      },
                                    }
                                  }
                                  key="cancelled"
                                  name="cancelled"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDropPropertyClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyChange={[Function]}
                                  readonly={false}
                                  registry={
                                    Object {
                                      "ArrayFieldTemplate": [Function],
                                      "FieldTemplate": [Function],
                                      "ObjectFieldTemplate": [Function],
                                      "definitions": Object {},
                                      "fields": Object {
                                        "AnyOfField": [Function],
                                        "ArrayField": [Function],
                                        "BooleanField": [Function],
                                        "DescriptionField": [Function],
                                        "NullField": [Function],
                                        "NumberField": [Function],
                                        "ObjectField": [Function],
                                        "OneOfField": [Function],
                                        "SchemaField": [Function],
                                        "StringField": [Function],
                                        "TitleField": [Function],
                                        "UnsupportedField": [Function],
                                      },
                                      "formContext": Object {},
                                      "widgets": Object {
                                        "AltDateTimeWidget": [Function],
                                        "AltDateWidget": [Function],
                                        "BaseInput": [Function],
                                        "CheckboxWidget": [Function],
                                        "CheckboxesWidget": [Function],
                                        "ColorWidget": [Function],
                                        "DateTimeWidget": [Function],
                                        "DateWidget": [Function],
                                        "EmailWidget": [Function],
                                        "FileWidget": [Function],
                                        "HiddenWidget": [Function],
                                        "PasswordWidget": [Function],
                                        "RadioWidget": [Function],
                                        "RangeWidget": [Function],
                                        "SelectWidget": [Function],
                                        "TextWidget": [Function],
                                        "TextareaWidget": [Function],
                                        "URLWidget": [Function],
                                        "UpDownWidget": [Function],
                                      },
                                    }
                                  }
                                  required={false}
                                  schema={
                                    Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "allow_delete": Object {
                                          "type": "boolean",
                                        },
                                        "is_read_only": Object {
                                          "type": "boolean",
                                        },
                                        "name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "name",
                                        "is_read_only",
                                      ],
                                      "type": "object",
                                    }
                                  }
                                  uiSchema={Object {}}
                                  wasPropertyKeyModified={false}
                                >
                                  <CustomFieldTemplate
                                    classNames="form-group field field-object"
                                    description={
                                      <DescriptionField
                                        formContext={Object {}}
                                        id="root_statuses_cancelled__description"
                                      />
                                    }
                                    disabled={false}
                                    displayLabel={false}
                                    errors={<ErrorList />}
                                    fields={
                                      Object {
                                        "AnyOfField": [Function],
                                        "ArrayField": [Function],
                                        "BooleanField": [Function],
                                        "DescriptionField": [Function],
                                        "NullField": [Function],
                                        "NumberField": [Function],
                                        "ObjectField": [Function],
                                        "OneOfField": [Function],
                                        "SchemaField": [Function],
                                        "StringField": [Function],
                                        "TitleField": [Function],
                                        "UnsupportedField": [Function],
                                      }
                                    }
                                    formContext={Object {}}
                                    help={<Help />}
                                    hidden={false}
                                    id="root_statuses_cancelled"
                                    label="cancelled"
                                    onDropPropertyClick={[Function]}
                                    onKeyChange={[Function]}
                                    readonly={false}
                                    required={false}
                                    schema={
                                      Object {
                                        "additionalProperties": false,
                                        "properties": Object {
                                          "allow_delete": Object {
                                            "type": "boolean",
                                          },
                                          "is_read_only": Object {
                                            "type": "boolean",
                                          },
                                          "name": Object {
                                            "type": "string",
                                          },
                                        },
                                        "required": Array [
                                          "name",
                                          "is_read_only",
                                        ],
                                        "type": "object",
                                      }
                                    }
                                    uiSchema={Object {}}
                                  >
                                    <div
                                      className="form-group field field-object"
                                    >
                                      <ObjectField
                                        autofocus={false}
                                        disabled={false}
                                        errorSchema={Object {}}
                                        formContext={Object {}}
                                        formData={
                                          Object {
                                            "allow_authorization": false,
                                            "allow_cancel": false,
                                            "allow_delete": false,
                                            "allow_open": false,
                                            "allow_request_approval": false,
                                            "is_read_only": true,
                                            "name": "Cancelled",
                                            "show_authorization": true,
                                          }
                                        }
                                        idSchema={
                                          Object {
                                            "$id": "root_statuses_cancelled",
                                            "allow_delete": Object {
                                              "$id": "root_statuses_cancelled_allow_delete",
                                            },
                                            "is_read_only": Object {
                                              "$id": "root_statuses_cancelled_is_read_only",
                                            },
                                            "name": Object {
                                              "$id": "root_statuses_cancelled_name",
                                            },
                                          }
                                        }
                                        name="cancelled"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDropPropertyClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyChange={[Function]}
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {},
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "allow_delete": Object {
                                                "type": "boolean",
                                              },
                                              "is_read_only": Object {
                                                "type": "boolean",
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "is_read_only",
                                            ],
                                            "type": "object",
                                          }
                                        }
                                        uiSchema={
                                          Object {
                                            "classNames": undefined,
                                          }
                                        }
                                        wasPropertyKeyModified={false}
                                      >
                                        <ObjectFieldTemplate
                                          DescriptionField={[Function]}
                                          TitleField={[Function]}
                                          disabled={false}
                                          formContext={Object {}}
                                          formData={
                                            Object {
                                              "allow_authorization": false,
                                              "allow_cancel": false,
                                              "allow_delete": false,
                                              "allow_open": false,
                                              "allow_request_approval": false,
                                              "is_read_only": true,
                                              "name": "Cancelled",
                                              "show_authorization": true,
                                            }
                                          }
                                          idSchema={
                                            Object {
                                              "$id": "root_statuses_cancelled",
                                              "allow_delete": Object {
                                                "$id": "root_statuses_cancelled_allow_delete",
                                              },
                                              "is_read_only": Object {
                                                "$id": "root_statuses_cancelled_is_read_only",
                                              },
                                              "name": Object {
                                                "$id": "root_statuses_cancelled_name",
                                              },
                                            }
                                          }
                                          onAddClick={[Function]}
                                          properties={
                                            Array [
                                              Object {
                                                "content": <SchemaField
                                                  autofocus={false}
                                                  disabled={false}
                                                  errorSchema={Object {}}
                                                  formData={false}
                                                  idSchema={
                                                    Object {
                                                      "$id": "root_statuses_cancelled_allow_delete",
                                                    }
                                                  }
                                                  name="allow_delete"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDropPropertyClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyChange={[Function]}
                                                  readonly={false}
                                                  registry={
                                                    Object {
                                                      "ArrayFieldTemplate": [Function],
                                                      "FieldTemplate": [Function],
                                                      "ObjectFieldTemplate": [Function],
                                                      "definitions": Object {},
                                                      "fields": Object {
                                                        "AnyOfField": [Function],
                                                        "ArrayField": [Function],
                                                        "BooleanField": [Function],
                                                        "DescriptionField": [Function],
                                                        "NullField": [Function],
                                                        "NumberField": [Function],
                                                        "ObjectField": [Function],
                                                        "OneOfField": [Function],
                                                        "SchemaField": [Function],
                                                        "StringField": [Function],
                                                        "TitleField": [Function],
                                                        "UnsupportedField": [Function],
                                                      },
                                                      "formContext": Object {},
                                                      "widgets": Object {
                                                        "AltDateTimeWidget": [Function],
                                                        "AltDateWidget": [Function],
                                                        "BaseInput": [Function],
                                                        "CheckboxWidget": [Function],
                                                        "CheckboxesWidget": [Function],
                                                        "ColorWidget": [Function],
                                                        "DateTimeWidget": [Function],
                                                        "DateWidget": [Function],
                                                        "EmailWidget": [Function],
                                                        "FileWidget": [Function],
                                                        "HiddenWidget": [Function],
                                                        "PasswordWidget": [Function],
                                                        "RadioWidget": [Function],
                                                        "RangeWidget": [Function],
                                                        "SelectWidget": [Function],
                                                        "TextWidget": [Function],
                                                        "TextareaWidget": [Function],
                                                        "URLWidget": [Function],
                                                        "UpDownWidget": [Function],
                                                      },
                                                    }
                                                  }
                                                  required={false}
                                                  schema={
                                                    Object {
                                                      "type": "boolean",
                                                    }
                                                  }
                                                  uiSchema={Object {}}
                                                  wasPropertyKeyModified={false}
                                                />,
                                                "disabled": false,
                                                "name": "allow_delete",
                                                "readonly": false,
                                                "required": false,
                                              },
                                              Object {
                                                "content": <SchemaField
                                                  autofocus={false}
                                                  disabled={false}
                                                  errorSchema={Object {}}
                                                  formData={true}
                                                  idSchema={
                                                    Object {
                                                      "$id": "root_statuses_cancelled_is_read_only",
                                                    }
                                                  }
                                                  name="is_read_only"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDropPropertyClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyChange={[Function]}
                                                  readonly={false}
                                                  registry={
                                                    Object {
                                                      "ArrayFieldTemplate": [Function],
                                                      "FieldTemplate": [Function],
                                                      "ObjectFieldTemplate": [Function],
                                                      "definitions": Object {},
                                                      "fields": Object {
                                                        "AnyOfField": [Function],
                                                        "ArrayField": [Function],
                                                        "BooleanField": [Function],
                                                        "DescriptionField": [Function],
                                                        "NullField": [Function],
                                                        "NumberField": [Function],
                                                        "ObjectField": [Function],
                                                        "OneOfField": [Function],
                                                        "SchemaField": [Function],
                                                        "StringField": [Function],
                                                        "TitleField": [Function],
                                                        "UnsupportedField": [Function],
                                                      },
                                                      "formContext": Object {},
                                                      "widgets": Object {
                                                        "AltDateTimeWidget": [Function],
                                                        "AltDateWidget": [Function],
                                                        "BaseInput": [Function],
                                                        "CheckboxWidget": [Function],
                                                        "CheckboxesWidget": [Function],
                                                        "ColorWidget": [Function],
                                                        "DateTimeWidget": [Function],
                                                        "DateWidget": [Function],
                                                        "EmailWidget": [Function],
                                                        "FileWidget": [Function],
                                                        "HiddenWidget": [Function],
                                                        "PasswordWidget": [Function],
                                                        "RadioWidget": [Function],
                                                        "RangeWidget": [Function],
                                                        "SelectWidget": [Function],
                                                        "TextWidget": [Function],
                                                        "TextareaWidget": [Function],
                                                        "URLWidget": [Function],
                                                        "UpDownWidget": [Function],
                                                      },
                                                    }
                                                  }
                                                  required={true}
                                                  schema={
                                                    Object {
                                                      "type": "boolean",
                                                    }
                                                  }
                                                  uiSchema={Object {}}
                                                  wasPropertyKeyModified={false}
                                                />,
                                                "disabled": false,
                                                "name": "is_read_only",
                                                "readonly": false,
                                                "required": false,
                                              },
                                              Object {
                                                "content": <SchemaField
                                                  autofocus={false}
                                                  disabled={false}
                                                  errorSchema={Object {}}
                                                  formData="Cancelled"
                                                  idSchema={
                                                    Object {
                                                      "$id": "root_statuses_cancelled_name",
                                                    }
                                                  }
                                                  name="name"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDropPropertyClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyChange={[Function]}
                                                  readonly={false}
                                                  registry={
                                                    Object {
                                                      "ArrayFieldTemplate": [Function],
                                                      "FieldTemplate": [Function],
                                                      "ObjectFieldTemplate": [Function],
                                                      "definitions": Object {},
                                                      "fields": Object {
                                                        "AnyOfField": [Function],
                                                        "ArrayField": [Function],
                                                        "BooleanField": [Function],
                                                        "DescriptionField": [Function],
                                                        "NullField": [Function],
                                                        "NumberField": [Function],
                                                        "ObjectField": [Function],
                                                        "OneOfField": [Function],
                                                        "SchemaField": [Function],
                                                        "StringField": [Function],
                                                        "TitleField": [Function],
                                                        "UnsupportedField": [Function],
                                                      },
                                                      "formContext": Object {},
                                                      "widgets": Object {
                                                        "AltDateTimeWidget": [Function],
                                                        "AltDateWidget": [Function],
                                                        "BaseInput": [Function],
                                                        "CheckboxWidget": [Function],
                                                        "CheckboxesWidget": [Function],
                                                        "ColorWidget": [Function],
                                                        "DateTimeWidget": [Function],
                                                        "DateWidget": [Function],
                                                        "EmailWidget": [Function],
                                                        "FileWidget": [Function],
                                                        "HiddenWidget": [Function],
                                                        "PasswordWidget": [Function],
                                                        "RadioWidget": [Function],
                                                        "RangeWidget": [Function],
                                                        "SelectWidget": [Function],
                                                        "TextWidget": [Function],
                                                        "TextareaWidget": [Function],
                                                        "URLWidget": [Function],
                                                        "UpDownWidget": [Function],
                                                      },
                                                    }
                                                  }
                                                  required={true}
                                                  schema={
                                                    Object {
                                                      "type": "string",
                                                    }
                                                  }
                                                  uiSchema={Object {}}
                                                  wasPropertyKeyModified={false}
                                                />,
                                                "disabled": false,
                                                "name": "name",
                                                "readonly": false,
                                                "required": false,
                                              },
                                            ]
                                          }
                                          readonly={false}
                                          required={false}
                                          schema={
                                            Object {
                                              "additionalProperties": false,
                                              "properties": Object {
                                                "allow_delete": Object {
                                                  "type": "boolean",
                                                },
                                                "is_read_only": Object {
                                                  "type": "boolean",
                                                },
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                                "is_read_only",
                                              ],
                                              "type": "object",
                                            }
                                          }
                                          title="cancelled"
                                          uiSchema={
                                            Object {
                                              "classNames": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            key="allow_delete"
                                          >
                                            <SchemaField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formData={false}
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_cancelled_allow_delete",
                                                }
                                              }
                                              key="allow_delete"
                                              name="allow_delete"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {},
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={false}
                                              schema={
                                                Object {
                                                  "type": "boolean",
                                                }
                                              }
                                              uiSchema={Object {}}
                                              wasPropertyKeyModified={false}
                                            >
                                              <CustomFieldTemplate
                                                classNames="form-group field field-boolean"
                                                description={
                                                  <DescriptionField
                                                    formContext={Object {}}
                                                    id="root_statuses_cancelled_allow_delete__description"
                                                  />
                                                }
                                                disabled={false}
                                                displayLabel={false}
                                                errors={<ErrorList />}
                                                fields={
                                                  Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  }
                                                }
                                                formContext={Object {}}
                                                help={<Help />}
                                                hidden={false}
                                                id="root_statuses_cancelled_allow_delete"
                                                label="allow_delete"
                                                onDropPropertyClick={[Function]}
                                                onKeyChange={[Function]}
                                                readonly={false}
                                                required={false}
                                                schema={
                                                  Object {
                                                    "type": "boolean",
                                                  }
                                                }
                                                uiSchema={Object {}}
                                              >
                                                <div
                                                  className="form-group field field-boolean"
                                                >
                                                  <BooleanField
                                                    autofocus={false}
                                                    disabled={false}
                                                    errorSchema={Object {}}
                                                    formContext={Object {}}
                                                    formData={false}
                                                    idSchema={
                                                      Object {
                                                        "$id": "root_statuses_cancelled_allow_delete",
                                                      }
                                                    }
                                                    name="allow_delete"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDropPropertyClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyChange={[Function]}
                                                    readonly={false}
                                                    registry={
                                                      Object {
                                                        "ArrayFieldTemplate": [Function],
                                                        "FieldTemplate": [Function],
                                                        "ObjectFieldTemplate": [Function],
                                                        "definitions": Object {},
                                                        "fields": Object {
                                                          "AnyOfField": [Function],
                                                          "ArrayField": [Function],
                                                          "BooleanField": [Function],
                                                          "DescriptionField": [Function],
                                                          "NullField": [Function],
                                                          "NumberField": [Function],
                                                          "ObjectField": [Function],
                                                          "OneOfField": [Function],
                                                          "SchemaField": [Function],
                                                          "StringField": [Function],
                                                          "TitleField": [Function],
                                                          "UnsupportedField": [Function],
                                                        },
                                                        "formContext": Object {},
                                                        "widgets": Object {
                                                          "AltDateTimeWidget": [Function],
                                                          "AltDateWidget": [Function],
                                                          "BaseInput": [Function],
                                                          "CheckboxWidget": [Function],
                                                          "CheckboxesWidget": [Function],
                                                          "ColorWidget": [Function],
                                                          "DateTimeWidget": [Function],
                                                          "DateWidget": [Function],
                                                          "EmailWidget": [Function],
                                                          "FileWidget": [Function],
                                                          "HiddenWidget": [Function],
                                                          "PasswordWidget": [Function],
                                                          "RadioWidget": [Function],
                                                          "RangeWidget": [Function],
                                                          "SelectWidget": [Function],
                                                          "TextWidget": [Function],
                                                          "TextareaWidget": [Function],
                                                          "URLWidget": [Function],
                                                          "UpDownWidget": [Function],
                                                        },
                                                      }
                                                    }
                                                    required={false}
                                                    schema={
                                                      Object {
                                                        "type": "boolean",
                                                      }
                                                    }
                                                    uiSchema={
                                                      Object {
                                                        "classNames": undefined,
                                                      }
                                                    }
                                                    wasPropertyKeyModified={false}
                                                  >
                                                    <Component
                                                      autofocus={false}
                                                      disabled={false}
                                                      formContext={Object {}}
                                                      id="root_statuses_cancelled_allow_delete"
                                                      label="allow_delete"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Object {
                                                          "enumOptions": Array [
                                                            Object {
                                                              "label": "yes",
                                                              "value": true,
                                                            },
                                                            Object {
                                                              "label": "no",
                                                              "value": false,
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      readonly={false}
                                                      registry={
                                                        Object {
                                                          "ArrayFieldTemplate": [Function],
                                                          "FieldTemplate": [Function],
                                                          "ObjectFieldTemplate": [Function],
                                                          "definitions": Object {},
                                                          "fields": Object {
                                                            "AnyOfField": [Function],
                                                            "ArrayField": [Function],
                                                            "BooleanField": [Function],
                                                            "DescriptionField": [Function],
                                                            "NullField": [Function],
                                                            "NumberField": [Function],
                                                            "ObjectField": [Function],
                                                            "OneOfField": [Function],
                                                            "SchemaField": [Function],
                                                            "StringField": [Function],
                                                            "TitleField": [Function],
                                                            "UnsupportedField": [Function],
                                                          },
                                                          "formContext": Object {},
                                                          "widgets": Object {
                                                            "AltDateTimeWidget": [Function],
                                                            "AltDateWidget": [Function],
                                                            "BaseInput": [Function],
                                                            "CheckboxWidget": [Function],
                                                            "CheckboxesWidget": [Function],
                                                            "ColorWidget": [Function],
                                                            "DateTimeWidget": [Function],
                                                            "DateWidget": [Function],
                                                            "EmailWidget": [Function],
                                                            "FileWidget": [Function],
                                                            "HiddenWidget": [Function],
                                                            "PasswordWidget": [Function],
                                                            "RadioWidget": [Function],
                                                            "RangeWidget": [Function],
                                                            "SelectWidget": [Function],
                                                            "TextWidget": [Function],
                                                            "TextareaWidget": [Function],
                                                            "URLWidget": [Function],
                                                            "UpDownWidget": [Function],
                                                          },
                                                        }
                                                      }
                                                      required={false}
                                                      schema={
                                                        Object {
                                                          "type": "boolean",
                                                        }
                                                      }
                                                      value={false}
                                                    >
                                                      <CheckboxWidget
                                                        autofocus={false}
                                                        disabled={false}
                                                        formContext={Object {}}
                                                        id="root_statuses_cancelled_allow_delete"
                                                        label="allow_delete"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        options={
                                                          Object {
                                                            "enumOptions": Array [
                                                              Object {
                                                                "label": "yes",
                                                                "value": true,
                                                              },
                                                              Object {
                                                                "label": "no",
                                                                "value": false,
                                                              },
                                                            ],
                                                          }
                                                        }
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {},
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={false}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        value={false}
                                                      >
                                                        <Toggle
                                                          autofocus={false}
                                                          deletable={false}
                                                          disabled={false}
                                                          formContext={Object {}}
                                                          handleChange={[Function]}
                                                          handleDelete={[Function]}
                                                          id="root_statuses_cancelled_allow_delete"
                                                          label="allow_delete"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          options={
                                                            Object {
                                                              "enumOptions": Array [
                                                                Object {
                                                                  "label": "yes",
                                                                  "value": true,
                                                                },
                                                                Object {
                                                                  "label": "no",
                                                                  "value": false,
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          readonly={false}
                                                          registry={
                                                            Object {
                                                              "ArrayFieldTemplate": [Function],
                                                              "FieldTemplate": [Function],
                                                              "ObjectFieldTemplate": [Function],
                                                              "definitions": Object {},
                                                              "fields": Object {
                                                                "AnyOfField": [Function],
                                                                "ArrayField": [Function],
                                                                "BooleanField": [Function],
                                                                "DescriptionField": [Function],
                                                                "NullField": [Function],
                                                                "NumberField": [Function],
                                                                "ObjectField": [Function],
                                                                "OneOfField": [Function],
                                                                "SchemaField": [Function],
                                                                "StringField": [Function],
                                                                "TitleField": [Function],
                                                                "UnsupportedField": [Function],
                                                              },
                                                              "formContext": Object {},
                                                              "widgets": Object {
                                                                "AltDateTimeWidget": [Function],
                                                                "AltDateWidget": [Function],
                                                                "BaseInput": [Function],
                                                                "CheckboxWidget": [Function],
                                                                "CheckboxesWidget": [Function],
                                                                "ColorWidget": [Function],
                                                                "DateTimeWidget": [Function],
                                                                "DateWidget": [Function],
                                                                "EmailWidget": [Function],
                                                                "FileWidget": [Function],
                                                                "HiddenWidget": [Function],
                                                                "PasswordWidget": [Function],
                                                                "RadioWidget": [Function],
                                                                "RangeWidget": [Function],
                                                                "SelectWidget": [Function],
                                                                "TextWidget": [Function],
                                                                "TextareaWidget": [Function],
                                                                "URLWidget": [Function],
                                                                "UpDownWidget": [Function],
                                                              },
                                                            }
                                                          }
                                                          required={false}
                                                          schema={
                                                            Object {
                                                              "type": "boolean",
                                                            }
                                                          }
                                                          value={false}
                                                        >
                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                            className="toggle"
                                                            control={
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={false}
                                                                color="primary"
                                                                disabled={false}
                                                                name="allow_delete"
                                                                onChange={[Function]}
                                                                value={false}
                                                              />
                                                            }
                                                            label="OFF"
                                                          >
                                                            <ForwardRef(FormControlLabel)
                                                              className="toggle"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "label": "MuiFormControlLabel-label",
                                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                  "root": "MuiFormControlLabel-root",
                                                                }
                                                              }
                                                              control={
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={false}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="allow_delete"
                                                                  onChange={[Function]}
                                                                  value={false}
                                                                />
                                                              }
                                                              label="OFF"
                                                            >
                                                              <label
                                                                className="MuiFormControlLabel-root toggle"
                                                              >
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={false}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="allow_delete"
                                                                  onChange={[Function]}
                                                                  value={false}
                                                                >
                                                                  <ForwardRef(Switch)
                                                                    checked={false}
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "colorPrimary": "MuiSwitch-colorPrimary",
                                                                        "colorSecondary": "MuiSwitch-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "edgeEnd": "MuiSwitch-edgeEnd",
                                                                        "edgeStart": "MuiSwitch-edgeStart",
                                                                        "input": "MuiSwitch-input",
                                                                        "root": "MuiSwitch-root",
                                                                        "sizeSmall": "MuiSwitch-sizeSmall",
                                                                        "switchBase": "MuiSwitch-switchBase",
                                                                        "thumb": "MuiSwitch-thumb",
                                                                        "track": "MuiSwitch-track",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    name="allow_delete"
                                                                    onChange={[Function]}
                                                                    value={false}
                                                                  >
                                                                    <span
                                                                      className="MuiSwitch-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(SwitchBase))
                                                                        checked={false}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "Mui-checked",
                                                                            "disabled": "Mui-disabled",
                                                                            "input": "MuiSwitch-input",
                                                                            "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        disabled={false}
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="allow_delete"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                        value={false}
                                                                      >
                                                                        <ForwardRef(SwitchBase)
                                                                          checked={false}
                                                                          checkedIcon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                                              "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                                                              "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                            }
                                                                          }
                                                                          disabled={false}
                                                                          icon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          name="allow_delete"
                                                                          onChange={[Function]}
                                                                          type="checkbox"
                                                                          value={false}
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                            component="span"
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="span"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onBlur={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                    onBlur={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                                                                        disabled={false}
                                                                                        name="allow_delete"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                        value={false}
                                                                                      />
                                                                                      <span
                                                                                        className="MuiSwitch-thumb"
                                                                                      />
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </span>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </ForwardRef(SwitchBase)>
                                                                      </WithStyles(ForwardRef(SwitchBase))>
                                                                      <span
                                                                        className="MuiSwitch-track"
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(Switch)>
                                                                </WithStyles(ForwardRef(Switch))>
                                                                <WithStyles(ForwardRef(Typography))
                                                                  className="MuiFormControlLabel-label"
                                                                  component="span"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    className="MuiFormControlLabel-label"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                  >
                                                                    <span
                                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                    >
                                                                      OFF
                                                                    </span>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </label>
                                                            </ForwardRef(FormControlLabel)>
                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                        </Toggle>
                                                      </CheckboxWidget>
                                                    </Component>
                                                  </BooleanField>
                                                </div>
                                              </CustomFieldTemplate>
                                            </SchemaField>
                                          </div>
                                          <div
                                            key="is_read_only"
                                          >
                                            <SchemaField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formData={true}
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_cancelled_is_read_only",
                                                }
                                              }
                                              key="is_read_only"
                                              name="is_read_only"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {},
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={true}
                                              schema={
                                                Object {
                                                  "type": "boolean",
                                                }
                                              }
                                              uiSchema={Object {}}
                                              wasPropertyKeyModified={false}
                                            >
                                              <CustomFieldTemplate
                                                classNames="form-group field field-boolean"
                                                description={
                                                  <DescriptionField
                                                    formContext={Object {}}
                                                    id="root_statuses_cancelled_is_read_only__description"
                                                  />
                                                }
                                                disabled={false}
                                                displayLabel={false}
                                                errors={<ErrorList />}
                                                fields={
                                                  Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  }
                                                }
                                                formContext={Object {}}
                                                help={<Help />}
                                                hidden={false}
                                                id="root_statuses_cancelled_is_read_only"
                                                label="is_read_only"
                                                onDropPropertyClick={[Function]}
                                                onKeyChange={[Function]}
                                                readonly={false}
                                                required={true}
                                                schema={
                                                  Object {
                                                    "type": "boolean",
                                                  }
                                                }
                                                uiSchema={Object {}}
                                              >
                                                <div
                                                  className="form-group field field-boolean"
                                                >
                                                  <BooleanField
                                                    autofocus={false}
                                                    disabled={false}
                                                    errorSchema={Object {}}
                                                    formContext={Object {}}
                                                    formData={true}
                                                    idSchema={
                                                      Object {
                                                        "$id": "root_statuses_cancelled_is_read_only",
                                                      }
                                                    }
                                                    name="is_read_only"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDropPropertyClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyChange={[Function]}
                                                    readonly={false}
                                                    registry={
                                                      Object {
                                                        "ArrayFieldTemplate": [Function],
                                                        "FieldTemplate": [Function],
                                                        "ObjectFieldTemplate": [Function],
                                                        "definitions": Object {},
                                                        "fields": Object {
                                                          "AnyOfField": [Function],
                                                          "ArrayField": [Function],
                                                          "BooleanField": [Function],
                                                          "DescriptionField": [Function],
                                                          "NullField": [Function],
                                                          "NumberField": [Function],
                                                          "ObjectField": [Function],
                                                          "OneOfField": [Function],
                                                          "SchemaField": [Function],
                                                          "StringField": [Function],
                                                          "TitleField": [Function],
                                                          "UnsupportedField": [Function],
                                                        },
                                                        "formContext": Object {},
                                                        "widgets": Object {
                                                          "AltDateTimeWidget": [Function],
                                                          "AltDateWidget": [Function],
                                                          "BaseInput": [Function],
                                                          "CheckboxWidget": [Function],
                                                          "CheckboxesWidget": [Function],
                                                          "ColorWidget": [Function],
                                                          "DateTimeWidget": [Function],
                                                          "DateWidget": [Function],
                                                          "EmailWidget": [Function],
                                                          "FileWidget": [Function],
                                                          "HiddenWidget": [Function],
                                                          "PasswordWidget": [Function],
                                                          "RadioWidget": [Function],
                                                          "RangeWidget": [Function],
                                                          "SelectWidget": [Function],
                                                          "TextWidget": [Function],
                                                          "TextareaWidget": [Function],
                                                          "URLWidget": [Function],
                                                          "UpDownWidget": [Function],
                                                        },
                                                      }
                                                    }
                                                    required={true}
                                                    schema={
                                                      Object {
                                                        "type": "boolean",
                                                      }
                                                    }
                                                    uiSchema={
                                                      Object {
                                                        "classNames": undefined,
                                                      }
                                                    }
                                                    wasPropertyKeyModified={false}
                                                  >
                                                    <Component
                                                      autofocus={false}
                                                      disabled={false}
                                                      formContext={Object {}}
                                                      id="root_statuses_cancelled_is_read_only"
                                                      label="is_read_only"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Object {
                                                          "enumOptions": Array [
                                                            Object {
                                                              "label": "yes",
                                                              "value": true,
                                                            },
                                                            Object {
                                                              "label": "no",
                                                              "value": false,
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      readonly={false}
                                                      registry={
                                                        Object {
                                                          "ArrayFieldTemplate": [Function],
                                                          "FieldTemplate": [Function],
                                                          "ObjectFieldTemplate": [Function],
                                                          "definitions": Object {},
                                                          "fields": Object {
                                                            "AnyOfField": [Function],
                                                            "ArrayField": [Function],
                                                            "BooleanField": [Function],
                                                            "DescriptionField": [Function],
                                                            "NullField": [Function],
                                                            "NumberField": [Function],
                                                            "ObjectField": [Function],
                                                            "OneOfField": [Function],
                                                            "SchemaField": [Function],
                                                            "StringField": [Function],
                                                            "TitleField": [Function],
                                                            "UnsupportedField": [Function],
                                                          },
                                                          "formContext": Object {},
                                                          "widgets": Object {
                                                            "AltDateTimeWidget": [Function],
                                                            "AltDateWidget": [Function],
                                                            "BaseInput": [Function],
                                                            "CheckboxWidget": [Function],
                                                            "CheckboxesWidget": [Function],
                                                            "ColorWidget": [Function],
                                                            "DateTimeWidget": [Function],
                                                            "DateWidget": [Function],
                                                            "EmailWidget": [Function],
                                                            "FileWidget": [Function],
                                                            "HiddenWidget": [Function],
                                                            "PasswordWidget": [Function],
                                                            "RadioWidget": [Function],
                                                            "RangeWidget": [Function],
                                                            "SelectWidget": [Function],
                                                            "TextWidget": [Function],
                                                            "TextareaWidget": [Function],
                                                            "URLWidget": [Function],
                                                            "UpDownWidget": [Function],
                                                          },
                                                        }
                                                      }
                                                      required={true}
                                                      schema={
                                                        Object {
                                                          "type": "boolean",
                                                        }
                                                      }
                                                      value={true}
                                                    >
                                                      <CheckboxWidget
                                                        autofocus={false}
                                                        disabled={false}
                                                        formContext={Object {}}
                                                        id="root_statuses_cancelled_is_read_only"
                                                        label="is_read_only"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        options={
                                                          Object {
                                                            "enumOptions": Array [
                                                              Object {
                                                                "label": "yes",
                                                                "value": true,
                                                              },
                                                              Object {
                                                                "label": "no",
                                                                "value": false,
                                                              },
                                                            ],
                                                          }
                                                        }
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {},
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        value={true}
                                                      >
                                                        <Toggle
                                                          autofocus={false}
                                                          deletable={false}
                                                          disabled={false}
                                                          formContext={Object {}}
                                                          handleChange={[Function]}
                                                          handleDelete={[Function]}
                                                          id="root_statuses_cancelled_is_read_only"
                                                          label="is_read_only"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          options={
                                                            Object {
                                                              "enumOptions": Array [
                                                                Object {
                                                                  "label": "yes",
                                                                  "value": true,
                                                                },
                                                                Object {
                                                                  "label": "no",
                                                                  "value": false,
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          readonly={false}
                                                          registry={
                                                            Object {
                                                              "ArrayFieldTemplate": [Function],
                                                              "FieldTemplate": [Function],
                                                              "ObjectFieldTemplate": [Function],
                                                              "definitions": Object {},
                                                              "fields": Object {
                                                                "AnyOfField": [Function],
                                                                "ArrayField": [Function],
                                                                "BooleanField": [Function],
                                                                "DescriptionField": [Function],
                                                                "NullField": [Function],
                                                                "NumberField": [Function],
                                                                "ObjectField": [Function],
                                                                "OneOfField": [Function],
                                                                "SchemaField": [Function],
                                                                "StringField": [Function],
                                                                "TitleField": [Function],
                                                                "UnsupportedField": [Function],
                                                              },
                                                              "formContext": Object {},
                                                              "widgets": Object {
                                                                "AltDateTimeWidget": [Function],
                                                                "AltDateWidget": [Function],
                                                                "BaseInput": [Function],
                                                                "CheckboxWidget": [Function],
                                                                "CheckboxesWidget": [Function],
                                                                "ColorWidget": [Function],
                                                                "DateTimeWidget": [Function],
                                                                "DateWidget": [Function],
                                                                "EmailWidget": [Function],
                                                                "FileWidget": [Function],
                                                                "HiddenWidget": [Function],
                                                                "PasswordWidget": [Function],
                                                                "RadioWidget": [Function],
                                                                "RangeWidget": [Function],
                                                                "SelectWidget": [Function],
                                                                "TextWidget": [Function],
                                                                "TextareaWidget": [Function],
                                                                "URLWidget": [Function],
                                                                "UpDownWidget": [Function],
                                                              },
                                                            }
                                                          }
                                                          required={true}
                                                          schema={
                                                            Object {
                                                              "type": "boolean",
                                                            }
                                                          }
                                                          value={true}
                                                        >
                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                            className="toggle"
                                                            control={
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={true}
                                                                color="primary"
                                                                disabled={false}
                                                                name="is_read_only"
                                                                onChange={[Function]}
                                                                value={true}
                                                              />
                                                            }
                                                            label="ON"
                                                          >
                                                            <ForwardRef(FormControlLabel)
                                                              className="toggle"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "label": "MuiFormControlLabel-label",
                                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                  "root": "MuiFormControlLabel-root",
                                                                }
                                                              }
                                                              control={
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={true}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="is_read_only"
                                                                  onChange={[Function]}
                                                                  value={true}
                                                                />
                                                              }
                                                              label="ON"
                                                            >
                                                              <label
                                                                className="MuiFormControlLabel-root toggle"
                                                              >
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={true}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="is_read_only"
                                                                  onChange={[Function]}
                                                                  value={true}
                                                                >
                                                                  <ForwardRef(Switch)
                                                                    checked={true}
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "colorPrimary": "MuiSwitch-colorPrimary",
                                                                        "colorSecondary": "MuiSwitch-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "edgeEnd": "MuiSwitch-edgeEnd",
                                                                        "edgeStart": "MuiSwitch-edgeStart",
                                                                        "input": "MuiSwitch-input",
                                                                        "root": "MuiSwitch-root",
                                                                        "sizeSmall": "MuiSwitch-sizeSmall",
                                                                        "switchBase": "MuiSwitch-switchBase",
                                                                        "thumb": "MuiSwitch-thumb",
                                                                        "track": "MuiSwitch-track",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    name="is_read_only"
                                                                    onChange={[Function]}
                                                                    value={true}
                                                                  >
                                                                    <span
                                                                      className="MuiSwitch-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(SwitchBase))
                                                                        checked={true}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "Mui-checked",
                                                                            "disabled": "Mui-disabled",
                                                                            "input": "MuiSwitch-input",
                                                                            "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        disabled={false}
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="is_read_only"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                        value={true}
                                                                      >
                                                                        <ForwardRef(SwitchBase)
                                                                          checked={true}
                                                                          checkedIcon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                                              "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                                                              "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                            }
                                                                          }
                                                                          disabled={false}
                                                                          icon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          name="is_read_only"
                                                                          onChange={[Function]}
                                                                          type="checkbox"
                                                                          value={true}
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                            component="span"
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="span"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onBlur={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                    onBlur={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                                                                        disabled={false}
                                                                                        name="is_read_only"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                        value={true}
                                                                                      />
                                                                                      <span
                                                                                        className="MuiSwitch-thumb"
                                                                                      />
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </span>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </ForwardRef(SwitchBase)>
                                                                      </WithStyles(ForwardRef(SwitchBase))>
                                                                      <span
                                                                        className="MuiSwitch-track"
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(Switch)>
                                                                </WithStyles(ForwardRef(Switch))>
                                                                <WithStyles(ForwardRef(Typography))
                                                                  className="MuiFormControlLabel-label"
                                                                  component="span"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    className="MuiFormControlLabel-label"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                  >
                                                                    <span
                                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                    >
                                                                      ON
                                                                    </span>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </label>
                                                            </ForwardRef(FormControlLabel)>
                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                        </Toggle>
                                                      </CheckboxWidget>
                                                    </Component>
                                                  </BooleanField>
                                                </div>
                                              </CustomFieldTemplate>
                                            </SchemaField>
                                          </div>
                                          <div
                                            key="name"
                                          >
                                            <SchemaField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formData="Cancelled"
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_cancelled_name",
                                                }
                                              }
                                              key="name"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {},
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={true}
                                              schema={
                                                Object {
                                                  "type": "string",
                                                }
                                              }
                                              uiSchema={Object {}}
                                              wasPropertyKeyModified={false}
                                            >
                                              <CustomFieldTemplate
                                                classNames="form-group field field-string"
                                                description={
                                                  <DescriptionField
                                                    formContext={Object {}}
                                                    id="root_statuses_cancelled_name__description"
                                                  />
                                                }
                                                disabled={false}
                                                displayLabel={true}
                                                errors={<ErrorList />}
                                                fields={
                                                  Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  }
                                                }
                                                formContext={Object {}}
                                                help={<Help />}
                                                hidden={false}
                                                id="root_statuses_cancelled_name"
                                                label="name"
                                                onDropPropertyClick={[Function]}
                                                onKeyChange={[Function]}
                                                readonly={false}
                                                required={true}
                                                schema={
                                                  Object {
                                                    "type": "string",
                                                  }
                                                }
                                                uiSchema={Object {}}
                                              >
                                                <div
                                                  className="form-group field field-string"
                                                >
                                                  <StringField
                                                    autofocus={false}
                                                    disabled={false}
                                                    errorSchema={Object {}}
                                                    formContext={Object {}}
                                                    formData="Cancelled"
                                                    idSchema={
                                                      Object {
                                                        "$id": "root_statuses_cancelled_name",
                                                      }
                                                    }
                                                    name="name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDropPropertyClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyChange={[Function]}
                                                    readonly={false}
                                                    registry={
                                                      Object {
                                                        "ArrayFieldTemplate": [Function],
                                                        "FieldTemplate": [Function],
                                                        "ObjectFieldTemplate": [Function],
                                                        "definitions": Object {},
                                                        "fields": Object {
                                                          "AnyOfField": [Function],
                                                          "ArrayField": [Function],
                                                          "BooleanField": [Function],
                                                          "DescriptionField": [Function],
                                                          "NullField": [Function],
                                                          "NumberField": [Function],
                                                          "ObjectField": [Function],
                                                          "OneOfField": [Function],
                                                          "SchemaField": [Function],
                                                          "StringField": [Function],
                                                          "TitleField": [Function],
                                                          "UnsupportedField": [Function],
                                                        },
                                                        "formContext": Object {},
                                                        "widgets": Object {
                                                          "AltDateTimeWidget": [Function],
                                                          "AltDateWidget": [Function],
                                                          "BaseInput": [Function],
                                                          "CheckboxWidget": [Function],
                                                          "CheckboxesWidget": [Function],
                                                          "ColorWidget": [Function],
                                                          "DateTimeWidget": [Function],
                                                          "DateWidget": [Function],
                                                          "EmailWidget": [Function],
                                                          "FileWidget": [Function],
                                                          "HiddenWidget": [Function],
                                                          "PasswordWidget": [Function],
                                                          "RadioWidget": [Function],
                                                          "RangeWidget": [Function],
                                                          "SelectWidget": [Function],
                                                          "TextWidget": [Function],
                                                          "TextareaWidget": [Function],
                                                          "URLWidget": [Function],
                                                          "UpDownWidget": [Function],
                                                        },
                                                      }
                                                    }
                                                    required={true}
                                                    schema={
                                                      Object {
                                                        "type": "string",
                                                      }
                                                    }
                                                    uiSchema={
                                                      Object {
                                                        "classNames": undefined,
                                                      }
                                                    }
                                                    wasPropertyKeyModified={false}
                                                  >
                                                    <Component
                                                      autofocus={false}
                                                      disabled={false}
                                                      formContext={Object {}}
                                                      id="root_statuses_cancelled_name"
                                                      label="name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Object {
                                                          "enumOptions": false,
                                                        }
                                                      }
                                                      placeholder=""
                                                      readonly={false}
                                                      registry={
                                                        Object {
                                                          "ArrayFieldTemplate": [Function],
                                                          "FieldTemplate": [Function],
                                                          "ObjectFieldTemplate": [Function],
                                                          "definitions": Object {},
                                                          "fields": Object {
                                                            "AnyOfField": [Function],
                                                            "ArrayField": [Function],
                                                            "BooleanField": [Function],
                                                            "DescriptionField": [Function],
                                                            "NullField": [Function],
                                                            "NumberField": [Function],
                                                            "ObjectField": [Function],
                                                            "OneOfField": [Function],
                                                            "SchemaField": [Function],
                                                            "StringField": [Function],
                                                            "TitleField": [Function],
                                                            "UnsupportedField": [Function],
                                                          },
                                                          "formContext": Object {},
                                                          "widgets": Object {
                                                            "AltDateTimeWidget": [Function],
                                                            "AltDateWidget": [Function],
                                                            "BaseInput": [Function],
                                                            "CheckboxWidget": [Function],
                                                            "CheckboxesWidget": [Function],
                                                            "ColorWidget": [Function],
                                                            "DateTimeWidget": [Function],
                                                            "DateWidget": [Function],
                                                            "EmailWidget": [Function],
                                                            "FileWidget": [Function],
                                                            "HiddenWidget": [Function],
                                                            "PasswordWidget": [Function],
                                                            "RadioWidget": [Function],
                                                            "RangeWidget": [Function],
                                                            "SelectWidget": [Function],
                                                            "TextWidget": [Function],
                                                            "TextareaWidget": [Function],
                                                            "URLWidget": [Function],
                                                            "UpDownWidget": [Function],
                                                          },
                                                        }
                                                      }
                                                      required={true}
                                                      schema={
                                                        Object {
                                                          "type": "string",
                                                        }
                                                      }
                                                      value="Cancelled"
                                                    >
                                                      <TextWidget
                                                        autofocus={false}
                                                        disabled={false}
                                                        formContext={Object {}}
                                                        id="root_statuses_cancelled_name"
                                                        label="name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        options={
                                                          Object {
                                                            "enumOptions": false,
                                                          }
                                                        }
                                                        placeholder=""
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {},
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "string",
                                                          }
                                                        }
                                                        value="Cancelled"
                                                      >
                                                        <BaseInput
                                                          autofocus={false}
                                                          disabled={false}
                                                          formContext={Object {}}
                                                          id="root_statuses_cancelled_name"
                                                          label="name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          options={
                                                            Object {
                                                              "enumOptions": false,
                                                            }
                                                          }
                                                          placeholder=""
                                                          readonly={false}
                                                          registry={
                                                            Object {
                                                              "ArrayFieldTemplate": [Function],
                                                              "FieldTemplate": [Function],
                                                              "ObjectFieldTemplate": [Function],
                                                              "definitions": Object {},
                                                              "fields": Object {
                                                                "AnyOfField": [Function],
                                                                "ArrayField": [Function],
                                                                "BooleanField": [Function],
                                                                "DescriptionField": [Function],
                                                                "NullField": [Function],
                                                                "NumberField": [Function],
                                                                "ObjectField": [Function],
                                                                "OneOfField": [Function],
                                                                "SchemaField": [Function],
                                                                "StringField": [Function],
                                                                "TitleField": [Function],
                                                                "UnsupportedField": [Function],
                                                              },
                                                              "formContext": Object {},
                                                              "widgets": Object {
                                                                "AltDateTimeWidget": [Function],
                                                                "AltDateWidget": [Function],
                                                                "BaseInput": [Function],
                                                                "CheckboxWidget": [Function],
                                                                "CheckboxesWidget": [Function],
                                                                "ColorWidget": [Function],
                                                                "DateTimeWidget": [Function],
                                                                "DateWidget": [Function],
                                                                "EmailWidget": [Function],
                                                                "FileWidget": [Function],
                                                                "HiddenWidget": [Function],
                                                                "PasswordWidget": [Function],
                                                                "RadioWidget": [Function],
                                                                "RangeWidget": [Function],
                                                                "SelectWidget": [Function],
                                                                "TextWidget": [Function],
                                                                "TextareaWidget": [Function],
                                                                "URLWidget": [Function],
                                                                "UpDownWidget": [Function],
                                                              },
                                                            }
                                                          }
                                                          required={true}
                                                          schema={
                                                            Object {
                                                              "type": "string",
                                                            }
                                                          }
                                                          value="Cancelled"
                                                        >
                                                          <div
                                                            className="listItemContainer"
                                                            key="name"
                                                          >
                                                            <Textbox
                                                              autofocus={false}
                                                              disabled={false}
                                                              formContext={Object {}}
                                                              handleChange={[Function]}
                                                              id="root_statuses_cancelled_name"
                                                              label="name"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              options={
                                                                Object {
                                                                  "enumOptions": false,
                                                                }
                                                              }
                                                              placeholder=""
                                                              properties={
                                                                Object {
                                                                  "type": "string",
                                                                }
                                                              }
                                                              readonly={false}
                                                              registry={
                                                                Object {
                                                                  "ArrayFieldTemplate": [Function],
                                                                  "FieldTemplate": [Function],
                                                                  "ObjectFieldTemplate": [Function],
                                                                  "definitions": Object {},
                                                                  "fields": Object {
                                                                    "AnyOfField": [Function],
                                                                    "ArrayField": [Function],
                                                                    "BooleanField": [Function],
                                                                    "DescriptionField": [Function],
                                                                    "NullField": [Function],
                                                                    "NumberField": [Function],
                                                                    "ObjectField": [Function],
                                                                    "OneOfField": [Function],
                                                                    "SchemaField": [Function],
                                                                    "StringField": [Function],
                                                                    "TitleField": [Function],
                                                                    "UnsupportedField": [Function],
                                                                  },
                                                                  "formContext": Object {},
                                                                  "widgets": Object {
                                                                    "AltDateTimeWidget": [Function],
                                                                    "AltDateWidget": [Function],
                                                                    "BaseInput": [Function],
                                                                    "CheckboxWidget": [Function],
                                                                    "CheckboxesWidget": [Function],
                                                                    "ColorWidget": [Function],
                                                                    "DateTimeWidget": [Function],
                                                                    "DateWidget": [Function],
                                                                    "EmailWidget": [Function],
                                                                    "FileWidget": [Function],
                                                                    "HiddenWidget": [Function],
                                                                    "PasswordWidget": [Function],
                                                                    "RadioWidget": [Function],
                                                                    "RangeWidget": [Function],
                                                                    "SelectWidget": [Function],
                                                                    "TextWidget": [Function],
                                                                    "TextareaWidget": [Function],
                                                                    "URLWidget": [Function],
                                                                    "UpDownWidget": [Function],
                                                                  },
                                                                }
                                                              }
                                                              required={true}
                                                              schema={
                                                                Object {
                                                                  "type": "string",
                                                                }
                                                              }
                                                              uniqueItems={false}
                                                              value="Cancelled"
                                                            >
                                                              <TextboxStateless
                                                                autofocus={false}
                                                                deletable={false}
                                                                disabled={false}
                                                                error={false}
                                                                errorMessage=""
                                                                formContext={Object {}}
                                                                handleChange={[Function]}
                                                                handleDelete={[Function]}
                                                                id="root_statuses_cancelled_name"
                                                                label="name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onSubmit={[Function]}
                                                                options={
                                                                  Object {
                                                                    "enumOptions": false,
                                                                  }
                                                                }
                                                                placeholder=""
                                                                properties={
                                                                  Object {
                                                                    "type": "string",
                                                                  }
                                                                }
                                                                readonly={false}
                                                                registry={
                                                                  Object {
                                                                    "ArrayFieldTemplate": [Function],
                                                                    "FieldTemplate": [Function],
                                                                    "ObjectFieldTemplate": [Function],
                                                                    "definitions": Object {},
                                                                    "fields": Object {
                                                                      "AnyOfField": [Function],
                                                                      "ArrayField": [Function],
                                                                      "BooleanField": [Function],
                                                                      "DescriptionField": [Function],
                                                                      "NullField": [Function],
                                                                      "NumberField": [Function],
                                                                      "ObjectField": [Function],
                                                                      "OneOfField": [Function],
                                                                      "SchemaField": [Function],
                                                                      "StringField": [Function],
                                                                      "TitleField": [Function],
                                                                      "UnsupportedField": [Function],
                                                                    },
                                                                    "formContext": Object {},
                                                                    "widgets": Object {
                                                                      "AltDateTimeWidget": [Function],
                                                                      "AltDateWidget": [Function],
                                                                      "BaseInput": [Function],
                                                                      "CheckboxWidget": [Function],
                                                                      "CheckboxesWidget": [Function],
                                                                      "ColorWidget": [Function],
                                                                      "DateTimeWidget": [Function],
                                                                      "DateWidget": [Function],
                                                                      "EmailWidget": [Function],
                                                                      "FileWidget": [Function],
                                                                      "HiddenWidget": [Function],
                                                                      "PasswordWidget": [Function],
                                                                      "RadioWidget": [Function],
                                                                      "RangeWidget": [Function],
                                                                      "SelectWidget": [Function],
                                                                      "TextWidget": [Function],
                                                                      "TextareaWidget": [Function],
                                                                      "URLWidget": [Function],
                                                                      "UpDownWidget": [Function],
                                                                    },
                                                                  }
                                                                }
                                                                required={true}
                                                                schema={
                                                                  Object {
                                                                    "type": "string",
                                                                  }
                                                                }
                                                                uniqueItems={false}
                                                                value="Cancelled"
                                                              >
                                                                <WithStyles(ForwardRef(TextField))
                                                                  disabled={false}
                                                                  error={false}
                                                                  helperText={false}
                                                                  id="textfield-name"
                                                                  inputProps={
                                                                    Object {
                                                                      "className": "input",
                                                                      "max": undefined,
                                                                      "maxLength": undefined,
                                                                      "min": undefined,
                                                                      "minLength": undefined,
                                                                      "step": undefined,
                                                                    }
                                                                  }
                                                                  name="name"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="string"
                                                                  value="Cancelled"
                                                                >
                                                                  <ForwardRef(TextField)
                                                                    classes={
                                                                      Object {
                                                                        "root": "MuiTextField-root",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    error={false}
                                                                    helperText={false}
                                                                    id="textfield-name"
                                                                    inputProps={
                                                                      Object {
                                                                        "className": "input",
                                                                        "max": undefined,
                                                                        "maxLength": undefined,
                                                                        "min": undefined,
                                                                        "minLength": undefined,
                                                                        "step": undefined,
                                                                      }
                                                                    }
                                                                    name="name"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    type="string"
                                                                    value="Cancelled"
                                                                  >
                                                                    <WithStyles(ForwardRef(FormControl))
                                                                      className="MuiTextField-root"
                                                                      color="primary"
                                                                      disabled={false}
                                                                      error={false}
                                                                      fullWidth={false}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      variant="standard"
                                                                    >
                                                                      <ForwardRef(FormControl)
                                                                        className="MuiTextField-root"
                                                                        classes={
                                                                          Object {
                                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                                            "marginDense": "MuiFormControl-marginDense",
                                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                                            "root": "MuiFormControl-root",
                                                                          }
                                                                        }
                                                                        color="primary"
                                                                        disabled={false}
                                                                        error={false}
                                                                        fullWidth={false}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        variant="standard"
                                                                      >
                                                                        <div
                                                                          className="MuiFormControl-root MuiTextField-root"
                                                                          onKeyDown={[Function]}
                                                                        >
                                                                          <WithStyles(ForwardRef(Input))
                                                                            autoFocus={false}
                                                                            fullWidth={false}
                                                                            id="textfield-name"
                                                                            inputProps={
                                                                              Object {
                                                                                "className": "input",
                                                                                "max": undefined,
                                                                                "maxLength": undefined,
                                                                                "min": undefined,
                                                                                "minLength": undefined,
                                                                                "step": undefined,
                                                                              }
                                                                            }
                                                                            multiline={false}
                                                                            name="name"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            type="string"
                                                                            value="Cancelled"
                                                                          >
                                                                            <ForwardRef(Input)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "error": "Mui-error",
                                                                                  "focused": "Mui-focused",
                                                                                  "formControl": "MuiInput-formControl",
                                                                                  "fullWidth": "MuiInput-fullWidth",
                                                                                  "input": "MuiInput-input",
                                                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInput-marginDense",
                                                                                  "multiline": "MuiInput-multiline",
                                                                                  "root": "MuiInput-root",
                                                                                  "underline": "MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={false}
                                                                              id="textfield-name"
                                                                              inputProps={
                                                                                Object {
                                                                                  "className": "input",
                                                                                  "max": undefined,
                                                                                  "maxLength": undefined,
                                                                                  "min": undefined,
                                                                                  "minLength": undefined,
                                                                                  "step": undefined,
                                                                                }
                                                                              }
                                                                              multiline={false}
                                                                              name="name"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              type="string"
                                                                              value="Cancelled"
                                                                            >
                                                                              <WithStyles(ForwardRef(InputBase))
                                                                                autoFocus={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                                    "disabled": "Mui-disabled",
                                                                                    "error": "Mui-error",
                                                                                    "focused": "Mui-focused",
                                                                                    "formControl": "MuiInput-formControl",
                                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                                    "input": "MuiInput-input",
                                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                    "marginDense": "MuiInput-marginDense",
                                                                                    "multiline": "MuiInput-multiline",
                                                                                    "root": "MuiInput-root MuiInput-underline",
                                                                                    "underline": null,
                                                                                  }
                                                                                }
                                                                                fullWidth={false}
                                                                                id="textfield-name"
                                                                                inputComponent="input"
                                                                                inputProps={
                                                                                  Object {
                                                                                    "className": "input",
                                                                                    "max": undefined,
                                                                                    "maxLength": undefined,
                                                                                    "min": undefined,
                                                                                    "minLength": undefined,
                                                                                    "step": undefined,
                                                                                  }
                                                                                }
                                                                                multiline={false}
                                                                                name="name"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                type="string"
                                                                                value="Cancelled"
                                                                              >
                                                                                <ForwardRef(InputBase)
                                                                                  autoFocus={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                                      "error": "Mui-error Mui-error",
                                                                                      "focused": "Mui-focused Mui-focused",
                                                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                      "input": "MuiInputBase-input MuiInput-input",
                                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                    }
                                                                                  }
                                                                                  fullWidth={false}
                                                                                  id="textfield-name"
                                                                                  inputComponent="input"
                                                                                  inputProps={
                                                                                    Object {
                                                                                      "className": "input",
                                                                                      "max": undefined,
                                                                                      "maxLength": undefined,
                                                                                      "min": undefined,
                                                                                      "minLength": undefined,
                                                                                      "step": undefined,
                                                                                    }
                                                                                  }
                                                                                  multiline={false}
                                                                                  name="name"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  type="string"
                                                                                  value="Cancelled"
                                                                                >
                                                                                  <div
                                                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <input
                                                                                      aria-invalid={false}
                                                                                      autoFocus={false}
                                                                                      className="MuiInputBase-input MuiInput-input input"
                                                                                      disabled={false}
                                                                                      id="textfield-name"
                                                                                      name="name"
                                                                                      onAnimationStart={[Function]}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      required={false}
                                                                                      type="string"
                                                                                      value="Cancelled"
                                                                                    />
                                                                                  </div>
                                                                                </ForwardRef(InputBase)>
                                                                              </WithStyles(ForwardRef(InputBase))>
                                                                            </ForwardRef(Input)>
                                                                          </WithStyles(ForwardRef(Input))>
                                                                        </div>
                                                                      </ForwardRef(FormControl)>
                                                                    </WithStyles(ForwardRef(FormControl))>
                                                                  </ForwardRef(TextField)>
                                                                </WithStyles(ForwardRef(TextField))>
                                                              </TextboxStateless>
                                                            </Textbox>
                                                          </div>
                                                        </BaseInput>
                                                      </TextWidget>
                                                    </Component>
                                                  </StringField>
                                                </div>
                                              </CustomFieldTemplate>
                                            </SchemaField>
                                          </div>
                                        </ObjectFieldTemplate>
                                      </ObjectField>
                                    </div>
                                  </CustomFieldTemplate>
                                </SchemaField>
                              </div>
                              <div
                                key="scheduled"
                              >
                                <SchemaField
                                  autofocus={false}
                                  disabled={false}
                                  errorSchema={Object {}}
                                  formData={
                                    Object {
                                      "allow_authorization": false,
                                      "allow_cancel": true,
                                      "allow_delete": true,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Scheduled",
                                      "show_authorization": true,
                                    }
                                  }
                                  idSchema={
                                    Object {
                                      "$id": "root_statuses_scheduled",
                                      "allow_delete": Object {
                                        "$id": "root_statuses_scheduled_allow_delete",
                                      },
                                      "is_read_only": Object {
                                        "$id": "root_statuses_scheduled_is_read_only",
                                      },
                                      "name": Object {
                                        "$id": "root_statuses_scheduled_name",
                                      },
                                    }
                                  }
                                  key="scheduled"
                                  name="scheduled"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onDropPropertyClick={[Function]}
                                  onFocus={[Function]}
                                  onKeyChange={[Function]}
                                  readonly={false}
                                  registry={
                                    Object {
                                      "ArrayFieldTemplate": [Function],
                                      "FieldTemplate": [Function],
                                      "ObjectFieldTemplate": [Function],
                                      "definitions": Object {},
                                      "fields": Object {
                                        "AnyOfField": [Function],
                                        "ArrayField": [Function],
                                        "BooleanField": [Function],
                                        "DescriptionField": [Function],
                                        "NullField": [Function],
                                        "NumberField": [Function],
                                        "ObjectField": [Function],
                                        "OneOfField": [Function],
                                        "SchemaField": [Function],
                                        "StringField": [Function],
                                        "TitleField": [Function],
                                        "UnsupportedField": [Function],
                                      },
                                      "formContext": Object {},
                                      "widgets": Object {
                                        "AltDateTimeWidget": [Function],
                                        "AltDateWidget": [Function],
                                        "BaseInput": [Function],
                                        "CheckboxWidget": [Function],
                                        "CheckboxesWidget": [Function],
                                        "ColorWidget": [Function],
                                        "DateTimeWidget": [Function],
                                        "DateWidget": [Function],
                                        "EmailWidget": [Function],
                                        "FileWidget": [Function],
                                        "HiddenWidget": [Function],
                                        "PasswordWidget": [Function],
                                        "RadioWidget": [Function],
                                        "RangeWidget": [Function],
                                        "SelectWidget": [Function],
                                        "TextWidget": [Function],
                                        "TextareaWidget": [Function],
                                        "URLWidget": [Function],
                                        "UpDownWidget": [Function],
                                      },
                                    }
                                  }
                                  required={false}
                                  schema={
                                    Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "allow_delete": Object {
                                          "type": "boolean",
                                        },
                                        "is_read_only": Object {
                                          "type": "boolean",
                                        },
                                        "name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "name",
                                        "is_read_only",
                                      ],
                                      "type": "object",
                                    }
                                  }
                                  uiSchema={Object {}}
                                  wasPropertyKeyModified={false}
                                >
                                  <CustomFieldTemplate
                                    classNames="form-group field field-object"
                                    description={
                                      <DescriptionField
                                        formContext={Object {}}
                                        id="root_statuses_scheduled__description"
                                      />
                                    }
                                    disabled={false}
                                    displayLabel={false}
                                    errors={<ErrorList />}
                                    fields={
                                      Object {
                                        "AnyOfField": [Function],
                                        "ArrayField": [Function],
                                        "BooleanField": [Function],
                                        "DescriptionField": [Function],
                                        "NullField": [Function],
                                        "NumberField": [Function],
                                        "ObjectField": [Function],
                                        "OneOfField": [Function],
                                        "SchemaField": [Function],
                                        "StringField": [Function],
                                        "TitleField": [Function],
                                        "UnsupportedField": [Function],
                                      }
                                    }
                                    formContext={Object {}}
                                    help={<Help />}
                                    hidden={false}
                                    id="root_statuses_scheduled"
                                    label="scheduled"
                                    onDropPropertyClick={[Function]}
                                    onKeyChange={[Function]}
                                    readonly={false}
                                    required={false}
                                    schema={
                                      Object {
                                        "additionalProperties": false,
                                        "properties": Object {
                                          "allow_delete": Object {
                                            "type": "boolean",
                                          },
                                          "is_read_only": Object {
                                            "type": "boolean",
                                          },
                                          "name": Object {
                                            "type": "string",
                                          },
                                        },
                                        "required": Array [
                                          "name",
                                          "is_read_only",
                                        ],
                                        "type": "object",
                                      }
                                    }
                                    uiSchema={Object {}}
                                  >
                                    <div
                                      className="form-group field field-object"
                                    >
                                      <ObjectField
                                        autofocus={false}
                                        disabled={false}
                                        errorSchema={Object {}}
                                        formContext={Object {}}
                                        formData={
                                          Object {
                                            "allow_authorization": false,
                                            "allow_cancel": true,
                                            "allow_delete": true,
                                            "allow_open": false,
                                            "allow_request_approval": false,
                                            "is_read_only": true,
                                            "name": "Scheduled",
                                            "show_authorization": true,
                                          }
                                        }
                                        idSchema={
                                          Object {
                                            "$id": "root_statuses_scheduled",
                                            "allow_delete": Object {
                                              "$id": "root_statuses_scheduled_allow_delete",
                                            },
                                            "is_read_only": Object {
                                              "$id": "root_statuses_scheduled_is_read_only",
                                            },
                                            "name": Object {
                                              "$id": "root_statuses_scheduled_name",
                                            },
                                          }
                                        }
                                        name="scheduled"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDropPropertyClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyChange={[Function]}
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {},
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "allow_delete": Object {
                                                "type": "boolean",
                                              },
                                              "is_read_only": Object {
                                                "type": "boolean",
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "is_read_only",
                                            ],
                                            "type": "object",
                                          }
                                        }
                                        uiSchema={
                                          Object {
                                            "classNames": undefined,
                                          }
                                        }
                                        wasPropertyKeyModified={false}
                                      >
                                        <ObjectFieldTemplate
                                          DescriptionField={[Function]}
                                          TitleField={[Function]}
                                          disabled={false}
                                          formContext={Object {}}
                                          formData={
                                            Object {
                                              "allow_authorization": false,
                                              "allow_cancel": true,
                                              "allow_delete": true,
                                              "allow_open": false,
                                              "allow_request_approval": false,
                                              "is_read_only": true,
                                              "name": "Scheduled",
                                              "show_authorization": true,
                                            }
                                          }
                                          idSchema={
                                            Object {
                                              "$id": "root_statuses_scheduled",
                                              "allow_delete": Object {
                                                "$id": "root_statuses_scheduled_allow_delete",
                                              },
                                              "is_read_only": Object {
                                                "$id": "root_statuses_scheduled_is_read_only",
                                              },
                                              "name": Object {
                                                "$id": "root_statuses_scheduled_name",
                                              },
                                            }
                                          }
                                          onAddClick={[Function]}
                                          properties={
                                            Array [
                                              Object {
                                                "content": <SchemaField
                                                  autofocus={false}
                                                  disabled={false}
                                                  errorSchema={Object {}}
                                                  formData={true}
                                                  idSchema={
                                                    Object {
                                                      "$id": "root_statuses_scheduled_allow_delete",
                                                    }
                                                  }
                                                  name="allow_delete"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDropPropertyClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyChange={[Function]}
                                                  readonly={false}
                                                  registry={
                                                    Object {
                                                      "ArrayFieldTemplate": [Function],
                                                      "FieldTemplate": [Function],
                                                      "ObjectFieldTemplate": [Function],
                                                      "definitions": Object {},
                                                      "fields": Object {
                                                        "AnyOfField": [Function],
                                                        "ArrayField": [Function],
                                                        "BooleanField": [Function],
                                                        "DescriptionField": [Function],
                                                        "NullField": [Function],
                                                        "NumberField": [Function],
                                                        "ObjectField": [Function],
                                                        "OneOfField": [Function],
                                                        "SchemaField": [Function],
                                                        "StringField": [Function],
                                                        "TitleField": [Function],
                                                        "UnsupportedField": [Function],
                                                      },
                                                      "formContext": Object {},
                                                      "widgets": Object {
                                                        "AltDateTimeWidget": [Function],
                                                        "AltDateWidget": [Function],
                                                        "BaseInput": [Function],
                                                        "CheckboxWidget": [Function],
                                                        "CheckboxesWidget": [Function],
                                                        "ColorWidget": [Function],
                                                        "DateTimeWidget": [Function],
                                                        "DateWidget": [Function],
                                                        "EmailWidget": [Function],
                                                        "FileWidget": [Function],
                                                        "HiddenWidget": [Function],
                                                        "PasswordWidget": [Function],
                                                        "RadioWidget": [Function],
                                                        "RangeWidget": [Function],
                                                        "SelectWidget": [Function],
                                                        "TextWidget": [Function],
                                                        "TextareaWidget": [Function],
                                                        "URLWidget": [Function],
                                                        "UpDownWidget": [Function],
                                                      },
                                                    }
                                                  }
                                                  required={false}
                                                  schema={
                                                    Object {
                                                      "type": "boolean",
                                                    }
                                                  }
                                                  uiSchema={Object {}}
                                                  wasPropertyKeyModified={false}
                                                />,
                                                "disabled": false,
                                                "name": "allow_delete",
                                                "readonly": false,
                                                "required": false,
                                              },
                                              Object {
                                                "content": <SchemaField
                                                  autofocus={false}
                                                  disabled={false}
                                                  errorSchema={Object {}}
                                                  formData={true}
                                                  idSchema={
                                                    Object {
                                                      "$id": "root_statuses_scheduled_is_read_only",
                                                    }
                                                  }
                                                  name="is_read_only"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDropPropertyClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyChange={[Function]}
                                                  readonly={false}
                                                  registry={
                                                    Object {
                                                      "ArrayFieldTemplate": [Function],
                                                      "FieldTemplate": [Function],
                                                      "ObjectFieldTemplate": [Function],
                                                      "definitions": Object {},
                                                      "fields": Object {
                                                        "AnyOfField": [Function],
                                                        "ArrayField": [Function],
                                                        "BooleanField": [Function],
                                                        "DescriptionField": [Function],
                                                        "NullField": [Function],
                                                        "NumberField": [Function],
                                                        "ObjectField": [Function],
                                                        "OneOfField": [Function],
                                                        "SchemaField": [Function],
                                                        "StringField": [Function],
                                                        "TitleField": [Function],
                                                        "UnsupportedField": [Function],
                                                      },
                                                      "formContext": Object {},
                                                      "widgets": Object {
                                                        "AltDateTimeWidget": [Function],
                                                        "AltDateWidget": [Function],
                                                        "BaseInput": [Function],
                                                        "CheckboxWidget": [Function],
                                                        "CheckboxesWidget": [Function],
                                                        "ColorWidget": [Function],
                                                        "DateTimeWidget": [Function],
                                                        "DateWidget": [Function],
                                                        "EmailWidget": [Function],
                                                        "FileWidget": [Function],
                                                        "HiddenWidget": [Function],
                                                        "PasswordWidget": [Function],
                                                        "RadioWidget": [Function],
                                                        "RangeWidget": [Function],
                                                        "SelectWidget": [Function],
                                                        "TextWidget": [Function],
                                                        "TextareaWidget": [Function],
                                                        "URLWidget": [Function],
                                                        "UpDownWidget": [Function],
                                                      },
                                                    }
                                                  }
                                                  required={true}
                                                  schema={
                                                    Object {
                                                      "type": "boolean",
                                                    }
                                                  }
                                                  uiSchema={Object {}}
                                                  wasPropertyKeyModified={false}
                                                />,
                                                "disabled": false,
                                                "name": "is_read_only",
                                                "readonly": false,
                                                "required": false,
                                              },
                                              Object {
                                                "content": <SchemaField
                                                  autofocus={false}
                                                  disabled={false}
                                                  errorSchema={Object {}}
                                                  formData="Scheduled"
                                                  idSchema={
                                                    Object {
                                                      "$id": "root_statuses_scheduled_name",
                                                    }
                                                  }
                                                  name="name"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDropPropertyClick={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyChange={[Function]}
                                                  readonly={false}
                                                  registry={
                                                    Object {
                                                      "ArrayFieldTemplate": [Function],
                                                      "FieldTemplate": [Function],
                                                      "ObjectFieldTemplate": [Function],
                                                      "definitions": Object {},
                                                      "fields": Object {
                                                        "AnyOfField": [Function],
                                                        "ArrayField": [Function],
                                                        "BooleanField": [Function],
                                                        "DescriptionField": [Function],
                                                        "NullField": [Function],
                                                        "NumberField": [Function],
                                                        "ObjectField": [Function],
                                                        "OneOfField": [Function],
                                                        "SchemaField": [Function],
                                                        "StringField": [Function],
                                                        "TitleField": [Function],
                                                        "UnsupportedField": [Function],
                                                      },
                                                      "formContext": Object {},
                                                      "widgets": Object {
                                                        "AltDateTimeWidget": [Function],
                                                        "AltDateWidget": [Function],
                                                        "BaseInput": [Function],
                                                        "CheckboxWidget": [Function],
                                                        "CheckboxesWidget": [Function],
                                                        "ColorWidget": [Function],
                                                        "DateTimeWidget": [Function],
                                                        "DateWidget": [Function],
                                                        "EmailWidget": [Function],
                                                        "FileWidget": [Function],
                                                        "HiddenWidget": [Function],
                                                        "PasswordWidget": [Function],
                                                        "RadioWidget": [Function],
                                                        "RangeWidget": [Function],
                                                        "SelectWidget": [Function],
                                                        "TextWidget": [Function],
                                                        "TextareaWidget": [Function],
                                                        "URLWidget": [Function],
                                                        "UpDownWidget": [Function],
                                                      },
                                                    }
                                                  }
                                                  required={true}
                                                  schema={
                                                    Object {
                                                      "type": "string",
                                                    }
                                                  }
                                                  uiSchema={Object {}}
                                                  wasPropertyKeyModified={false}
                                                />,
                                                "disabled": false,
                                                "name": "name",
                                                "readonly": false,
                                                "required": false,
                                              },
                                            ]
                                          }
                                          readonly={false}
                                          required={false}
                                          schema={
                                            Object {
                                              "additionalProperties": false,
                                              "properties": Object {
                                                "allow_delete": Object {
                                                  "type": "boolean",
                                                },
                                                "is_read_only": Object {
                                                  "type": "boolean",
                                                },
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                                "is_read_only",
                                              ],
                                              "type": "object",
                                            }
                                          }
                                          title="scheduled"
                                          uiSchema={
                                            Object {
                                              "classNames": undefined,
                                            }
                                          }
                                        >
                                          <div
                                            key="allow_delete"
                                          >
                                            <SchemaField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formData={true}
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_scheduled_allow_delete",
                                                }
                                              }
                                              key="allow_delete"
                                              name="allow_delete"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {},
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={false}
                                              schema={
                                                Object {
                                                  "type": "boolean",
                                                }
                                              }
                                              uiSchema={Object {}}
                                              wasPropertyKeyModified={false}
                                            >
                                              <CustomFieldTemplate
                                                classNames="form-group field field-boolean"
                                                description={
                                                  <DescriptionField
                                                    formContext={Object {}}
                                                    id="root_statuses_scheduled_allow_delete__description"
                                                  />
                                                }
                                                disabled={false}
                                                displayLabel={false}
                                                errors={<ErrorList />}
                                                fields={
                                                  Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  }
                                                }
                                                formContext={Object {}}
                                                help={<Help />}
                                                hidden={false}
                                                id="root_statuses_scheduled_allow_delete"
                                                label="allow_delete"
                                                onDropPropertyClick={[Function]}
                                                onKeyChange={[Function]}
                                                readonly={false}
                                                required={false}
                                                schema={
                                                  Object {
                                                    "type": "boolean",
                                                  }
                                                }
                                                uiSchema={Object {}}
                                              >
                                                <div
                                                  className="form-group field field-boolean"
                                                >
                                                  <BooleanField
                                                    autofocus={false}
                                                    disabled={false}
                                                    errorSchema={Object {}}
                                                    formContext={Object {}}
                                                    formData={true}
                                                    idSchema={
                                                      Object {
                                                        "$id": "root_statuses_scheduled_allow_delete",
                                                      }
                                                    }
                                                    name="allow_delete"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDropPropertyClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyChange={[Function]}
                                                    readonly={false}
                                                    registry={
                                                      Object {
                                                        "ArrayFieldTemplate": [Function],
                                                        "FieldTemplate": [Function],
                                                        "ObjectFieldTemplate": [Function],
                                                        "definitions": Object {},
                                                        "fields": Object {
                                                          "AnyOfField": [Function],
                                                          "ArrayField": [Function],
                                                          "BooleanField": [Function],
                                                          "DescriptionField": [Function],
                                                          "NullField": [Function],
                                                          "NumberField": [Function],
                                                          "ObjectField": [Function],
                                                          "OneOfField": [Function],
                                                          "SchemaField": [Function],
                                                          "StringField": [Function],
                                                          "TitleField": [Function],
                                                          "UnsupportedField": [Function],
                                                        },
                                                        "formContext": Object {},
                                                        "widgets": Object {
                                                          "AltDateTimeWidget": [Function],
                                                          "AltDateWidget": [Function],
                                                          "BaseInput": [Function],
                                                          "CheckboxWidget": [Function],
                                                          "CheckboxesWidget": [Function],
                                                          "ColorWidget": [Function],
                                                          "DateTimeWidget": [Function],
                                                          "DateWidget": [Function],
                                                          "EmailWidget": [Function],
                                                          "FileWidget": [Function],
                                                          "HiddenWidget": [Function],
                                                          "PasswordWidget": [Function],
                                                          "RadioWidget": [Function],
                                                          "RangeWidget": [Function],
                                                          "SelectWidget": [Function],
                                                          "TextWidget": [Function],
                                                          "TextareaWidget": [Function],
                                                          "URLWidget": [Function],
                                                          "UpDownWidget": [Function],
                                                        },
                                                      }
                                                    }
                                                    required={false}
                                                    schema={
                                                      Object {
                                                        "type": "boolean",
                                                      }
                                                    }
                                                    uiSchema={
                                                      Object {
                                                        "classNames": undefined,
                                                      }
                                                    }
                                                    wasPropertyKeyModified={false}
                                                  >
                                                    <Component
                                                      autofocus={false}
                                                      disabled={false}
                                                      formContext={Object {}}
                                                      id="root_statuses_scheduled_allow_delete"
                                                      label="allow_delete"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Object {
                                                          "enumOptions": Array [
                                                            Object {
                                                              "label": "yes",
                                                              "value": true,
                                                            },
                                                            Object {
                                                              "label": "no",
                                                              "value": false,
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      readonly={false}
                                                      registry={
                                                        Object {
                                                          "ArrayFieldTemplate": [Function],
                                                          "FieldTemplate": [Function],
                                                          "ObjectFieldTemplate": [Function],
                                                          "definitions": Object {},
                                                          "fields": Object {
                                                            "AnyOfField": [Function],
                                                            "ArrayField": [Function],
                                                            "BooleanField": [Function],
                                                            "DescriptionField": [Function],
                                                            "NullField": [Function],
                                                            "NumberField": [Function],
                                                            "ObjectField": [Function],
                                                            "OneOfField": [Function],
                                                            "SchemaField": [Function],
                                                            "StringField": [Function],
                                                            "TitleField": [Function],
                                                            "UnsupportedField": [Function],
                                                          },
                                                          "formContext": Object {},
                                                          "widgets": Object {
                                                            "AltDateTimeWidget": [Function],
                                                            "AltDateWidget": [Function],
                                                            "BaseInput": [Function],
                                                            "CheckboxWidget": [Function],
                                                            "CheckboxesWidget": [Function],
                                                            "ColorWidget": [Function],
                                                            "DateTimeWidget": [Function],
                                                            "DateWidget": [Function],
                                                            "EmailWidget": [Function],
                                                            "FileWidget": [Function],
                                                            "HiddenWidget": [Function],
                                                            "PasswordWidget": [Function],
                                                            "RadioWidget": [Function],
                                                            "RangeWidget": [Function],
                                                            "SelectWidget": [Function],
                                                            "TextWidget": [Function],
                                                            "TextareaWidget": [Function],
                                                            "URLWidget": [Function],
                                                            "UpDownWidget": [Function],
                                                          },
                                                        }
                                                      }
                                                      required={false}
                                                      schema={
                                                        Object {
                                                          "type": "boolean",
                                                        }
                                                      }
                                                      value={true}
                                                    >
                                                      <CheckboxWidget
                                                        autofocus={false}
                                                        disabled={false}
                                                        formContext={Object {}}
                                                        id="root_statuses_scheduled_allow_delete"
                                                        label="allow_delete"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        options={
                                                          Object {
                                                            "enumOptions": Array [
                                                              Object {
                                                                "label": "yes",
                                                                "value": true,
                                                              },
                                                              Object {
                                                                "label": "no",
                                                                "value": false,
                                                              },
                                                            ],
                                                          }
                                                        }
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {},
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={false}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        value={true}
                                                      >
                                                        <Toggle
                                                          autofocus={false}
                                                          deletable={false}
                                                          disabled={false}
                                                          formContext={Object {}}
                                                          handleChange={[Function]}
                                                          handleDelete={[Function]}
                                                          id="root_statuses_scheduled_allow_delete"
                                                          label="allow_delete"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          options={
                                                            Object {
                                                              "enumOptions": Array [
                                                                Object {
                                                                  "label": "yes",
                                                                  "value": true,
                                                                },
                                                                Object {
                                                                  "label": "no",
                                                                  "value": false,
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          readonly={false}
                                                          registry={
                                                            Object {
                                                              "ArrayFieldTemplate": [Function],
                                                              "FieldTemplate": [Function],
                                                              "ObjectFieldTemplate": [Function],
                                                              "definitions": Object {},
                                                              "fields": Object {
                                                                "AnyOfField": [Function],
                                                                "ArrayField": [Function],
                                                                "BooleanField": [Function],
                                                                "DescriptionField": [Function],
                                                                "NullField": [Function],
                                                                "NumberField": [Function],
                                                                "ObjectField": [Function],
                                                                "OneOfField": [Function],
                                                                "SchemaField": [Function],
                                                                "StringField": [Function],
                                                                "TitleField": [Function],
                                                                "UnsupportedField": [Function],
                                                              },
                                                              "formContext": Object {},
                                                              "widgets": Object {
                                                                "AltDateTimeWidget": [Function],
                                                                "AltDateWidget": [Function],
                                                                "BaseInput": [Function],
                                                                "CheckboxWidget": [Function],
                                                                "CheckboxesWidget": [Function],
                                                                "ColorWidget": [Function],
                                                                "DateTimeWidget": [Function],
                                                                "DateWidget": [Function],
                                                                "EmailWidget": [Function],
                                                                "FileWidget": [Function],
                                                                "HiddenWidget": [Function],
                                                                "PasswordWidget": [Function],
                                                                "RadioWidget": [Function],
                                                                "RangeWidget": [Function],
                                                                "SelectWidget": [Function],
                                                                "TextWidget": [Function],
                                                                "TextareaWidget": [Function],
                                                                "URLWidget": [Function],
                                                                "UpDownWidget": [Function],
                                                              },
                                                            }
                                                          }
                                                          required={false}
                                                          schema={
                                                            Object {
                                                              "type": "boolean",
                                                            }
                                                          }
                                                          value={true}
                                                        >
                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                            className="toggle"
                                                            control={
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={true}
                                                                color="primary"
                                                                disabled={false}
                                                                name="allow_delete"
                                                                onChange={[Function]}
                                                                value={true}
                                                              />
                                                            }
                                                            label="ON"
                                                          >
                                                            <ForwardRef(FormControlLabel)
                                                              className="toggle"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "label": "MuiFormControlLabel-label",
                                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                  "root": "MuiFormControlLabel-root",
                                                                }
                                                              }
                                                              control={
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={true}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="allow_delete"
                                                                  onChange={[Function]}
                                                                  value={true}
                                                                />
                                                              }
                                                              label="ON"
                                                            >
                                                              <label
                                                                className="MuiFormControlLabel-root toggle"
                                                              >
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={true}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="allow_delete"
                                                                  onChange={[Function]}
                                                                  value={true}
                                                                >
                                                                  <ForwardRef(Switch)
                                                                    checked={true}
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "colorPrimary": "MuiSwitch-colorPrimary",
                                                                        "colorSecondary": "MuiSwitch-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "edgeEnd": "MuiSwitch-edgeEnd",
                                                                        "edgeStart": "MuiSwitch-edgeStart",
                                                                        "input": "MuiSwitch-input",
                                                                        "root": "MuiSwitch-root",
                                                                        "sizeSmall": "MuiSwitch-sizeSmall",
                                                                        "switchBase": "MuiSwitch-switchBase",
                                                                        "thumb": "MuiSwitch-thumb",
                                                                        "track": "MuiSwitch-track",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    name="allow_delete"
                                                                    onChange={[Function]}
                                                                    value={true}
                                                                  >
                                                                    <span
                                                                      className="MuiSwitch-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(SwitchBase))
                                                                        checked={true}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "Mui-checked",
                                                                            "disabled": "Mui-disabled",
                                                                            "input": "MuiSwitch-input",
                                                                            "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        disabled={false}
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="allow_delete"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                        value={true}
                                                                      >
                                                                        <ForwardRef(SwitchBase)
                                                                          checked={true}
                                                                          checkedIcon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                                              "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                                                              "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                            }
                                                                          }
                                                                          disabled={false}
                                                                          icon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          name="allow_delete"
                                                                          onChange={[Function]}
                                                                          type="checkbox"
                                                                          value={true}
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                            component="span"
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="span"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onBlur={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                    onBlur={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                                                                        disabled={false}
                                                                                        name="allow_delete"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                        value={true}
                                                                                      />
                                                                                      <span
                                                                                        className="MuiSwitch-thumb"
                                                                                      />
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </span>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </ForwardRef(SwitchBase)>
                                                                      </WithStyles(ForwardRef(SwitchBase))>
                                                                      <span
                                                                        className="MuiSwitch-track"
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(Switch)>
                                                                </WithStyles(ForwardRef(Switch))>
                                                                <WithStyles(ForwardRef(Typography))
                                                                  className="MuiFormControlLabel-label"
                                                                  component="span"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    className="MuiFormControlLabel-label"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                  >
                                                                    <span
                                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                    >
                                                                      ON
                                                                    </span>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </label>
                                                            </ForwardRef(FormControlLabel)>
                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                        </Toggle>
                                                      </CheckboxWidget>
                                                    </Component>
                                                  </BooleanField>
                                                </div>
                                              </CustomFieldTemplate>
                                            </SchemaField>
                                          </div>
                                          <div
                                            key="is_read_only"
                                          >
                                            <SchemaField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formData={true}
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_scheduled_is_read_only",
                                                }
                                              }
                                              key="is_read_only"
                                              name="is_read_only"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {},
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={true}
                                              schema={
                                                Object {
                                                  "type": "boolean",
                                                }
                                              }
                                              uiSchema={Object {}}
                                              wasPropertyKeyModified={false}
                                            >
                                              <CustomFieldTemplate
                                                classNames="form-group field field-boolean"
                                                description={
                                                  <DescriptionField
                                                    formContext={Object {}}
                                                    id="root_statuses_scheduled_is_read_only__description"
                                                  />
                                                }
                                                disabled={false}
                                                displayLabel={false}
                                                errors={<ErrorList />}
                                                fields={
                                                  Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  }
                                                }
                                                formContext={Object {}}
                                                help={<Help />}
                                                hidden={false}
                                                id="root_statuses_scheduled_is_read_only"
                                                label="is_read_only"
                                                onDropPropertyClick={[Function]}
                                                onKeyChange={[Function]}
                                                readonly={false}
                                                required={true}
                                                schema={
                                                  Object {
                                                    "type": "boolean",
                                                  }
                                                }
                                                uiSchema={Object {}}
                                              >
                                                <div
                                                  className="form-group field field-boolean"
                                                >
                                                  <BooleanField
                                                    autofocus={false}
                                                    disabled={false}
                                                    errorSchema={Object {}}
                                                    formContext={Object {}}
                                                    formData={true}
                                                    idSchema={
                                                      Object {
                                                        "$id": "root_statuses_scheduled_is_read_only",
                                                      }
                                                    }
                                                    name="is_read_only"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDropPropertyClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyChange={[Function]}
                                                    readonly={false}
                                                    registry={
                                                      Object {
                                                        "ArrayFieldTemplate": [Function],
                                                        "FieldTemplate": [Function],
                                                        "ObjectFieldTemplate": [Function],
                                                        "definitions": Object {},
                                                        "fields": Object {
                                                          "AnyOfField": [Function],
                                                          "ArrayField": [Function],
                                                          "BooleanField": [Function],
                                                          "DescriptionField": [Function],
                                                          "NullField": [Function],
                                                          "NumberField": [Function],
                                                          "ObjectField": [Function],
                                                          "OneOfField": [Function],
                                                          "SchemaField": [Function],
                                                          "StringField": [Function],
                                                          "TitleField": [Function],
                                                          "UnsupportedField": [Function],
                                                        },
                                                        "formContext": Object {},
                                                        "widgets": Object {
                                                          "AltDateTimeWidget": [Function],
                                                          "AltDateWidget": [Function],
                                                          "BaseInput": [Function],
                                                          "CheckboxWidget": [Function],
                                                          "CheckboxesWidget": [Function],
                                                          "ColorWidget": [Function],
                                                          "DateTimeWidget": [Function],
                                                          "DateWidget": [Function],
                                                          "EmailWidget": [Function],
                                                          "FileWidget": [Function],
                                                          "HiddenWidget": [Function],
                                                          "PasswordWidget": [Function],
                                                          "RadioWidget": [Function],
                                                          "RangeWidget": [Function],
                                                          "SelectWidget": [Function],
                                                          "TextWidget": [Function],
                                                          "TextareaWidget": [Function],
                                                          "URLWidget": [Function],
                                                          "UpDownWidget": [Function],
                                                        },
                                                      }
                                                    }
                                                    required={true}
                                                    schema={
                                                      Object {
                                                        "type": "boolean",
                                                      }
                                                    }
                                                    uiSchema={
                                                      Object {
                                                        "classNames": undefined,
                                                      }
                                                    }
                                                    wasPropertyKeyModified={false}
                                                  >
                                                    <Component
                                                      autofocus={false}
                                                      disabled={false}
                                                      formContext={Object {}}
                                                      id="root_statuses_scheduled_is_read_only"
                                                      label="is_read_only"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Object {
                                                          "enumOptions": Array [
                                                            Object {
                                                              "label": "yes",
                                                              "value": true,
                                                            },
                                                            Object {
                                                              "label": "no",
                                                              "value": false,
                                                            },
                                                          ],
                                                        }
                                                      }
                                                      readonly={false}
                                                      registry={
                                                        Object {
                                                          "ArrayFieldTemplate": [Function],
                                                          "FieldTemplate": [Function],
                                                          "ObjectFieldTemplate": [Function],
                                                          "definitions": Object {},
                                                          "fields": Object {
                                                            "AnyOfField": [Function],
                                                            "ArrayField": [Function],
                                                            "BooleanField": [Function],
                                                            "DescriptionField": [Function],
                                                            "NullField": [Function],
                                                            "NumberField": [Function],
                                                            "ObjectField": [Function],
                                                            "OneOfField": [Function],
                                                            "SchemaField": [Function],
                                                            "StringField": [Function],
                                                            "TitleField": [Function],
                                                            "UnsupportedField": [Function],
                                                          },
                                                          "formContext": Object {},
                                                          "widgets": Object {
                                                            "AltDateTimeWidget": [Function],
                                                            "AltDateWidget": [Function],
                                                            "BaseInput": [Function],
                                                            "CheckboxWidget": [Function],
                                                            "CheckboxesWidget": [Function],
                                                            "ColorWidget": [Function],
                                                            "DateTimeWidget": [Function],
                                                            "DateWidget": [Function],
                                                            "EmailWidget": [Function],
                                                            "FileWidget": [Function],
                                                            "HiddenWidget": [Function],
                                                            "PasswordWidget": [Function],
                                                            "RadioWidget": [Function],
                                                            "RangeWidget": [Function],
                                                            "SelectWidget": [Function],
                                                            "TextWidget": [Function],
                                                            "TextareaWidget": [Function],
                                                            "URLWidget": [Function],
                                                            "UpDownWidget": [Function],
                                                          },
                                                        }
                                                      }
                                                      required={true}
                                                      schema={
                                                        Object {
                                                          "type": "boolean",
                                                        }
                                                      }
                                                      value={true}
                                                    >
                                                      <CheckboxWidget
                                                        autofocus={false}
                                                        disabled={false}
                                                        formContext={Object {}}
                                                        id="root_statuses_scheduled_is_read_only"
                                                        label="is_read_only"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        options={
                                                          Object {
                                                            "enumOptions": Array [
                                                              Object {
                                                                "label": "yes",
                                                                "value": true,
                                                              },
                                                              Object {
                                                                "label": "no",
                                                                "value": false,
                                                              },
                                                            ],
                                                          }
                                                        }
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {},
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        value={true}
                                                      >
                                                        <Toggle
                                                          autofocus={false}
                                                          deletable={false}
                                                          disabled={false}
                                                          formContext={Object {}}
                                                          handleChange={[Function]}
                                                          handleDelete={[Function]}
                                                          id="root_statuses_scheduled_is_read_only"
                                                          label="is_read_only"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          options={
                                                            Object {
                                                              "enumOptions": Array [
                                                                Object {
                                                                  "label": "yes",
                                                                  "value": true,
                                                                },
                                                                Object {
                                                                  "label": "no",
                                                                  "value": false,
                                                                },
                                                              ],
                                                            }
                                                          }
                                                          readonly={false}
                                                          registry={
                                                            Object {
                                                              "ArrayFieldTemplate": [Function],
                                                              "FieldTemplate": [Function],
                                                              "ObjectFieldTemplate": [Function],
                                                              "definitions": Object {},
                                                              "fields": Object {
                                                                "AnyOfField": [Function],
                                                                "ArrayField": [Function],
                                                                "BooleanField": [Function],
                                                                "DescriptionField": [Function],
                                                                "NullField": [Function],
                                                                "NumberField": [Function],
                                                                "ObjectField": [Function],
                                                                "OneOfField": [Function],
                                                                "SchemaField": [Function],
                                                                "StringField": [Function],
                                                                "TitleField": [Function],
                                                                "UnsupportedField": [Function],
                                                              },
                                                              "formContext": Object {},
                                                              "widgets": Object {
                                                                "AltDateTimeWidget": [Function],
                                                                "AltDateWidget": [Function],
                                                                "BaseInput": [Function],
                                                                "CheckboxWidget": [Function],
                                                                "CheckboxesWidget": [Function],
                                                                "ColorWidget": [Function],
                                                                "DateTimeWidget": [Function],
                                                                "DateWidget": [Function],
                                                                "EmailWidget": [Function],
                                                                "FileWidget": [Function],
                                                                "HiddenWidget": [Function],
                                                                "PasswordWidget": [Function],
                                                                "RadioWidget": [Function],
                                                                "RangeWidget": [Function],
                                                                "SelectWidget": [Function],
                                                                "TextWidget": [Function],
                                                                "TextareaWidget": [Function],
                                                                "URLWidget": [Function],
                                                                "UpDownWidget": [Function],
                                                              },
                                                            }
                                                          }
                                                          required={true}
                                                          schema={
                                                            Object {
                                                              "type": "boolean",
                                                            }
                                                          }
                                                          value={true}
                                                        >
                                                          <WithStyles(ForwardRef(FormControlLabel))
                                                            className="toggle"
                                                            control={
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={true}
                                                                color="primary"
                                                                disabled={false}
                                                                name="is_read_only"
                                                                onChange={[Function]}
                                                                value={true}
                                                              />
                                                            }
                                                            label="ON"
                                                          >
                                                            <ForwardRef(FormControlLabel)
                                                              className="toggle"
                                                              classes={
                                                                Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "label": "MuiFormControlLabel-label",
                                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                  "root": "MuiFormControlLabel-root",
                                                                }
                                                              }
                                                              control={
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={true}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="is_read_only"
                                                                  onChange={[Function]}
                                                                  value={true}
                                                                />
                                                              }
                                                              label="ON"
                                                            >
                                                              <label
                                                                className="MuiFormControlLabel-root toggle"
                                                              >
                                                                <WithStyles(ForwardRef(Switch))
                                                                  checked={true}
                                                                  color="primary"
                                                                  disabled={false}
                                                                  name="is_read_only"
                                                                  onChange={[Function]}
                                                                  value={true}
                                                                >
                                                                  <ForwardRef(Switch)
                                                                    checked={true}
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "colorPrimary": "MuiSwitch-colorPrimary",
                                                                        "colorSecondary": "MuiSwitch-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "edgeEnd": "MuiSwitch-edgeEnd",
                                                                        "edgeStart": "MuiSwitch-edgeStart",
                                                                        "input": "MuiSwitch-input",
                                                                        "root": "MuiSwitch-root",
                                                                        "sizeSmall": "MuiSwitch-sizeSmall",
                                                                        "switchBase": "MuiSwitch-switchBase",
                                                                        "thumb": "MuiSwitch-thumb",
                                                                        "track": "MuiSwitch-track",
                                                                      }
                                                                    }
                                                                    color="primary"
                                                                    disabled={false}
                                                                    name="is_read_only"
                                                                    onChange={[Function]}
                                                                    value={true}
                                                                  >
                                                                    <span
                                                                      className="MuiSwitch-root"
                                                                    >
                                                                      <WithStyles(ForwardRef(SwitchBase))
                                                                        checked={true}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "Mui-checked",
                                                                            "disabled": "Mui-disabled",
                                                                            "input": "MuiSwitch-input",
                                                                            "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        disabled={false}
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="is_read_only"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                        value={true}
                                                                      >
                                                                        <ForwardRef(SwitchBase)
                                                                          checked={true}
                                                                          checkedIcon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          classes={
                                                                            Object {
                                                                              "checked": "PrivateSwitchBase-checked-2 Mui-checked",
                                                                              "disabled": "PrivateSwitchBase-disabled-3 Mui-disabled",
                                                                              "input": "PrivateSwitchBase-input-4 MuiSwitch-input",
                                                                              "root": "PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                            }
                                                                          }
                                                                          disabled={false}
                                                                          icon={
                                                                            <span
                                                                              className="MuiSwitch-thumb"
                                                                            />
                                                                          }
                                                                          name="is_read_only"
                                                                          onChange={[Function]}
                                                                          type="checkbox"
                                                                          value={true}
                                                                        >
                                                                          <WithStyles(ForwardRef(IconButton))
                                                                            className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                            component="span"
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(IconButton)
                                                                              className="PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                              classes={
                                                                                Object {
                                                                                  "colorInherit": "MuiIconButton-colorInherit",
                                                                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                  "edgeStart": "MuiIconButton-edgeStart",
                                                                                  "label": "MuiIconButton-label",
                                                                                  "root": "MuiIconButton-root",
                                                                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  centerRipple={true}
                                                                                  className="MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="span"
                                                                                  disabled={false}
                                                                                  focusRipple={true}
                                                                                  onBlur={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-2 Mui-checked"
                                                                                    onBlur={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    tabIndex={null}
                                                                                  >
                                                                                    <span
                                                                                      className="MuiIconButton-label"
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        className="PrivateSwitchBase-input-4 MuiSwitch-input"
                                                                                        disabled={false}
                                                                                        name="is_read_only"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                        value={true}
                                                                                      />
                                                                                      <span
                                                                                        className="MuiSwitch-thumb"
                                                                                      />
                                                                                    </span>
                                                                                    <WithStyles(memo)
                                                                                      center={true}
                                                                                    >
                                                                                      <ForwardRef(TouchRipple)
                                                                                        center={true}
                                                                                        classes={
                                                                                          Object {
                                                                                            "child": "MuiTouchRipple-child",
                                                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                            "ripple": "MuiTouchRipple-ripple",
                                                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                            "root": "MuiTouchRipple-root",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          className="MuiTouchRipple-root"
                                                                                        >
                                                                                          <TransitionGroup
                                                                                            childFactory={[Function]}
                                                                                            component={null}
                                                                                            exit={true}
                                                                                          />
                                                                                        </span>
                                                                                      </ForwardRef(TouchRipple)>
                                                                                    </WithStyles(memo)>
                                                                                  </span>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(IconButton)>
                                                                          </WithStyles(ForwardRef(IconButton))>
                                                                        </ForwardRef(SwitchBase)>
                                                                      </WithStyles(ForwardRef(SwitchBase))>
                                                                      <span
                                                                        className="MuiSwitch-track"
                                                                      />
                                                                    </span>
                                                                  </ForwardRef(Switch)>
                                                                </WithStyles(ForwardRef(Switch))>
                                                                <WithStyles(ForwardRef(Typography))
                                                                  className="MuiFormControlLabel-label"
                                                                  component="span"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    className="MuiFormControlLabel-label"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                  >
                                                                    <span
                                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                    >
                                                                      ON
                                                                    </span>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </label>
                                                            </ForwardRef(FormControlLabel)>
                                                          </WithStyles(ForwardRef(FormControlLabel))>
                                                        </Toggle>
                                                      </CheckboxWidget>
                                                    </Component>
                                                  </BooleanField>
                                                </div>
                                              </CustomFieldTemplate>
                                            </SchemaField>
                                          </div>
                                          <div
                                            key="name"
                                          >
                                            <SchemaField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formData="Scheduled"
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_scheduled_name",
                                                }
                                              }
                                              key="name"
                                              name="name"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {},
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={true}
                                              schema={
                                                Object {
                                                  "type": "string",
                                                }
                                              }
                                              uiSchema={Object {}}
                                              wasPropertyKeyModified={false}
                                            >
                                              <CustomFieldTemplate
                                                classNames="form-group field field-string"
                                                description={
                                                  <DescriptionField
                                                    formContext={Object {}}
                                                    id="root_statuses_scheduled_name__description"
                                                  />
                                                }
                                                disabled={false}
                                                displayLabel={true}
                                                errors={<ErrorList />}
                                                fields={
                                                  Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  }
                                                }
                                                formContext={Object {}}
                                                help={<Help />}
                                                hidden={false}
                                                id="root_statuses_scheduled_name"
                                                label="name"
                                                onDropPropertyClick={[Function]}
                                                onKeyChange={[Function]}
                                                readonly={false}
                                                required={true}
                                                schema={
                                                  Object {
                                                    "type": "string",
                                                  }
                                                }
                                                uiSchema={Object {}}
                                              >
                                                <div
                                                  className="form-group field field-string"
                                                >
                                                  <StringField
                                                    autofocus={false}
                                                    disabled={false}
                                                    errorSchema={Object {}}
                                                    formContext={Object {}}
                                                    formData="Scheduled"
                                                    idSchema={
                                                      Object {
                                                        "$id": "root_statuses_scheduled_name",
                                                      }
                                                    }
                                                    name="name"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onDropPropertyClick={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyChange={[Function]}
                                                    readonly={false}
                                                    registry={
                                                      Object {
                                                        "ArrayFieldTemplate": [Function],
                                                        "FieldTemplate": [Function],
                                                        "ObjectFieldTemplate": [Function],
                                                        "definitions": Object {},
                                                        "fields": Object {
                                                          "AnyOfField": [Function],
                                                          "ArrayField": [Function],
                                                          "BooleanField": [Function],
                                                          "DescriptionField": [Function],
                                                          "NullField": [Function],
                                                          "NumberField": [Function],
                                                          "ObjectField": [Function],
                                                          "OneOfField": [Function],
                                                          "SchemaField": [Function],
                                                          "StringField": [Function],
                                                          "TitleField": [Function],
                                                          "UnsupportedField": [Function],
                                                        },
                                                        "formContext": Object {},
                                                        "widgets": Object {
                                                          "AltDateTimeWidget": [Function],
                                                          "AltDateWidget": [Function],
                                                          "BaseInput": [Function],
                                                          "CheckboxWidget": [Function],
                                                          "CheckboxesWidget": [Function],
                                                          "ColorWidget": [Function],
                                                          "DateTimeWidget": [Function],
                                                          "DateWidget": [Function],
                                                          "EmailWidget": [Function],
                                                          "FileWidget": [Function],
                                                          "HiddenWidget": [Function],
                                                          "PasswordWidget": [Function],
                                                          "RadioWidget": [Function],
                                                          "RangeWidget": [Function],
                                                          "SelectWidget": [Function],
                                                          "TextWidget": [Function],
                                                          "TextareaWidget": [Function],
                                                          "URLWidget": [Function],
                                                          "UpDownWidget": [Function],
                                                        },
                                                      }
                                                    }
                                                    required={true}
                                                    schema={
                                                      Object {
                                                        "type": "string",
                                                      }
                                                    }
                                                    uiSchema={
                                                      Object {
                                                        "classNames": undefined,
                                                      }
                                                    }
                                                    wasPropertyKeyModified={false}
                                                  >
                                                    <Component
                                                      autofocus={false}
                                                      disabled={false}
                                                      formContext={Object {}}
                                                      id="root_statuses_scheduled_name"
                                                      label="name"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      options={
                                                        Object {
                                                          "enumOptions": false,
                                                        }
                                                      }
                                                      placeholder=""
                                                      readonly={false}
                                                      registry={
                                                        Object {
                                                          "ArrayFieldTemplate": [Function],
                                                          "FieldTemplate": [Function],
                                                          "ObjectFieldTemplate": [Function],
                                                          "definitions": Object {},
                                                          "fields": Object {
                                                            "AnyOfField": [Function],
                                                            "ArrayField": [Function],
                                                            "BooleanField": [Function],
                                                            "DescriptionField": [Function],
                                                            "NullField": [Function],
                                                            "NumberField": [Function],
                                                            "ObjectField": [Function],
                                                            "OneOfField": [Function],
                                                            "SchemaField": [Function],
                                                            "StringField": [Function],
                                                            "TitleField": [Function],
                                                            "UnsupportedField": [Function],
                                                          },
                                                          "formContext": Object {},
                                                          "widgets": Object {
                                                            "AltDateTimeWidget": [Function],
                                                            "AltDateWidget": [Function],
                                                            "BaseInput": [Function],
                                                            "CheckboxWidget": [Function],
                                                            "CheckboxesWidget": [Function],
                                                            "ColorWidget": [Function],
                                                            "DateTimeWidget": [Function],
                                                            "DateWidget": [Function],
                                                            "EmailWidget": [Function],
                                                            "FileWidget": [Function],
                                                            "HiddenWidget": [Function],
                                                            "PasswordWidget": [Function],
                                                            "RadioWidget": [Function],
                                                            "RangeWidget": [Function],
                                                            "SelectWidget": [Function],
                                                            "TextWidget": [Function],
                                                            "TextareaWidget": [Function],
                                                            "URLWidget": [Function],
                                                            "UpDownWidget": [Function],
                                                          },
                                                        }
                                                      }
                                                      required={true}
                                                      schema={
                                                        Object {
                                                          "type": "string",
                                                        }
                                                      }
                                                      value="Scheduled"
                                                    >
                                                      <TextWidget
                                                        autofocus={false}
                                                        disabled={false}
                                                        formContext={Object {}}
                                                        id="root_statuses_scheduled_name"
                                                        label="name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        options={
                                                          Object {
                                                            "enumOptions": false,
                                                          }
                                                        }
                                                        placeholder=""
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {},
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "string",
                                                          }
                                                        }
                                                        value="Scheduled"
                                                      >
                                                        <BaseInput
                                                          autofocus={false}
                                                          disabled={false}
                                                          formContext={Object {}}
                                                          id="root_statuses_scheduled_name"
                                                          label="name"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          options={
                                                            Object {
                                                              "enumOptions": false,
                                                            }
                                                          }
                                                          placeholder=""
                                                          readonly={false}
                                                          registry={
                                                            Object {
                                                              "ArrayFieldTemplate": [Function],
                                                              "FieldTemplate": [Function],
                                                              "ObjectFieldTemplate": [Function],
                                                              "definitions": Object {},
                                                              "fields": Object {
                                                                "AnyOfField": [Function],
                                                                "ArrayField": [Function],
                                                                "BooleanField": [Function],
                                                                "DescriptionField": [Function],
                                                                "NullField": [Function],
                                                                "NumberField": [Function],
                                                                "ObjectField": [Function],
                                                                "OneOfField": [Function],
                                                                "SchemaField": [Function],
                                                                "StringField": [Function],
                                                                "TitleField": [Function],
                                                                "UnsupportedField": [Function],
                                                              },
                                                              "formContext": Object {},
                                                              "widgets": Object {
                                                                "AltDateTimeWidget": [Function],
                                                                "AltDateWidget": [Function],
                                                                "BaseInput": [Function],
                                                                "CheckboxWidget": [Function],
                                                                "CheckboxesWidget": [Function],
                                                                "ColorWidget": [Function],
                                                                "DateTimeWidget": [Function],
                                                                "DateWidget": [Function],
                                                                "EmailWidget": [Function],
                                                                "FileWidget": [Function],
                                                                "HiddenWidget": [Function],
                                                                "PasswordWidget": [Function],
                                                                "RadioWidget": [Function],
                                                                "RangeWidget": [Function],
                                                                "SelectWidget": [Function],
                                                                "TextWidget": [Function],
                                                                "TextareaWidget": [Function],
                                                                "URLWidget": [Function],
                                                                "UpDownWidget": [Function],
                                                              },
                                                            }
                                                          }
                                                          required={true}
                                                          schema={
                                                            Object {
                                                              "type": "string",
                                                            }
                                                          }
                                                          value="Scheduled"
                                                        >
                                                          <div
                                                            className="listItemContainer"
                                                            key="name"
                                                          >
                                                            <Textbox
                                                              autofocus={false}
                                                              disabled={false}
                                                              formContext={Object {}}
                                                              handleChange={[Function]}
                                                              id="root_statuses_scheduled_name"
                                                              label="name"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              options={
                                                                Object {
                                                                  "enumOptions": false,
                                                                }
                                                              }
                                                              placeholder=""
                                                              properties={
                                                                Object {
                                                                  "type": "string",
                                                                }
                                                              }
                                                              readonly={false}
                                                              registry={
                                                                Object {
                                                                  "ArrayFieldTemplate": [Function],
                                                                  "FieldTemplate": [Function],
                                                                  "ObjectFieldTemplate": [Function],
                                                                  "definitions": Object {},
                                                                  "fields": Object {
                                                                    "AnyOfField": [Function],
                                                                    "ArrayField": [Function],
                                                                    "BooleanField": [Function],
                                                                    "DescriptionField": [Function],
                                                                    "NullField": [Function],
                                                                    "NumberField": [Function],
                                                                    "ObjectField": [Function],
                                                                    "OneOfField": [Function],
                                                                    "SchemaField": [Function],
                                                                    "StringField": [Function],
                                                                    "TitleField": [Function],
                                                                    "UnsupportedField": [Function],
                                                                  },
                                                                  "formContext": Object {},
                                                                  "widgets": Object {
                                                                    "AltDateTimeWidget": [Function],
                                                                    "AltDateWidget": [Function],
                                                                    "BaseInput": [Function],
                                                                    "CheckboxWidget": [Function],
                                                                    "CheckboxesWidget": [Function],
                                                                    "ColorWidget": [Function],
                                                                    "DateTimeWidget": [Function],
                                                                    "DateWidget": [Function],
                                                                    "EmailWidget": [Function],
                                                                    "FileWidget": [Function],
                                                                    "HiddenWidget": [Function],
                                                                    "PasswordWidget": [Function],
                                                                    "RadioWidget": [Function],
                                                                    "RangeWidget": [Function],
                                                                    "SelectWidget": [Function],
                                                                    "TextWidget": [Function],
                                                                    "TextareaWidget": [Function],
                                                                    "URLWidget": [Function],
                                                                    "UpDownWidget": [Function],
                                                                  },
                                                                }
                                                              }
                                                              required={true}
                                                              schema={
                                                                Object {
                                                                  "type": "string",
                                                                }
                                                              }
                                                              uniqueItems={false}
                                                              value="Scheduled"
                                                            >
                                                              <TextboxStateless
                                                                autofocus={false}
                                                                deletable={false}
                                                                disabled={false}
                                                                error={false}
                                                                errorMessage=""
                                                                formContext={Object {}}
                                                                handleChange={[Function]}
                                                                handleDelete={[Function]}
                                                                id="root_statuses_scheduled_name"
                                                                label="name"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                onSubmit={[Function]}
                                                                options={
                                                                  Object {
                                                                    "enumOptions": false,
                                                                  }
                                                                }
                                                                placeholder=""
                                                                properties={
                                                                  Object {
                                                                    "type": "string",
                                                                  }
                                                                }
                                                                readonly={false}
                                                                registry={
                                                                  Object {
                                                                    "ArrayFieldTemplate": [Function],
                                                                    "FieldTemplate": [Function],
                                                                    "ObjectFieldTemplate": [Function],
                                                                    "definitions": Object {},
                                                                    "fields": Object {
                                                                      "AnyOfField": [Function],
                                                                      "ArrayField": [Function],
                                                                      "BooleanField": [Function],
                                                                      "DescriptionField": [Function],
                                                                      "NullField": [Function],
                                                                      "NumberField": [Function],
                                                                      "ObjectField": [Function],
                                                                      "OneOfField": [Function],
                                                                      "SchemaField": [Function],
                                                                      "StringField": [Function],
                                                                      "TitleField": [Function],
                                                                      "UnsupportedField": [Function],
                                                                    },
                                                                    "formContext": Object {},
                                                                    "widgets": Object {
                                                                      "AltDateTimeWidget": [Function],
                                                                      "AltDateWidget": [Function],
                                                                      "BaseInput": [Function],
                                                                      "CheckboxWidget": [Function],
                                                                      "CheckboxesWidget": [Function],
                                                                      "ColorWidget": [Function],
                                                                      "DateTimeWidget": [Function],
                                                                      "DateWidget": [Function],
                                                                      "EmailWidget": [Function],
                                                                      "FileWidget": [Function],
                                                                      "HiddenWidget": [Function],
                                                                      "PasswordWidget": [Function],
                                                                      "RadioWidget": [Function],
                                                                      "RangeWidget": [Function],
                                                                      "SelectWidget": [Function],
                                                                      "TextWidget": [Function],
                                                                      "TextareaWidget": [Function],
                                                                      "URLWidget": [Function],
                                                                      "UpDownWidget": [Function],
                                                                    },
                                                                  }
                                                                }
                                                                required={true}
                                                                schema={
                                                                  Object {
                                                                    "type": "string",
                                                                  }
                                                                }
                                                                uniqueItems={false}
                                                                value="Scheduled"
                                                              >
                                                                <WithStyles(ForwardRef(TextField))
                                                                  disabled={false}
                                                                  error={false}
                                                                  helperText={false}
                                                                  id="textfield-name"
                                                                  inputProps={
                                                                    Object {
                                                                      "className": "input",
                                                                      "max": undefined,
                                                                      "maxLength": undefined,
                                                                      "min": undefined,
                                                                      "minLength": undefined,
                                                                      "step": undefined,
                                                                    }
                                                                  }
                                                                  name="name"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="string"
                                                                  value="Scheduled"
                                                                >
                                                                  <ForwardRef(TextField)
                                                                    classes={
                                                                      Object {
                                                                        "root": "MuiTextField-root",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    error={false}
                                                                    helperText={false}
                                                                    id="textfield-name"
                                                                    inputProps={
                                                                      Object {
                                                                        "className": "input",
                                                                        "max": undefined,
                                                                        "maxLength": undefined,
                                                                        "min": undefined,
                                                                        "minLength": undefined,
                                                                        "step": undefined,
                                                                      }
                                                                    }
                                                                    name="name"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    type="string"
                                                                    value="Scheduled"
                                                                  >
                                                                    <WithStyles(ForwardRef(FormControl))
                                                                      className="MuiTextField-root"
                                                                      color="primary"
                                                                      disabled={false}
                                                                      error={false}
                                                                      fullWidth={false}
                                                                      onKeyDown={[Function]}
                                                                      required={false}
                                                                      variant="standard"
                                                                    >
                                                                      <ForwardRef(FormControl)
                                                                        className="MuiTextField-root"
                                                                        classes={
                                                                          Object {
                                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                                            "marginDense": "MuiFormControl-marginDense",
                                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                                            "root": "MuiFormControl-root",
                                                                          }
                                                                        }
                                                                        color="primary"
                                                                        disabled={false}
                                                                        error={false}
                                                                        fullWidth={false}
                                                                        onKeyDown={[Function]}
                                                                        required={false}
                                                                        variant="standard"
                                                                      >
                                                                        <div
                                                                          className="MuiFormControl-root MuiTextField-root"
                                                                          onKeyDown={[Function]}
                                                                        >
                                                                          <WithStyles(ForwardRef(Input))
                                                                            autoFocus={false}
                                                                            fullWidth={false}
                                                                            id="textfield-name"
                                                                            inputProps={
                                                                              Object {
                                                                                "className": "input",
                                                                                "max": undefined,
                                                                                "maxLength": undefined,
                                                                                "min": undefined,
                                                                                "minLength": undefined,
                                                                                "step": undefined,
                                                                              }
                                                                            }
                                                                            multiline={false}
                                                                            name="name"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            type="string"
                                                                            value="Scheduled"
                                                                          >
                                                                            <ForwardRef(Input)
                                                                              autoFocus={false}
                                                                              classes={
                                                                                Object {
                                                                                  "colorSecondary": "MuiInput-colorSecondary",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "error": "Mui-error",
                                                                                  "focused": "Mui-focused",
                                                                                  "formControl": "MuiInput-formControl",
                                                                                  "fullWidth": "MuiInput-fullWidth",
                                                                                  "input": "MuiInput-input",
                                                                                  "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInput-inputMultiline",
                                                                                  "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                  "marginDense": "MuiInput-marginDense",
                                                                                  "multiline": "MuiInput-multiline",
                                                                                  "root": "MuiInput-root",
                                                                                  "underline": "MuiInput-underline",
                                                                                }
                                                                              }
                                                                              fullWidth={false}
                                                                              id="textfield-name"
                                                                              inputProps={
                                                                                Object {
                                                                                  "className": "input",
                                                                                  "max": undefined,
                                                                                  "maxLength": undefined,
                                                                                  "min": undefined,
                                                                                  "minLength": undefined,
                                                                                  "step": undefined,
                                                                                }
                                                                              }
                                                                              multiline={false}
                                                                              name="name"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              type="string"
                                                                              value="Scheduled"
                                                                            >
                                                                              <WithStyles(ForwardRef(InputBase))
                                                                                autoFocus={false}
                                                                                classes={
                                                                                  Object {
                                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                                    "disabled": "Mui-disabled",
                                                                                    "error": "Mui-error",
                                                                                    "focused": "Mui-focused",
                                                                                    "formControl": "MuiInput-formControl",
                                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                                    "input": "MuiInput-input",
                                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                    "marginDense": "MuiInput-marginDense",
                                                                                    "multiline": "MuiInput-multiline",
                                                                                    "root": "MuiInput-root MuiInput-underline",
                                                                                    "underline": null,
                                                                                  }
                                                                                }
                                                                                fullWidth={false}
                                                                                id="textfield-name"
                                                                                inputComponent="input"
                                                                                inputProps={
                                                                                  Object {
                                                                                    "className": "input",
                                                                                    "max": undefined,
                                                                                    "maxLength": undefined,
                                                                                    "min": undefined,
                                                                                    "minLength": undefined,
                                                                                    "step": undefined,
                                                                                  }
                                                                                }
                                                                                multiline={false}
                                                                                name="name"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                type="string"
                                                                                value="Scheduled"
                                                                              >
                                                                                <ForwardRef(InputBase)
                                                                                  autoFocus={false}
                                                                                  classes={
                                                                                    Object {
                                                                                      "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                      "adornedStart": "MuiInputBase-adornedStart",
                                                                                      "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                                      "error": "Mui-error Mui-error",
                                                                                      "focused": "Mui-focused Mui-focused",
                                                                                      "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                      "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                      "input": "MuiInputBase-input MuiInput-input",
                                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                      "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                      "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                      "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                      "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                    }
                                                                                  }
                                                                                  fullWidth={false}
                                                                                  id="textfield-name"
                                                                                  inputComponent="input"
                                                                                  inputProps={
                                                                                    Object {
                                                                                      "className": "input",
                                                                                      "max": undefined,
                                                                                      "maxLength": undefined,
                                                                                      "min": undefined,
                                                                                      "minLength": undefined,
                                                                                      "step": undefined,
                                                                                    }
                                                                                  }
                                                                                  multiline={false}
                                                                                  name="name"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  type="string"
                                                                                  value="Scheduled"
                                                                                >
                                                                                  <div
                                                                                    className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                                    onClick={[Function]}
                                                                                  >
                                                                                    <input
                                                                                      aria-invalid={false}
                                                                                      autoFocus={false}
                                                                                      className="MuiInputBase-input MuiInput-input input"
                                                                                      disabled={false}
                                                                                      id="textfield-name"
                                                                                      name="name"
                                                                                      onAnimationStart={[Function]}
                                                                                      onBlur={[Function]}
                                                                                      onChange={[Function]}
                                                                                      onFocus={[Function]}
                                                                                      required={false}
                                                                                      type="string"
                                                                                      value="Scheduled"
                                                                                    />
                                                                                  </div>
                                                                                </ForwardRef(InputBase)>
                                                                              </WithStyles(ForwardRef(InputBase))>
                                                                            </ForwardRef(Input)>
                                                                          </WithStyles(ForwardRef(Input))>
                                                                        </div>
                                                                      </ForwardRef(FormControl)>
                                                                    </WithStyles(ForwardRef(FormControl))>
                                                                  </ForwardRef(TextField)>
                                                                </WithStyles(ForwardRef(TextField))>
                                                              </TextboxStateless>
                                                            </Textbox>
                                                          </div>
                                                        </BaseInput>
                                                      </TextWidget>
                                                    </Component>
                                                  </StringField>
                                                </div>
                                              </CustomFieldTemplate>
                                            </SchemaField>
                                          </div>
                                        </ObjectFieldTemplate>
                                      </ObjectField>
                                    </div>
                                  </CustomFieldTemplate>
                                </SchemaField>
                              </div>
                            </ObjectFieldTemplate>
                          </ObjectField>
                        </div>
                      </CustomFieldTemplate>
                    </SchemaField>
                  </div>
                </ObjectFieldTemplate>
              </ObjectField>
            </div>
          </CustomFieldTemplate>
        </SchemaField>
      </form>
    </Form>
  </StatelessSettingSchema>
</SettingSchema>
`;
