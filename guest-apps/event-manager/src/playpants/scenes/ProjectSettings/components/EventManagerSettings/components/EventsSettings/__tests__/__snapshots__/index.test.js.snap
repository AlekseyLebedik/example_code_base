// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventSettings renders default values 1`] = `
<EventSettings
  clearSchema={[MockFunction]}
  eventSettings={
    Object {
      "statuses": Object {
        "active": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Active",
          "show_authorization": true,
        },
        "approved": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Approved",
          "show_authorization": true,
        },
        "cancelled": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Cancelled",
          "show_authorization": true,
        },
        "ended": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Ended",
          "show_authorization": true,
        },
        "expired": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Expired",
          "show_authorization": true,
        },
        "open": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": true,
          "is_read_only": false,
          "name": "Open",
          "show_authorization": false,
        },
        "pending": Object {
          "allow_authorization": true,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": true,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Pending Approval",
          "show_authorization": true,
        },
        "published": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": false,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Published",
          "show_authorization": true,
        },
        "rejected": Object {
          "allow_authorization": false,
          "allow_cancel": false,
          "allow_delete": true,
          "allow_open": true,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Rejected",
          "show_authorization": true,
        },
        "scheduled": Object {
          "allow_authorization": false,
          "allow_cancel": true,
          "allow_delete": true,
          "allow_open": false,
          "allow_request_approval": false,
          "is_read_only": true,
          "name": "Scheduled",
          "show_authorization": true,
        },
      },
    }
  }
  fetchSchema={
    [MockFunction] {
      "calls": Array [
        Array [
          "project_setting_event_settings",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  settingSchema={
    Object {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "additionalProperties": false,
      "description": "Project Setting - Event Settings",
      "properties": Object {
        "statuses": Object {
          "additionalProperties": false,
          "properties": Object {
            "cancelled": Object {
              "additionalProperties": false,
              "properties": Object {
                "allow_delete": Object {
                  "type": "boolean",
                },
                "is_read_only": Object {
                  "type": "boolean",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "is_read_only",
              ],
              "type": "object",
            },
            "scheduled": Object {
              "additionalProperties": false,
              "properties": Object {
                "allow_delete": Object {
                  "type": "boolean",
                },
                "is_read_only": Object {
                  "type": "boolean",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "name",
                "is_read_only",
              ],
              "type": "object",
            },
          },
          "type": "object",
        },
      },
      "type": "object",
      "version": 1,
    }
  }
  updateProjectSetting={[MockFunction]}
>
  <SettingSchema
    formContext={
      Object {
        "listFields": Array [
          "scheduled",
          "cancelled",
        ],
        "titleFields": Array [
          "statuses",
        ],
      }
    }
    formData={
      Object {
        "statuses": Object {
          "active": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Active",
            "show_authorization": true,
          },
          "approved": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Approved",
            "show_authorization": true,
          },
          "cancelled": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Cancelled",
            "show_authorization": true,
          },
          "ended": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Ended",
            "show_authorization": true,
          },
          "expired": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Expired",
            "show_authorization": true,
          },
          "open": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": true,
            "is_read_only": false,
            "name": "Open",
            "show_authorization": false,
          },
          "pending": Object {
            "allow_authorization": true,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": true,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Pending Approval",
            "show_authorization": true,
          },
          "published": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": false,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Published",
            "show_authorization": true,
          },
          "rejected": Object {
            "allow_authorization": false,
            "allow_cancel": false,
            "allow_delete": true,
            "allow_open": true,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Rejected",
            "show_authorization": true,
          },
          "scheduled": Object {
            "allow_authorization": false,
            "allow_cancel": true,
            "allow_delete": true,
            "allow_open": false,
            "allow_request_approval": false,
            "is_read_only": true,
            "name": "Scheduled",
            "show_authorization": true,
          },
        },
      }
    }
    handleSubmit={[Function]}
    settingSchema={
      Object {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "additionalProperties": false,
        "description": "Project Setting - Event Settings",
        "properties": Object {
          "statuses": Object {
            "additionalProperties": false,
            "properties": Object {
              "cancelled": Object {
                "additionalProperties": false,
                "properties": Object {
                  "allow_delete": Object {
                    "type": "boolean",
                  },
                  "is_read_only": Object {
                    "type": "boolean",
                  },
                  "name": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "is_read_only",
                ],
                "type": "object",
              },
              "scheduled": Object {
                "additionalProperties": false,
                "properties": Object {
                  "allow_delete": Object {
                    "type": "boolean",
                  },
                  "is_read_only": Object {
                    "type": "boolean",
                  },
                  "name": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "name",
                  "is_read_only",
                ],
                "type": "object",
              },
            },
            "type": "object",
          },
        },
        "type": "object",
        "version": 1,
      }
    }
  >
    <StatelessSettingSchema
      displaySubmit={false}
      expandAll={[Function]}
      fieldsToTop={Array []}
      formContext={
        Object {
          "listFields": Array [
            "scheduled",
            "cancelled",
          ],
          "titleFields": Array [
            "statuses",
          ],
        }
      }
      formData={
        Object {
          "statuses": Object {
            "active": Object {
              "allow_authorization": false,
              "allow_cancel": true,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Active",
              "show_authorization": true,
            },
            "approved": Object {
              "allow_authorization": false,
              "allow_cancel": true,
              "allow_delete": true,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Approved",
              "show_authorization": true,
            },
            "cancelled": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Cancelled",
              "show_authorization": true,
            },
            "ended": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Ended",
              "show_authorization": true,
            },
            "expired": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Expired",
              "show_authorization": true,
            },
            "open": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": true,
              "allow_open": false,
              "allow_request_approval": true,
              "is_read_only": false,
              "name": "Open",
              "show_authorization": false,
            },
            "pending": Object {
              "allow_authorization": true,
              "allow_cancel": true,
              "allow_delete": true,
              "allow_open": true,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Pending Approval",
              "show_authorization": true,
            },
            "published": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": false,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Published",
              "show_authorization": true,
            },
            "rejected": Object {
              "allow_authorization": false,
              "allow_cancel": false,
              "allow_delete": true,
              "allow_open": true,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Rejected",
              "show_authorization": true,
            },
            "scheduled": Object {
              "allow_authorization": false,
              "allow_cancel": true,
              "allow_delete": true,
              "allow_open": false,
              "allow_request_approval": false,
              "is_read_only": true,
              "name": "Scheduled",
              "show_authorization": true,
            },
          },
        }
      }
      formRef={[Function]}
      handleChange={[Function]}
      handleFormChange={[Function]}
      handleSelection={[Function]}
      handleSubmit={[Function]}
      isExpanded={Object {}}
      openKeys={Array []}
      rootAsRow={false}
      settingSchema={
        Object {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "additionalProperties": false,
          "description": "Project Setting - Event Settings",
          "properties": Object {
            "statuses": Object {
              "additionalProperties": false,
              "properties": Object {
                "cancelled": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "allow_delete": Object {
                      "type": "boolean",
                    },
                    "is_read_only": Object {
                      "type": "boolean",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                    "is_read_only",
                  ],
                  "type": "object",
                },
                "scheduled": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "allow_delete": Object {
                      "type": "boolean",
                    },
                    "is_read_only": Object {
                      "type": "boolean",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "name",
                    "is_read_only",
                  ],
                  "type": "object",
                },
              },
              "type": "object",
            },
          },
          "type": "object",
          "version": 1,
        }
      }
      uiSchema={Object {}}
    >
      <Form
        ArrayFieldTemplate={[Function]}
        ErrorList={[Function]}
        FieldTemplate={[Function]}
        ObjectFieldTemplate={[Function]}
        className="form formWidth"
        disabled={false}
        formContext={
          Object {
            "listFields": Array [
              "scheduled",
              "cancelled",
            ],
            "titleFields": Array [
              "statuses",
            ],
          }
        }
        formData={
          Object {
            "statuses": Object {
              "active": Object {
                "allow_authorization": false,
                "allow_cancel": true,
                "allow_delete": false,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Active",
                "show_authorization": true,
              },
              "approved": Object {
                "allow_authorization": false,
                "allow_cancel": true,
                "allow_delete": true,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Approved",
                "show_authorization": true,
              },
              "cancelled": Object {
                "allow_authorization": false,
                "allow_cancel": false,
                "allow_delete": false,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Cancelled",
                "show_authorization": true,
              },
              "ended": Object {
                "allow_authorization": false,
                "allow_cancel": false,
                "allow_delete": false,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Ended",
                "show_authorization": true,
              },
              "expired": Object {
                "allow_authorization": false,
                "allow_cancel": false,
                "allow_delete": false,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Expired",
                "show_authorization": true,
              },
              "open": Object {
                "allow_authorization": false,
                "allow_cancel": false,
                "allow_delete": true,
                "allow_open": false,
                "allow_request_approval": true,
                "is_read_only": false,
                "name": "Open",
                "show_authorization": false,
              },
              "pending": Object {
                "allow_authorization": true,
                "allow_cancel": true,
                "allow_delete": true,
                "allow_open": true,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Pending Approval",
                "show_authorization": true,
              },
              "published": Object {
                "allow_authorization": false,
                "allow_cancel": false,
                "allow_delete": false,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Published",
                "show_authorization": true,
              },
              "rejected": Object {
                "allow_authorization": false,
                "allow_cancel": false,
                "allow_delete": true,
                "allow_open": true,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Rejected",
                "show_authorization": true,
              },
              "scheduled": Object {
                "allow_authorization": false,
                "allow_cancel": true,
                "allow_delete": true,
                "allow_open": false,
                "allow_request_approval": false,
                "is_read_only": true,
                "name": "Scheduled",
                "show_authorization": true,
              },
            },
          }
        }
        key=""
        liveValidate={false}
        noHtml5Validate={false}
        noValidate={false}
        omitExtraData={false}
        onChange={[Function]}
        onSubmit={[Function]}
        safeRenderCompletion={false}
        schema={
          Object {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "additionalProperties": false,
            "description": "Project Setting - Event Settings",
            "properties": Object {
              "statuses": Object {
                "additionalProperties": false,
                "properties": Object {
                  "cancelled": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "allow_delete": Object {
                        "type": "boolean",
                      },
                      "is_read_only": Object {
                        "type": "boolean",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "name",
                      "is_read_only",
                    ],
                    "type": "object",
                  },
                  "scheduled": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "allow_delete": Object {
                        "type": "boolean",
                      },
                      "is_read_only": Object {
                        "type": "boolean",
                      },
                      "name": Object {
                        "type": "string",
                      },
                    },
                    "required": Array [
                      "name",
                      "is_read_only",
                    ],
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
            "version": 1,
          }
        }
        uiSchema={Object {}}
        widgets={
          Object {
            "BaseInput": [Function],
            "CheckboxWidget": [Function],
            "SelectWidget": [Function],
          }
        }
      >
        <form
          className="form formWidth"
          noValidate={false}
          onSubmit={[Function]}
        >
          <SchemaField
            autofocus={false}
            disabled={false}
            errorSchema={Object {}}
            formContext={
              Object {
                "listFields": Array [
                  "scheduled",
                  "cancelled",
                ],
                "titleFields": Array [
                  "statuses",
                ],
              }
            }
            formData={
              Object {
                "statuses": Object {
                  "active": Object {
                    "allow_authorization": false,
                    "allow_cancel": true,
                    "allow_delete": false,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Active",
                    "show_authorization": true,
                  },
                  "approved": Object {
                    "allow_authorization": false,
                    "allow_cancel": true,
                    "allow_delete": true,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Approved",
                    "show_authorization": true,
                  },
                  "cancelled": Object {
                    "allow_authorization": false,
                    "allow_cancel": false,
                    "allow_delete": false,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Cancelled",
                    "show_authorization": true,
                  },
                  "ended": Object {
                    "allow_authorization": false,
                    "allow_cancel": false,
                    "allow_delete": false,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Ended",
                    "show_authorization": true,
                  },
                  "expired": Object {
                    "allow_authorization": false,
                    "allow_cancel": false,
                    "allow_delete": false,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Expired",
                    "show_authorization": true,
                  },
                  "open": Object {
                    "allow_authorization": false,
                    "allow_cancel": false,
                    "allow_delete": true,
                    "allow_open": false,
                    "allow_request_approval": true,
                    "is_read_only": false,
                    "name": "Open",
                    "show_authorization": false,
                  },
                  "pending": Object {
                    "allow_authorization": true,
                    "allow_cancel": true,
                    "allow_delete": true,
                    "allow_open": true,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Pending Approval",
                    "show_authorization": true,
                  },
                  "published": Object {
                    "allow_authorization": false,
                    "allow_cancel": false,
                    "allow_delete": false,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Published",
                    "show_authorization": true,
                  },
                  "rejected": Object {
                    "allow_authorization": false,
                    "allow_cancel": false,
                    "allow_delete": true,
                    "allow_open": true,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Rejected",
                    "show_authorization": true,
                  },
                  "scheduled": Object {
                    "allow_authorization": false,
                    "allow_cancel": true,
                    "allow_delete": true,
                    "allow_open": false,
                    "allow_request_approval": false,
                    "is_read_only": true,
                    "name": "Scheduled",
                    "show_authorization": true,
                  },
                },
              }
            }
            idSchema={
              Object {
                "$id": "root",
                "statuses": Object {
                  "$id": "root_statuses",
                  "cancelled": Object {
                    "$id": "root_statuses_cancelled",
                    "allow_delete": Object {
                      "$id": "root_statuses_cancelled_allow_delete",
                    },
                    "is_read_only": Object {
                      "$id": "root_statuses_cancelled_is_read_only",
                    },
                    "name": Object {
                      "$id": "root_statuses_cancelled_name",
                    },
                  },
                  "scheduled": Object {
                    "$id": "root_statuses_scheduled",
                    "allow_delete": Object {
                      "$id": "root_statuses_scheduled_allow_delete",
                    },
                    "is_read_only": Object {
                      "$id": "root_statuses_scheduled_is_read_only",
                    },
                    "name": Object {
                      "$id": "root_statuses_scheduled_name",
                    },
                  },
                },
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            readonly={false}
            registry={
              Object {
                "ArrayFieldTemplate": [Function],
                "FieldTemplate": [Function],
                "ObjectFieldTemplate": [Function],
                "definitions": Object {},
                "fields": Object {
                  "AnyOfField": [Function],
                  "ArrayField": [Function],
                  "BooleanField": [Function],
                  "DescriptionField": [Function],
                  "NullField": [Function],
                  "NumberField": [Function],
                  "ObjectField": [Function],
                  "OneOfField": [Function],
                  "SchemaField": [Function],
                  "StringField": [Function],
                  "TitleField": [Function],
                  "UnsupportedField": [Function],
                },
                "formContext": Object {
                  "listFields": Array [
                    "scheduled",
                    "cancelled",
                  ],
                  "titleFields": Array [
                    "statuses",
                  ],
                },
                "widgets": Object {
                  "AltDateTimeWidget": [Function],
                  "AltDateWidget": [Function],
                  "BaseInput": [Function],
                  "CheckboxWidget": [Function],
                  "CheckboxesWidget": [Function],
                  "ColorWidget": [Function],
                  "DateTimeWidget": [Function],
                  "DateWidget": [Function],
                  "EmailWidget": [Function],
                  "FileWidget": [Function],
                  "HiddenWidget": [Function],
                  "PasswordWidget": [Function],
                  "RadioWidget": [Function],
                  "RangeWidget": [Function],
                  "SelectWidget": [Function],
                  "TextWidget": [Function],
                  "TextareaWidget": [Function],
                  "URLWidget": [Function],
                  "UpDownWidget": [Function],
                },
              }
            }
            safeRenderCompletion={false}
            schema={
              Object {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "additionalProperties": false,
                "description": "Project Setting - Event Settings",
                "properties": Object {
                  "statuses": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "cancelled": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "allow_delete": Object {
                            "type": "boolean",
                          },
                          "is_read_only": Object {
                            "type": "boolean",
                          },
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                          "is_read_only",
                        ],
                        "type": "object",
                      },
                      "scheduled": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "allow_delete": Object {
                            "type": "boolean",
                          },
                          "is_read_only": Object {
                            "type": "boolean",
                          },
                          "name": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "name",
                          "is_read_only",
                        ],
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
                "version": 1,
              }
            }
            uiSchema={Object {}}
          >
            <CustomFieldTemplate
              classNames="form-group field field-object"
              description={
                <DescriptionField
                  description="Project Setting - Event Settings"
                  formContext={
                    Object {
                      "listFields": Array [
                        "scheduled",
                        "cancelled",
                      ],
                      "titleFields": Array [
                        "statuses",
                      ],
                    }
                  }
                  id="root__description"
                />
              }
              disabled={false}
              displayLabel={false}
              errors={<ErrorList />}
              fields={
                Object {
                  "AnyOfField": [Function],
                  "ArrayField": [Function],
                  "BooleanField": [Function],
                  "DescriptionField": [Function],
                  "NullField": [Function],
                  "NumberField": [Function],
                  "ObjectField": [Function],
                  "OneOfField": [Function],
                  "SchemaField": [Function],
                  "StringField": [Function],
                  "TitleField": [Function],
                  "UnsupportedField": [Function],
                }
              }
              formContext={
                Object {
                  "listFields": Array [
                    "scheduled",
                    "cancelled",
                  ],
                  "titleFields": Array [
                    "statuses",
                  ],
                }
              }
              help={<Help />}
              hidden={false}
              id="root"
              rawDescription="Project Setting - Event Settings"
              readonly={false}
              schema={
                Object {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "additionalProperties": false,
                  "description": "Project Setting - Event Settings",
                  "properties": Object {
                    "statuses": Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "cancelled": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "allow_delete": Object {
                              "type": "boolean",
                            },
                            "is_read_only": Object {
                              "type": "boolean",
                            },
                            "name": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "name",
                            "is_read_only",
                          ],
                          "type": "object",
                        },
                        "scheduled": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "allow_delete": Object {
                              "type": "boolean",
                            },
                            "is_read_only": Object {
                              "type": "boolean",
                            },
                            "name": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "name",
                            "is_read_only",
                          ],
                          "type": "object",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "type": "object",
                  "version": 1,
                }
              }
              uiSchema={Object {}}
            >
              <div
                className="form-group field field-object"
              >
                <ObjectField
                  autofocus={false}
                  disabled={false}
                  errorSchema={Object {}}
                  formContext={
                    Object {
                      "listFields": Array [
                        "scheduled",
                        "cancelled",
                      ],
                      "titleFields": Array [
                        "statuses",
                      ],
                    }
                  }
                  formData={
                    Object {
                      "statuses": Object {
                        "active": Object {
                          "allow_authorization": false,
                          "allow_cancel": true,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Active",
                          "show_authorization": true,
                        },
                        "approved": Object {
                          "allow_authorization": false,
                          "allow_cancel": true,
                          "allow_delete": true,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Approved",
                          "show_authorization": true,
                        },
                        "cancelled": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Cancelled",
                          "show_authorization": true,
                        },
                        "ended": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Ended",
                          "show_authorization": true,
                        },
                        "expired": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Expired",
                          "show_authorization": true,
                        },
                        "open": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": true,
                          "allow_open": false,
                          "allow_request_approval": true,
                          "is_read_only": false,
                          "name": "Open",
                          "show_authorization": false,
                        },
                        "pending": Object {
                          "allow_authorization": true,
                          "allow_cancel": true,
                          "allow_delete": true,
                          "allow_open": true,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Pending Approval",
                          "show_authorization": true,
                        },
                        "published": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": false,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Published",
                          "show_authorization": true,
                        },
                        "rejected": Object {
                          "allow_authorization": false,
                          "allow_cancel": false,
                          "allow_delete": true,
                          "allow_open": true,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Rejected",
                          "show_authorization": true,
                        },
                        "scheduled": Object {
                          "allow_authorization": false,
                          "allow_cancel": true,
                          "allow_delete": true,
                          "allow_open": false,
                          "allow_request_approval": false,
                          "is_read_only": true,
                          "name": "Scheduled",
                          "show_authorization": true,
                        },
                      },
                    }
                  }
                  idSchema={
                    Object {
                      "$id": "root",
                      "statuses": Object {
                        "$id": "root_statuses",
                        "cancelled": Object {
                          "$id": "root_statuses_cancelled",
                          "allow_delete": Object {
                            "$id": "root_statuses_cancelled_allow_delete",
                          },
                          "is_read_only": Object {
                            "$id": "root_statuses_cancelled_is_read_only",
                          },
                          "name": Object {
                            "$id": "root_statuses_cancelled_name",
                          },
                        },
                        "scheduled": Object {
                          "$id": "root_statuses_scheduled",
                          "allow_delete": Object {
                            "$id": "root_statuses_scheduled_allow_delete",
                          },
                          "is_read_only": Object {
                            "$id": "root_statuses_scheduled_is_read_only",
                          },
                          "name": Object {
                            "$id": "root_statuses_scheduled_name",
                          },
                        },
                      },
                    }
                  }
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  readonly={false}
                  registry={
                    Object {
                      "ArrayFieldTemplate": [Function],
                      "FieldTemplate": [Function],
                      "ObjectFieldTemplate": [Function],
                      "definitions": Object {},
                      "fields": Object {
                        "AnyOfField": [Function],
                        "ArrayField": [Function],
                        "BooleanField": [Function],
                        "DescriptionField": [Function],
                        "NullField": [Function],
                        "NumberField": [Function],
                        "ObjectField": [Function],
                        "OneOfField": [Function],
                        "SchemaField": [Function],
                        "StringField": [Function],
                        "TitleField": [Function],
                        "UnsupportedField": [Function],
                      },
                      "formContext": Object {
                        "listFields": Array [
                          "scheduled",
                          "cancelled",
                        ],
                        "titleFields": Array [
                          "statuses",
                        ],
                      },
                      "widgets": Object {
                        "AltDateTimeWidget": [Function],
                        "AltDateWidget": [Function],
                        "BaseInput": [Function],
                        "CheckboxWidget": [Function],
                        "CheckboxesWidget": [Function],
                        "ColorWidget": [Function],
                        "DateTimeWidget": [Function],
                        "DateWidget": [Function],
                        "EmailWidget": [Function],
                        "FileWidget": [Function],
                        "HiddenWidget": [Function],
                        "PasswordWidget": [Function],
                        "RadioWidget": [Function],
                        "RangeWidget": [Function],
                        "SelectWidget": [Function],
                        "TextWidget": [Function],
                        "TextareaWidget": [Function],
                        "URLWidget": [Function],
                        "UpDownWidget": [Function],
                      },
                    }
                  }
                  required={false}
                  safeRenderCompletion={false}
                  schema={
                    Object {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "additionalProperties": false,
                      "description": "Project Setting - Event Settings",
                      "properties": Object {
                        "statuses": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "cancelled": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "allow_delete": Object {
                                  "type": "boolean",
                                },
                                "is_read_only": Object {
                                  "type": "boolean",
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "is_read_only",
                              ],
                              "type": "object",
                            },
                            "scheduled": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "allow_delete": Object {
                                  "type": "boolean",
                                },
                                "is_read_only": Object {
                                  "type": "boolean",
                                },
                                "name": Object {
                                  "type": "string",
                                },
                              },
                              "required": Array [
                                "name",
                                "is_read_only",
                              ],
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                      },
                      "type": "object",
                      "version": 1,
                    }
                  }
                  uiSchema={
                    Object {
                      "classNames": undefined,
                    }
                  }
                >
                  <ObjectFieldTemplate
                    DescriptionField={[Function]}
                    TitleField={[Function]}
                    description="Project Setting - Event Settings"
                    disabled={false}
                    formContext={
                      Object {
                        "listFields": Array [
                          "scheduled",
                          "cancelled",
                        ],
                        "titleFields": Array [
                          "statuses",
                        ],
                      }
                    }
                    formData={
                      Object {
                        "statuses": Object {
                          "active": Object {
                            "allow_authorization": false,
                            "allow_cancel": true,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Active",
                            "show_authorization": true,
                          },
                          "approved": Object {
                            "allow_authorization": false,
                            "allow_cancel": true,
                            "allow_delete": true,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Approved",
                            "show_authorization": true,
                          },
                          "cancelled": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Cancelled",
                            "show_authorization": true,
                          },
                          "ended": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Ended",
                            "show_authorization": true,
                          },
                          "expired": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Expired",
                            "show_authorization": true,
                          },
                          "open": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": true,
                            "allow_open": false,
                            "allow_request_approval": true,
                            "is_read_only": false,
                            "name": "Open",
                            "show_authorization": false,
                          },
                          "pending": Object {
                            "allow_authorization": true,
                            "allow_cancel": true,
                            "allow_delete": true,
                            "allow_open": true,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Pending Approval",
                            "show_authorization": true,
                          },
                          "published": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": false,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Published",
                            "show_authorization": true,
                          },
                          "rejected": Object {
                            "allow_authorization": false,
                            "allow_cancel": false,
                            "allow_delete": true,
                            "allow_open": true,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Rejected",
                            "show_authorization": true,
                          },
                          "scheduled": Object {
                            "allow_authorization": false,
                            "allow_cancel": true,
                            "allow_delete": true,
                            "allow_open": false,
                            "allow_request_approval": false,
                            "is_read_only": true,
                            "name": "Scheduled",
                            "show_authorization": true,
                          },
                        },
                      }
                    }
                    idSchema={
                      Object {
                        "$id": "root",
                        "statuses": Object {
                          "$id": "root_statuses",
                          "cancelled": Object {
                            "$id": "root_statuses_cancelled",
                            "allow_delete": Object {
                              "$id": "root_statuses_cancelled_allow_delete",
                            },
                            "is_read_only": Object {
                              "$id": "root_statuses_cancelled_is_read_only",
                            },
                            "name": Object {
                              "$id": "root_statuses_cancelled_name",
                            },
                          },
                          "scheduled": Object {
                            "$id": "root_statuses_scheduled",
                            "allow_delete": Object {
                              "$id": "root_statuses_scheduled_allow_delete",
                            },
                            "is_read_only": Object {
                              "$id": "root_statuses_scheduled_is_read_only",
                            },
                            "name": Object {
                              "$id": "root_statuses_scheduled_name",
                            },
                          },
                        },
                      }
                    }
                    onAddClick={[Function]}
                    properties={
                      Array [
                        Object {
                          "content": <SchemaField
                            autofocus={false}
                            disabled={false}
                            errorSchema={Object {}}
                            formData={
                              Object {
                                "active": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": true,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Active",
                                  "show_authorization": true,
                                },
                                "approved": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": true,
                                  "allow_delete": true,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Approved",
                                  "show_authorization": true,
                                },
                                "cancelled": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Cancelled",
                                  "show_authorization": true,
                                },
                                "ended": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Ended",
                                  "show_authorization": true,
                                },
                                "expired": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Expired",
                                  "show_authorization": true,
                                },
                                "open": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": true,
                                  "allow_open": false,
                                  "allow_request_approval": true,
                                  "is_read_only": false,
                                  "name": "Open",
                                  "show_authorization": false,
                                },
                                "pending": Object {
                                  "allow_authorization": true,
                                  "allow_cancel": true,
                                  "allow_delete": true,
                                  "allow_open": true,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Pending Approval",
                                  "show_authorization": true,
                                },
                                "published": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": false,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Published",
                                  "show_authorization": true,
                                },
                                "rejected": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": false,
                                  "allow_delete": true,
                                  "allow_open": true,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Rejected",
                                  "show_authorization": true,
                                },
                                "scheduled": Object {
                                  "allow_authorization": false,
                                  "allow_cancel": true,
                                  "allow_delete": true,
                                  "allow_open": false,
                                  "allow_request_approval": false,
                                  "is_read_only": true,
                                  "name": "Scheduled",
                                  "show_authorization": true,
                                },
                              }
                            }
                            idSchema={
                              Object {
                                "$id": "root_statuses",
                                "cancelled": Object {
                                  "$id": "root_statuses_cancelled",
                                  "allow_delete": Object {
                                    "$id": "root_statuses_cancelled_allow_delete",
                                  },
                                  "is_read_only": Object {
                                    "$id": "root_statuses_cancelled_is_read_only",
                                  },
                                  "name": Object {
                                    "$id": "root_statuses_cancelled_name",
                                  },
                                },
                                "scheduled": Object {
                                  "$id": "root_statuses_scheduled",
                                  "allow_delete": Object {
                                    "$id": "root_statuses_scheduled_allow_delete",
                                  },
                                  "is_read_only": Object {
                                    "$id": "root_statuses_scheduled_is_read_only",
                                  },
                                  "name": Object {
                                    "$id": "root_statuses_scheduled_name",
                                  },
                                },
                              }
                            }
                            name="statuses"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDropPropertyClick={[Function]}
                            onFocus={[Function]}
                            onKeyChange={[Function]}
                            readonly={false}
                            registry={
                              Object {
                                "ArrayFieldTemplate": [Function],
                                "FieldTemplate": [Function],
                                "ObjectFieldTemplate": [Function],
                                "definitions": Object {},
                                "fields": Object {
                                  "AnyOfField": [Function],
                                  "ArrayField": [Function],
                                  "BooleanField": [Function],
                                  "DescriptionField": [Function],
                                  "NullField": [Function],
                                  "NumberField": [Function],
                                  "ObjectField": [Function],
                                  "OneOfField": [Function],
                                  "SchemaField": [Function],
                                  "StringField": [Function],
                                  "TitleField": [Function],
                                  "UnsupportedField": [Function],
                                },
                                "formContext": Object {
                                  "listFields": Array [
                                    "scheduled",
                                    "cancelled",
                                  ],
                                  "titleFields": Array [
                                    "statuses",
                                  ],
                                },
                                "widgets": Object {
                                  "AltDateTimeWidget": [Function],
                                  "AltDateWidget": [Function],
                                  "BaseInput": [Function],
                                  "CheckboxWidget": [Function],
                                  "CheckboxesWidget": [Function],
                                  "ColorWidget": [Function],
                                  "DateTimeWidget": [Function],
                                  "DateWidget": [Function],
                                  "EmailWidget": [Function],
                                  "FileWidget": [Function],
                                  "HiddenWidget": [Function],
                                  "PasswordWidget": [Function],
                                  "RadioWidget": [Function],
                                  "RangeWidget": [Function],
                                  "SelectWidget": [Function],
                                  "TextWidget": [Function],
                                  "TextareaWidget": [Function],
                                  "URLWidget": [Function],
                                  "UpDownWidget": [Function],
                                },
                              }
                            }
                            required={false}
                            schema={
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "cancelled": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "allow_delete": Object {
                                        "type": "boolean",
                                      },
                                      "is_read_only": Object {
                                        "type": "boolean",
                                      },
                                      "name": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "name",
                                      "is_read_only",
                                    ],
                                    "type": "object",
                                  },
                                  "scheduled": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "allow_delete": Object {
                                        "type": "boolean",
                                      },
                                      "is_read_only": Object {
                                        "type": "boolean",
                                      },
                                      "name": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "name",
                                      "is_read_only",
                                    ],
                                    "type": "object",
                                  },
                                },
                                "type": "object",
                              }
                            }
                            uiSchema={Object {}}
                            wasPropertyKeyModified={false}
                          />,
                          "disabled": false,
                          "name": "statuses",
                          "readonly": false,
                          "required": false,
                        },
                      ]
                    }
                    readonly={false}
                    required={false}
                    schema={
                      Object {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "additionalProperties": false,
                        "description": "Project Setting - Event Settings",
                        "properties": Object {
                          "statuses": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "cancelled": Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "allow_delete": Object {
                                    "type": "boolean",
                                  },
                                  "is_read_only": Object {
                                    "type": "boolean",
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "is_read_only",
                                ],
                                "type": "object",
                              },
                              "scheduled": Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "allow_delete": Object {
                                    "type": "boolean",
                                  },
                                  "is_read_only": Object {
                                    "type": "boolean",
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "is_read_only",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                        "version": 1,
                      }
                    }
                    uiSchema={
                      Object {
                        "classNames": undefined,
                      }
                    }
                  >
                    <div
                      key="statuses"
                    >
                      <SchemaField
                        autofocus={false}
                        disabled={false}
                        errorSchema={Object {}}
                        formData={
                          Object {
                            "active": Object {
                              "allow_authorization": false,
                              "allow_cancel": true,
                              "allow_delete": false,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Active",
                              "show_authorization": true,
                            },
                            "approved": Object {
                              "allow_authorization": false,
                              "allow_cancel": true,
                              "allow_delete": true,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Approved",
                              "show_authorization": true,
                            },
                            "cancelled": Object {
                              "allow_authorization": false,
                              "allow_cancel": false,
                              "allow_delete": false,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Cancelled",
                              "show_authorization": true,
                            },
                            "ended": Object {
                              "allow_authorization": false,
                              "allow_cancel": false,
                              "allow_delete": false,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Ended",
                              "show_authorization": true,
                            },
                            "expired": Object {
                              "allow_authorization": false,
                              "allow_cancel": false,
                              "allow_delete": false,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Expired",
                              "show_authorization": true,
                            },
                            "open": Object {
                              "allow_authorization": false,
                              "allow_cancel": false,
                              "allow_delete": true,
                              "allow_open": false,
                              "allow_request_approval": true,
                              "is_read_only": false,
                              "name": "Open",
                              "show_authorization": false,
                            },
                            "pending": Object {
                              "allow_authorization": true,
                              "allow_cancel": true,
                              "allow_delete": true,
                              "allow_open": true,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Pending Approval",
                              "show_authorization": true,
                            },
                            "published": Object {
                              "allow_authorization": false,
                              "allow_cancel": false,
                              "allow_delete": false,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Published",
                              "show_authorization": true,
                            },
                            "rejected": Object {
                              "allow_authorization": false,
                              "allow_cancel": false,
                              "allow_delete": true,
                              "allow_open": true,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Rejected",
                              "show_authorization": true,
                            },
                            "scheduled": Object {
                              "allow_authorization": false,
                              "allow_cancel": true,
                              "allow_delete": true,
                              "allow_open": false,
                              "allow_request_approval": false,
                              "is_read_only": true,
                              "name": "Scheduled",
                              "show_authorization": true,
                            },
                          }
                        }
                        idSchema={
                          Object {
                            "$id": "root_statuses",
                            "cancelled": Object {
                              "$id": "root_statuses_cancelled",
                              "allow_delete": Object {
                                "$id": "root_statuses_cancelled_allow_delete",
                              },
                              "is_read_only": Object {
                                "$id": "root_statuses_cancelled_is_read_only",
                              },
                              "name": Object {
                                "$id": "root_statuses_cancelled_name",
                              },
                            },
                            "scheduled": Object {
                              "$id": "root_statuses_scheduled",
                              "allow_delete": Object {
                                "$id": "root_statuses_scheduled_allow_delete",
                              },
                              "is_read_only": Object {
                                "$id": "root_statuses_scheduled_is_read_only",
                              },
                              "name": Object {
                                "$id": "root_statuses_scheduled_name",
                              },
                            },
                          }
                        }
                        key="statuses"
                        name="statuses"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onDropPropertyClick={[Function]}
                        onFocus={[Function]}
                        onKeyChange={[Function]}
                        readonly={false}
                        registry={
                          Object {
                            "ArrayFieldTemplate": [Function],
                            "FieldTemplate": [Function],
                            "ObjectFieldTemplate": [Function],
                            "definitions": Object {},
                            "fields": Object {
                              "AnyOfField": [Function],
                              "ArrayField": [Function],
                              "BooleanField": [Function],
                              "DescriptionField": [Function],
                              "NullField": [Function],
                              "NumberField": [Function],
                              "ObjectField": [Function],
                              "OneOfField": [Function],
                              "SchemaField": [Function],
                              "StringField": [Function],
                              "TitleField": [Function],
                              "UnsupportedField": [Function],
                            },
                            "formContext": Object {
                              "listFields": Array [
                                "scheduled",
                                "cancelled",
                              ],
                              "titleFields": Array [
                                "statuses",
                              ],
                            },
                            "widgets": Object {
                              "AltDateTimeWidget": [Function],
                              "AltDateWidget": [Function],
                              "BaseInput": [Function],
                              "CheckboxWidget": [Function],
                              "CheckboxesWidget": [Function],
                              "ColorWidget": [Function],
                              "DateTimeWidget": [Function],
                              "DateWidget": [Function],
                              "EmailWidget": [Function],
                              "FileWidget": [Function],
                              "HiddenWidget": [Function],
                              "PasswordWidget": [Function],
                              "RadioWidget": [Function],
                              "RangeWidget": [Function],
                              "SelectWidget": [Function],
                              "TextWidget": [Function],
                              "TextareaWidget": [Function],
                              "URLWidget": [Function],
                              "UpDownWidget": [Function],
                            },
                          }
                        }
                        required={false}
                        schema={
                          Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "cancelled": Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "allow_delete": Object {
                                    "type": "boolean",
                                  },
                                  "is_read_only": Object {
                                    "type": "boolean",
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "is_read_only",
                                ],
                                "type": "object",
                              },
                              "scheduled": Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "allow_delete": Object {
                                    "type": "boolean",
                                  },
                                  "is_read_only": Object {
                                    "type": "boolean",
                                  },
                                  "name": Object {
                                    "type": "string",
                                  },
                                },
                                "required": Array [
                                  "name",
                                  "is_read_only",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          }
                        }
                        uiSchema={Object {}}
                        wasPropertyKeyModified={false}
                      >
                        <CustomFieldTemplate
                          classNames="form-group field field-object"
                          description={
                            <DescriptionField
                              formContext={
                                Object {
                                  "listFields": Array [
                                    "scheduled",
                                    "cancelled",
                                  ],
                                  "titleFields": Array [
                                    "statuses",
                                  ],
                                }
                              }
                              id="root_statuses__description"
                            />
                          }
                          disabled={false}
                          displayLabel={false}
                          errors={<ErrorList />}
                          fields={
                            Object {
                              "AnyOfField": [Function],
                              "ArrayField": [Function],
                              "BooleanField": [Function],
                              "DescriptionField": [Function],
                              "NullField": [Function],
                              "NumberField": [Function],
                              "ObjectField": [Function],
                              "OneOfField": [Function],
                              "SchemaField": [Function],
                              "StringField": [Function],
                              "TitleField": [Function],
                              "UnsupportedField": [Function],
                            }
                          }
                          formContext={
                            Object {
                              "listFields": Array [
                                "scheduled",
                                "cancelled",
                              ],
                              "titleFields": Array [
                                "statuses",
                              ],
                            }
                          }
                          help={<Help />}
                          hidden={false}
                          id="root_statuses"
                          label="statuses"
                          onDropPropertyClick={[Function]}
                          onKeyChange={[Function]}
                          readonly={false}
                          required={false}
                          schema={
                            Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "cancelled": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "allow_delete": Object {
                                      "type": "boolean",
                                    },
                                    "is_read_only": Object {
                                      "type": "boolean",
                                    },
                                    "name": Object {
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "name",
                                    "is_read_only",
                                  ],
                                  "type": "object",
                                },
                                "scheduled": Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "allow_delete": Object {
                                      "type": "boolean",
                                    },
                                    "is_read_only": Object {
                                      "type": "boolean",
                                    },
                                    "name": Object {
                                      "type": "string",
                                    },
                                  },
                                  "required": Array [
                                    "name",
                                    "is_read_only",
                                  ],
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            }
                          }
                          uiSchema={Object {}}
                        >
                          <div
                            className="form-group field field-object"
                          >
                            <ObjectField
                              autofocus={false}
                              disabled={false}
                              errorSchema={Object {}}
                              formContext={
                                Object {
                                  "listFields": Array [
                                    "scheduled",
                                    "cancelled",
                                  ],
                                  "titleFields": Array [
                                    "statuses",
                                  ],
                                }
                              }
                              formData={
                                Object {
                                  "active": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": true,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Active",
                                    "show_authorization": true,
                                  },
                                  "approved": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": true,
                                    "allow_delete": true,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Approved",
                                    "show_authorization": true,
                                  },
                                  "cancelled": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Cancelled",
                                    "show_authorization": true,
                                  },
                                  "ended": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Ended",
                                    "show_authorization": true,
                                  },
                                  "expired": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Expired",
                                    "show_authorization": true,
                                  },
                                  "open": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": true,
                                    "allow_open": false,
                                    "allow_request_approval": true,
                                    "is_read_only": false,
                                    "name": "Open",
                                    "show_authorization": false,
                                  },
                                  "pending": Object {
                                    "allow_authorization": true,
                                    "allow_cancel": true,
                                    "allow_delete": true,
                                    "allow_open": true,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Pending Approval",
                                    "show_authorization": true,
                                  },
                                  "published": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": false,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Published",
                                    "show_authorization": true,
                                  },
                                  "rejected": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": false,
                                    "allow_delete": true,
                                    "allow_open": true,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Rejected",
                                    "show_authorization": true,
                                  },
                                  "scheduled": Object {
                                    "allow_authorization": false,
                                    "allow_cancel": true,
                                    "allow_delete": true,
                                    "allow_open": false,
                                    "allow_request_approval": false,
                                    "is_read_only": true,
                                    "name": "Scheduled",
                                    "show_authorization": true,
                                  },
                                }
                              }
                              idSchema={
                                Object {
                                  "$id": "root_statuses",
                                  "cancelled": Object {
                                    "$id": "root_statuses_cancelled",
                                    "allow_delete": Object {
                                      "$id": "root_statuses_cancelled_allow_delete",
                                    },
                                    "is_read_only": Object {
                                      "$id": "root_statuses_cancelled_is_read_only",
                                    },
                                    "name": Object {
                                      "$id": "root_statuses_cancelled_name",
                                    },
                                  },
                                  "scheduled": Object {
                                    "$id": "root_statuses_scheduled",
                                    "allow_delete": Object {
                                      "$id": "root_statuses_scheduled_allow_delete",
                                    },
                                    "is_read_only": Object {
                                      "$id": "root_statuses_scheduled_is_read_only",
                                    },
                                    "name": Object {
                                      "$id": "root_statuses_scheduled_name",
                                    },
                                  },
                                }
                              }
                              name="statuses"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onDropPropertyClick={[Function]}
                              onFocus={[Function]}
                              onKeyChange={[Function]}
                              readonly={false}
                              registry={
                                Object {
                                  "ArrayFieldTemplate": [Function],
                                  "FieldTemplate": [Function],
                                  "ObjectFieldTemplate": [Function],
                                  "definitions": Object {},
                                  "fields": Object {
                                    "AnyOfField": [Function],
                                    "ArrayField": [Function],
                                    "BooleanField": [Function],
                                    "DescriptionField": [Function],
                                    "NullField": [Function],
                                    "NumberField": [Function],
                                    "ObjectField": [Function],
                                    "OneOfField": [Function],
                                    "SchemaField": [Function],
                                    "StringField": [Function],
                                    "TitleField": [Function],
                                    "UnsupportedField": [Function],
                                  },
                                  "formContext": Object {
                                    "listFields": Array [
                                      "scheduled",
                                      "cancelled",
                                    ],
                                    "titleFields": Array [
                                      "statuses",
                                    ],
                                  },
                                  "widgets": Object {
                                    "AltDateTimeWidget": [Function],
                                    "AltDateWidget": [Function],
                                    "BaseInput": [Function],
                                    "CheckboxWidget": [Function],
                                    "CheckboxesWidget": [Function],
                                    "ColorWidget": [Function],
                                    "DateTimeWidget": [Function],
                                    "DateWidget": [Function],
                                    "EmailWidget": [Function],
                                    "FileWidget": [Function],
                                    "HiddenWidget": [Function],
                                    "PasswordWidget": [Function],
                                    "RadioWidget": [Function],
                                    "RangeWidget": [Function],
                                    "SelectWidget": [Function],
                                    "TextWidget": [Function],
                                    "TextareaWidget": [Function],
                                    "URLWidget": [Function],
                                    "UpDownWidget": [Function],
                                  },
                                }
                              }
                              required={false}
                              schema={
                                Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "cancelled": Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "allow_delete": Object {
                                          "type": "boolean",
                                        },
                                        "is_read_only": Object {
                                          "type": "boolean",
                                        },
                                        "name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "name",
                                        "is_read_only",
                                      ],
                                      "type": "object",
                                    },
                                    "scheduled": Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "allow_delete": Object {
                                          "type": "boolean",
                                        },
                                        "is_read_only": Object {
                                          "type": "boolean",
                                        },
                                        "name": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "name",
                                        "is_read_only",
                                      ],
                                      "type": "object",
                                    },
                                  },
                                  "type": "object",
                                }
                              }
                              uiSchema={
                                Object {
                                  "classNames": undefined,
                                }
                              }
                              wasPropertyKeyModified={false}
                            >
                              <ObjectFieldTemplate
                                DescriptionField={[Function]}
                                TitleField={[Function]}
                                disabled={false}
                                formContext={
                                  Object {
                                    "listFields": Array [
                                      "scheduled",
                                      "cancelled",
                                    ],
                                    "titleFields": Array [
                                      "statuses",
                                    ],
                                  }
                                }
                                formData={
                                  Object {
                                    "active": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": true,
                                      "allow_delete": false,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Active",
                                      "show_authorization": true,
                                    },
                                    "approved": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": true,
                                      "allow_delete": true,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Approved",
                                      "show_authorization": true,
                                    },
                                    "cancelled": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": false,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Cancelled",
                                      "show_authorization": true,
                                    },
                                    "ended": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": false,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Ended",
                                      "show_authorization": true,
                                    },
                                    "expired": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": false,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Expired",
                                      "show_authorization": true,
                                    },
                                    "open": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": true,
                                      "allow_open": false,
                                      "allow_request_approval": true,
                                      "is_read_only": false,
                                      "name": "Open",
                                      "show_authorization": false,
                                    },
                                    "pending": Object {
                                      "allow_authorization": true,
                                      "allow_cancel": true,
                                      "allow_delete": true,
                                      "allow_open": true,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Pending Approval",
                                      "show_authorization": true,
                                    },
                                    "published": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": false,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Published",
                                      "show_authorization": true,
                                    },
                                    "rejected": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": false,
                                      "allow_delete": true,
                                      "allow_open": true,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Rejected",
                                      "show_authorization": true,
                                    },
                                    "scheduled": Object {
                                      "allow_authorization": false,
                                      "allow_cancel": true,
                                      "allow_delete": true,
                                      "allow_open": false,
                                      "allow_request_approval": false,
                                      "is_read_only": true,
                                      "name": "Scheduled",
                                      "show_authorization": true,
                                    },
                                  }
                                }
                                idSchema={
                                  Object {
                                    "$id": "root_statuses",
                                    "cancelled": Object {
                                      "$id": "root_statuses_cancelled",
                                      "allow_delete": Object {
                                        "$id": "root_statuses_cancelled_allow_delete",
                                      },
                                      "is_read_only": Object {
                                        "$id": "root_statuses_cancelled_is_read_only",
                                      },
                                      "name": Object {
                                        "$id": "root_statuses_cancelled_name",
                                      },
                                    },
                                    "scheduled": Object {
                                      "$id": "root_statuses_scheduled",
                                      "allow_delete": Object {
                                        "$id": "root_statuses_scheduled_allow_delete",
                                      },
                                      "is_read_only": Object {
                                        "$id": "root_statuses_scheduled_is_read_only",
                                      },
                                      "name": Object {
                                        "$id": "root_statuses_scheduled_name",
                                      },
                                    },
                                  }
                                }
                                onAddClick={[Function]}
                                properties={
                                  Array [
                                    Object {
                                      "content": <SchemaField
                                        autofocus={false}
                                        disabled={false}
                                        errorSchema={Object {}}
                                        formData={
                                          Object {
                                            "allow_authorization": false,
                                            "allow_cancel": true,
                                            "allow_delete": true,
                                            "allow_open": false,
                                            "allow_request_approval": false,
                                            "is_read_only": true,
                                            "name": "Scheduled",
                                            "show_authorization": true,
                                          }
                                        }
                                        idSchema={
                                          Object {
                                            "$id": "root_statuses_scheduled",
                                            "allow_delete": Object {
                                              "$id": "root_statuses_scheduled_allow_delete",
                                            },
                                            "is_read_only": Object {
                                              "$id": "root_statuses_scheduled_is_read_only",
                                            },
                                            "name": Object {
                                              "$id": "root_statuses_scheduled_name",
                                            },
                                          }
                                        }
                                        name="scheduled"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDropPropertyClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyChange={[Function]}
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {
                                              "listFields": Array [
                                                "scheduled",
                                                "cancelled",
                                              ],
                                              "titleFields": Array [
                                                "statuses",
                                              ],
                                            },
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "allow_delete": Object {
                                                "type": "boolean",
                                              },
                                              "is_read_only": Object {
                                                "type": "boolean",
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "is_read_only",
                                            ],
                                            "type": "object",
                                          }
                                        }
                                        uiSchema={Object {}}
                                        wasPropertyKeyModified={false}
                                      />,
                                      "disabled": false,
                                      "name": "scheduled",
                                      "readonly": false,
                                      "required": false,
                                    },
                                    Object {
                                      "content": <SchemaField
                                        autofocus={false}
                                        disabled={false}
                                        errorSchema={Object {}}
                                        formData={
                                          Object {
                                            "allow_authorization": false,
                                            "allow_cancel": false,
                                            "allow_delete": false,
                                            "allow_open": false,
                                            "allow_request_approval": false,
                                            "is_read_only": true,
                                            "name": "Cancelled",
                                            "show_authorization": true,
                                          }
                                        }
                                        idSchema={
                                          Object {
                                            "$id": "root_statuses_cancelled",
                                            "allow_delete": Object {
                                              "$id": "root_statuses_cancelled_allow_delete",
                                            },
                                            "is_read_only": Object {
                                              "$id": "root_statuses_cancelled_is_read_only",
                                            },
                                            "name": Object {
                                              "$id": "root_statuses_cancelled_name",
                                            },
                                          }
                                        }
                                        name="cancelled"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDropPropertyClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyChange={[Function]}
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {
                                              "listFields": Array [
                                                "scheduled",
                                                "cancelled",
                                              ],
                                              "titleFields": Array [
                                                "statuses",
                                              ],
                                            },
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "allow_delete": Object {
                                                "type": "boolean",
                                              },
                                              "is_read_only": Object {
                                                "type": "boolean",
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "is_read_only",
                                            ],
                                            "type": "object",
                                          }
                                        }
                                        uiSchema={Object {}}
                                        wasPropertyKeyModified={false}
                                      />,
                                      "disabled": false,
                                      "name": "cancelled",
                                      "readonly": false,
                                      "required": false,
                                    },
                                  ]
                                }
                                readonly={false}
                                required={false}
                                schema={
                                  Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "cancelled": Object {
                                        "additionalProperties": false,
                                        "properties": Object {
                                          "allow_delete": Object {
                                            "type": "boolean",
                                          },
                                          "is_read_only": Object {
                                            "type": "boolean",
                                          },
                                          "name": Object {
                                            "type": "string",
                                          },
                                        },
                                        "required": Array [
                                          "name",
                                          "is_read_only",
                                        ],
                                        "type": "object",
                                      },
                                      "scheduled": Object {
                                        "additionalProperties": false,
                                        "properties": Object {
                                          "allow_delete": Object {
                                            "type": "boolean",
                                          },
                                          "is_read_only": Object {
                                            "type": "boolean",
                                          },
                                          "name": Object {
                                            "type": "string",
                                          },
                                        },
                                        "required": Array [
                                          "name",
                                          "is_read_only",
                                        ],
                                        "type": "object",
                                      },
                                    },
                                    "type": "object",
                                  }
                                }
                                title="statuses"
                                uiSchema={
                                  Object {
                                    "classNames": undefined,
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(List))
                                  classes={
                                    Object {
                                      "root": "",
                                    }
                                  }
                                  component="nav"
                                  subheader={
                                    <div
                                      className="container"
                                    >
                                      <WithStyles(ForwardRef(ListSubheader))
                                        classes={
                                          Object {
                                            "root": "listSubheader",
                                          }
                                        }
                                        component="div"
                                      >
                                        statuses
                                      </WithStyles(ForwardRef(ListSubheader))>
                                      <WithStyles(WrappedIcon)
                                        className="expandAll"
                                        color="primary"
                                        icon="expand_more"
                                        onClick={[Function]}
                                        text="Expand All"
                                        tooltip="Expand all options"
                                        type="fab"
                                        variant="extended"
                                      />
                                    </div>
                                  }
                                >
                                  <ForwardRef(List)
                                    classes={
                                      Object {
                                        "dense": "MuiList-dense",
                                        "padding": "MuiList-padding",
                                        "root": "MuiList-root",
                                        "subheader": "MuiList-subheader",
                                      }
                                    }
                                    component="nav"
                                    subheader={
                                      <div
                                        className="container"
                                      >
                                        <WithStyles(ForwardRef(ListSubheader))
                                          classes={
                                            Object {
                                              "root": "listSubheader",
                                            }
                                          }
                                          component="div"
                                        >
                                          statuses
                                        </WithStyles(ForwardRef(ListSubheader))>
                                        <WithStyles(WrappedIcon)
                                          className="expandAll"
                                          color="primary"
                                          icon="expand_more"
                                          onClick={[Function]}
                                          text="Expand All"
                                          tooltip="Expand all options"
                                          type="fab"
                                          variant="extended"
                                        />
                                      </div>
                                    }
                                  >
                                    <nav
                                      className="MuiList-root MuiList-padding MuiList-subheader"
                                    >
                                      <div
                                        className="container"
                                      >
                                        <WithStyles(ForwardRef(ListSubheader))
                                          classes={
                                            Object {
                                              "root": "listSubheader",
                                            }
                                          }
                                          component="div"
                                        >
                                          <ForwardRef(ListSubheader)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiListSubheader-colorInherit",
                                                "colorPrimary": "MuiListSubheader-colorPrimary",
                                                "gutters": "MuiListSubheader-gutters",
                                                "inset": "MuiListSubheader-inset",
                                                "root": "MuiListSubheader-root listSubheader",
                                                "sticky": "MuiListSubheader-sticky",
                                              }
                                            }
                                            component="div"
                                          >
                                            <div
                                              className="MuiListSubheader-root listSubheader MuiListSubheader-sticky MuiListSubheader-gutters"
                                            >
                                              statuses
                                            </div>
                                          </ForwardRef(ListSubheader)>
                                        </WithStyles(ForwardRef(ListSubheader))>
                                        <WithStyles(WrappedIcon)
                                          className="expandAll"
                                          color="primary"
                                          icon="expand_more"
                                          onClick={[Function]}
                                          text="Expand All"
                                          tooltip="Expand all options"
                                          type="fab"
                                          variant="extended"
                                        >
                                          <WrappedIcon
                                            className="expandAll"
                                            classes={
                                              Object {
                                                "colorPrimary": "WrappedIcon-colorPrimary-2",
                                                "colorSecondary": "WrappedIcon-colorSecondary-3",
                                                "root": "WrappedIcon-root-1",
                                              }
                                            }
                                            color="primary"
                                            icon="expand_more"
                                            onClick={[Function]}
                                            text="Expand All"
                                            tooltip="Expand all options"
                                            type="fab"
                                            variant="extended"
                                          >
                                            <WithStyles(ForwardRef(Tooltip))
                                              TransitionComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "children": [Function],
                                                    "disableStrictModeCompat": [Function],
                                                    "in": [Function],
                                                    "onEnter": [Function],
                                                    "onEntered": [Function],
                                                    "onEntering": [Function],
                                                    "onExit": [Function],
                                                    "onExited": [Function],
                                                    "onExiting": [Function],
                                                    "style": [Function],
                                                    "timeout": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              title="Expand all options"
                                            >
                                              <ForwardRef(Tooltip)
                                                TransitionComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "children": [Function],
                                                      "disableStrictModeCompat": [Function],
                                                      "in": [Function],
                                                      "onEnter": [Function],
                                                      "onEntered": [Function],
                                                      "onEntering": [Function],
                                                      "onExit": [Function],
                                                      "onExited": [Function],
                                                      "onExiting": [Function],
                                                      "style": [Function],
                                                      "timeout": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                classes={
                                                  Object {
                                                    "arrow": "MuiTooltip-arrow",
                                                    "popper": "MuiTooltip-popper",
                                                    "popperArrow": "MuiTooltip-popperArrow",
                                                    "popperInteractive": "MuiTooltip-popperInteractive",
                                                    "tooltip": "MuiTooltip-tooltip",
                                                    "tooltipArrow": "MuiTooltip-tooltipArrow",
                                                    "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                                    "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                                    "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                                    "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                                    "touch": "MuiTooltip-touch",
                                                  }
                                                }
                                                title="Expand all options"
                                              >
                                                <WithStyles(ForwardRef(Fab))
                                                  aria-describedby={null}
                                                  className="expandAll"
                                                  color="primary"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseOver={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchStart={[Function]}
                                                  title="Expand all options"
                                                  variant="extended"
                                                >
                                                  <ForwardRef(Fab)
                                                    aria-describedby={null}
                                                    className="expandAll"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiFab-colorInherit",
                                                        "disabled": "Mui-disabled",
                                                        "extended": "MuiFab-extended",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "label": "MuiFab-label",
                                                        "primary": "MuiFab-primary",
                                                        "root": "MuiFab-root",
                                                        "secondary": "MuiFab-secondary",
                                                        "sizeMedium": "MuiFab-sizeMedium",
                                                        "sizeSmall": "MuiFab-sizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onFocus={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseOver={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchStart={[Function]}
                                                    title="Expand all options"
                                                    variant="extended"
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-describedby={null}
                                                      className="MuiFab-root expandAll MuiFab-extended MuiFab-primary"
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseOver={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchStart={[Function]}
                                                      title="Expand all options"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-describedby={null}
                                                        className="MuiFab-root expandAll MuiFab-extended MuiFab-primary"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="button"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseOver={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchStart={[Function]}
                                                        title="Expand all options"
                                                      >
                                                        <button
                                                          aria-describedby={null}
                                                          className="MuiButtonBase-root MuiFab-root expandAll MuiFab-extended MuiFab-primary"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseOver={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          title="Expand all options"
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiFab-label"
                                                          >
                                                            <WithStyles(ForwardRef(Icon))>
                                                              <ForwardRef(Icon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiIcon-colorAction",
                                                                    "colorDisabled": "MuiIcon-colorDisabled",
                                                                    "colorError": "MuiIcon-colorError",
                                                                    "colorPrimary": "MuiIcon-colorPrimary",
                                                                    "colorSecondary": "MuiIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                    "root": "MuiIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  aria-hidden={true}
                                                                  className="material-icons MuiIcon-root"
                                                                >
                                                                  expand_more
                                                                </span>
                                                              </ForwardRef(Icon)>
                                                            </WithStyles(ForwardRef(Icon))>
                                                            Expand All
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Fab)>
                                                </WithStyles(ForwardRef(Fab))>
                                                <ForwardRef(Popper)
                                                  anchorEl={
                                                    <button
                                                      class="MuiButtonBase-root MuiFab-root expandAll MuiFab-extended MuiFab-primary"
                                                      tabindex="0"
                                                      title="Expand all options"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="MuiFab-label"
                                                      >
                                                        <span
                                                          aria-hidden="true"
                                                          class="material-icons MuiIcon-root"
                                                        >
                                                          expand_more
                                                        </span>
                                                        Expand All
                                                      </span>
                                                      <span
                                                        class="MuiTouchRipple-root"
                                                      />
                                                    </button>
                                                  }
                                                  className="MuiTooltip-popper"
                                                  id={null}
                                                  open={false}
                                                  placement="bottom"
                                                  popperOptions={
                                                    Object {
                                                      "modifiers": Object {
                                                        "arrow": Object {
                                                          "element": null,
                                                          "enabled": false,
                                                        },
                                                      },
                                                    }
                                                  }
                                                  transition={true}
                                                />
                                              </ForwardRef(Tooltip)>
                                            </WithStyles(ForwardRef(Tooltip))>
                                          </WrappedIcon>
                                        </WithStyles(WrappedIcon)>
                                      </div>
                                      <SchemaField
                                        autofocus={false}
                                        disabled={false}
                                        errorSchema={Object {}}
                                        formData={
                                          Object {
                                            "allow_authorization": false,
                                            "allow_cancel": false,
                                            "allow_delete": false,
                                            "allow_open": false,
                                            "allow_request_approval": false,
                                            "is_read_only": true,
                                            "name": "Cancelled",
                                            "show_authorization": true,
                                          }
                                        }
                                        idSchema={
                                          Object {
                                            "$id": "root_statuses_cancelled",
                                            "allow_delete": Object {
                                              "$id": "root_statuses_cancelled_allow_delete",
                                            },
                                            "is_read_only": Object {
                                              "$id": "root_statuses_cancelled_is_read_only",
                                            },
                                            "name": Object {
                                              "$id": "root_statuses_cancelled_name",
                                            },
                                          }
                                        }
                                        key="cancelled"
                                        name="cancelled"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDropPropertyClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyChange={[Function]}
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {
                                              "listFields": Array [
                                                "scheduled",
                                                "cancelled",
                                              ],
                                              "titleFields": Array [
                                                "statuses",
                                              ],
                                            },
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "allow_delete": Object {
                                                "type": "boolean",
                                              },
                                              "is_read_only": Object {
                                                "type": "boolean",
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "is_read_only",
                                            ],
                                            "type": "object",
                                          }
                                        }
                                        uiSchema={Object {}}
                                        wasPropertyKeyModified={false}
                                      >
                                        <CustomFieldTemplate
                                          classNames="form-group field field-object"
                                          description={
                                            <DescriptionField
                                              formContext={
                                                Object {
                                                  "listFields": Array [
                                                    "scheduled",
                                                    "cancelled",
                                                  ],
                                                  "titleFields": Array [
                                                    "statuses",
                                                  ],
                                                }
                                              }
                                              id="root_statuses_cancelled__description"
                                            />
                                          }
                                          disabled={false}
                                          displayLabel={false}
                                          errors={<ErrorList />}
                                          fields={
                                            Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            }
                                          }
                                          formContext={
                                            Object {
                                              "listFields": Array [
                                                "scheduled",
                                                "cancelled",
                                              ],
                                              "titleFields": Array [
                                                "statuses",
                                              ],
                                            }
                                          }
                                          help={<Help />}
                                          hidden={false}
                                          id="root_statuses_cancelled"
                                          label="cancelled"
                                          onDropPropertyClick={[Function]}
                                          onKeyChange={[Function]}
                                          readonly={false}
                                          required={false}
                                          schema={
                                            Object {
                                              "additionalProperties": false,
                                              "properties": Object {
                                                "allow_delete": Object {
                                                  "type": "boolean",
                                                },
                                                "is_read_only": Object {
                                                  "type": "boolean",
                                                },
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                                "is_read_only",
                                              ],
                                              "type": "object",
                                            }
                                          }
                                          uiSchema={Object {}}
                                        >
                                          <div
                                            className="form-group field field-object"
                                          >
                                            <ObjectField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formContext={
                                                Object {
                                                  "listFields": Array [
                                                    "scheduled",
                                                    "cancelled",
                                                  ],
                                                  "titleFields": Array [
                                                    "statuses",
                                                  ],
                                                }
                                              }
                                              formData={
                                                Object {
                                                  "allow_authorization": false,
                                                  "allow_cancel": false,
                                                  "allow_delete": false,
                                                  "allow_open": false,
                                                  "allow_request_approval": false,
                                                  "is_read_only": true,
                                                  "name": "Cancelled",
                                                  "show_authorization": true,
                                                }
                                              }
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_cancelled",
                                                  "allow_delete": Object {
                                                    "$id": "root_statuses_cancelled_allow_delete",
                                                  },
                                                  "is_read_only": Object {
                                                    "$id": "root_statuses_cancelled_is_read_only",
                                                  },
                                                  "name": Object {
                                                    "$id": "root_statuses_cancelled_name",
                                                  },
                                                }
                                              }
                                              name="cancelled"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {
                                                    "listFields": Array [
                                                      "scheduled",
                                                      "cancelled",
                                                    ],
                                                    "titleFields": Array [
                                                      "statuses",
                                                    ],
                                                  },
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={false}
                                              schema={
                                                Object {
                                                  "additionalProperties": false,
                                                  "properties": Object {
                                                    "allow_delete": Object {
                                                      "type": "boolean",
                                                    },
                                                    "is_read_only": Object {
                                                      "type": "boolean",
                                                    },
                                                    "name": Object {
                                                      "type": "string",
                                                    },
                                                  },
                                                  "required": Array [
                                                    "name",
                                                    "is_read_only",
                                                  ],
                                                  "type": "object",
                                                }
                                              }
                                              uiSchema={
                                                Object {
                                                  "classNames": undefined,
                                                }
                                              }
                                              wasPropertyKeyModified={false}
                                            >
                                              <ObjectFieldTemplate
                                                DescriptionField={[Function]}
                                                TitleField={[Function]}
                                                disabled={false}
                                                formContext={
                                                  Object {
                                                    "listFields": Array [
                                                      "scheduled",
                                                      "cancelled",
                                                    ],
                                                    "titleFields": Array [
                                                      "statuses",
                                                    ],
                                                  }
                                                }
                                                formData={
                                                  Object {
                                                    "allow_authorization": false,
                                                    "allow_cancel": false,
                                                    "allow_delete": false,
                                                    "allow_open": false,
                                                    "allow_request_approval": false,
                                                    "is_read_only": true,
                                                    "name": "Cancelled",
                                                    "show_authorization": true,
                                                  }
                                                }
                                                idSchema={
                                                  Object {
                                                    "$id": "root_statuses_cancelled",
                                                    "allow_delete": Object {
                                                      "$id": "root_statuses_cancelled_allow_delete",
                                                    },
                                                    "is_read_only": Object {
                                                      "$id": "root_statuses_cancelled_is_read_only",
                                                    },
                                                    "name": Object {
                                                      "$id": "root_statuses_cancelled_name",
                                                    },
                                                  }
                                                }
                                                onAddClick={[Function]}
                                                properties={
                                                  Array [
                                                    Object {
                                                      "content": <SchemaField
                                                        autofocus={false}
                                                        disabled={false}
                                                        errorSchema={Object {}}
                                                        formData={false}
                                                        idSchema={
                                                          Object {
                                                            "$id": "root_statuses_cancelled_allow_delete",
                                                          }
                                                        }
                                                        name="allow_delete"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onDropPropertyClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyChange={[Function]}
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {
                                                              "listFields": Array [
                                                                "scheduled",
                                                                "cancelled",
                                                              ],
                                                              "titleFields": Array [
                                                                "statuses",
                                                              ],
                                                            },
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={false}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        uiSchema={Object {}}
                                                        wasPropertyKeyModified={false}
                                                      />,
                                                      "disabled": false,
                                                      "name": "allow_delete",
                                                      "readonly": false,
                                                      "required": false,
                                                    },
                                                    Object {
                                                      "content": <SchemaField
                                                        autofocus={false}
                                                        disabled={false}
                                                        errorSchema={Object {}}
                                                        formData={true}
                                                        idSchema={
                                                          Object {
                                                            "$id": "root_statuses_cancelled_is_read_only",
                                                          }
                                                        }
                                                        name="is_read_only"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onDropPropertyClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyChange={[Function]}
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {
                                                              "listFields": Array [
                                                                "scheduled",
                                                                "cancelled",
                                                              ],
                                                              "titleFields": Array [
                                                                "statuses",
                                                              ],
                                                            },
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        uiSchema={Object {}}
                                                        wasPropertyKeyModified={false}
                                                      />,
                                                      "disabled": false,
                                                      "name": "is_read_only",
                                                      "readonly": false,
                                                      "required": false,
                                                    },
                                                    Object {
                                                      "content": <SchemaField
                                                        autofocus={false}
                                                        disabled={false}
                                                        errorSchema={Object {}}
                                                        formData="Cancelled"
                                                        idSchema={
                                                          Object {
                                                            "$id": "root_statuses_cancelled_name",
                                                          }
                                                        }
                                                        name="name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onDropPropertyClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyChange={[Function]}
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {
                                                              "listFields": Array [
                                                                "scheduled",
                                                                "cancelled",
                                                              ],
                                                              "titleFields": Array [
                                                                "statuses",
                                                              ],
                                                            },
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "string",
                                                          }
                                                        }
                                                        uiSchema={Object {}}
                                                        wasPropertyKeyModified={false}
                                                      />,
                                                      "disabled": false,
                                                      "name": "name",
                                                      "readonly": false,
                                                      "required": false,
                                                    },
                                                  ]
                                                }
                                                readonly={false}
                                                required={false}
                                                schema={
                                                  Object {
                                                    "additionalProperties": false,
                                                    "properties": Object {
                                                      "allow_delete": Object {
                                                        "type": "boolean",
                                                      },
                                                      "is_read_only": Object {
                                                        "type": "boolean",
                                                      },
                                                      "name": Object {
                                                        "type": "string",
                                                      },
                                                    },
                                                    "required": Array [
                                                      "name",
                                                      "is_read_only",
                                                    ],
                                                    "type": "object",
                                                  }
                                                }
                                                title="cancelled"
                                                uiSchema={
                                                  Object {
                                                    "classNames": undefined,
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ListItem))
                                                  button={true}
                                                  onClick={[Function]}
                                                  selected={false}
                                                >
                                                  <ForwardRef(ListItem)
                                                    button={true}
                                                    classes={
                                                      Object {
                                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                        "button": "MuiListItem-button",
                                                        "container": "MuiListItem-container",
                                                        "dense": "MuiListItem-dense",
                                                        "disabled": "Mui-disabled",
                                                        "divider": "MuiListItem-divider",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "gutters": "MuiListItem-gutters",
                                                        "root": "MuiListItem-root",
                                                        "secondaryAction": "MuiListItem-secondaryAction",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    selected={false}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      component="div"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="button"
                                                          tabIndex={0}
                                                        >
                                                          <WithStyles(ForwardRef(ListItemText))
                                                            key=".0"
                                                            primary="cancelled"
                                                          >
                                                            <ForwardRef(ListItemText)
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiListItemText-dense",
                                                                  "inset": "MuiListItemText-inset",
                                                                  "multiline": "MuiListItemText-multiline",
                                                                  "primary": "MuiListItemText-primary",
                                                                  "root": "MuiListItemText-root",
                                                                  "secondary": "MuiListItemText-secondary",
                                                                }
                                                              }
                                                              primary="cancelled"
                                                            >
                                                              <div
                                                                className="MuiListItemText-root"
                                                              >
                                                                <WithStyles(ForwardRef(Typography))
                                                                  className="MuiListItemText-primary"
                                                                  component="span"
                                                                  display="block"
                                                                  variant="body1"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    className="MuiListItemText-primary"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <span
                                                                      className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                    >
                                                                      cancelled
                                                                    </span>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </div>
                                                            </ForwardRef(ListItemText)>
                                                          </WithStyles(ForwardRef(ListItemText))>
                                                          <WithStyles(ForwardRef(Icon))
                                                            key=".1"
                                                          >
                                                            <ForwardRef(Icon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiIcon-colorAction",
                                                                  "colorDisabled": "MuiIcon-colorDisabled",
                                                                  "colorError": "MuiIcon-colorError",
                                                                  "colorPrimary": "MuiIcon-colorPrimary",
                                                                  "colorSecondary": "MuiIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                  "root": "MuiIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-hidden={true}
                                                                className="material-icons MuiIcon-root"
                                                              >
                                                                expand_more
                                                              </span>
                                                            </ForwardRef(Icon)>
                                                          </WithStyles(ForwardRef(Icon))>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(ListItem)>
                                                </WithStyles(ForwardRef(ListItem))>
                                                <WithStyles(ForwardRef(Collapse))
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <ForwardRef(Collapse)
                                                    classes={
                                                      Object {
                                                        "container": "MuiCollapse-container",
                                                        "entered": "MuiCollapse-entered",
                                                        "hidden": "MuiCollapse-hidden",
                                                        "wrapper": "MuiCollapse-wrapper",
                                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                                      }
                                                    }
                                                    in={false}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <Transition
                                                      addEndListener={[Function]}
                                                      appear={false}
                                                      enter={true}
                                                      exit={true}
                                                      in={false}
                                                      mountOnEnter={false}
                                                      onEnter={[Function]}
                                                      onEntered={[Function]}
                                                      onEntering={[Function]}
                                                      onExit={[Function]}
                                                      onExited={[Function]}
                                                      onExiting={[Function]}
                                                      timeout={null}
                                                      unmountOnExit={true}
                                                    />
                                                  </ForwardRef(Collapse)>
                                                </WithStyles(ForwardRef(Collapse))>
                                                <WithStyles(ForwardRef(Divider))
                                                  light={true}
                                                >
                                                  <ForwardRef(Divider)
                                                    classes={
                                                      Object {
                                                        "absolute": "MuiDivider-absolute",
                                                        "flexItem": "MuiDivider-flexItem",
                                                        "inset": "MuiDivider-inset",
                                                        "light": "MuiDivider-light",
                                                        "middle": "MuiDivider-middle",
                                                        "root": "MuiDivider-root",
                                                        "vertical": "MuiDivider-vertical",
                                                      }
                                                    }
                                                    light={true}
                                                  >
                                                    <hr
                                                      className="MuiDivider-root MuiDivider-light"
                                                    />
                                                  </ForwardRef(Divider)>
                                                </WithStyles(ForwardRef(Divider))>
                                              </ObjectFieldTemplate>
                                            </ObjectField>
                                          </div>
                                        </CustomFieldTemplate>
                                      </SchemaField>
                                      <SchemaField
                                        autofocus={false}
                                        disabled={false}
                                        errorSchema={Object {}}
                                        formData={
                                          Object {
                                            "allow_authorization": false,
                                            "allow_cancel": true,
                                            "allow_delete": true,
                                            "allow_open": false,
                                            "allow_request_approval": false,
                                            "is_read_only": true,
                                            "name": "Scheduled",
                                            "show_authorization": true,
                                          }
                                        }
                                        idSchema={
                                          Object {
                                            "$id": "root_statuses_scheduled",
                                            "allow_delete": Object {
                                              "$id": "root_statuses_scheduled_allow_delete",
                                            },
                                            "is_read_only": Object {
                                              "$id": "root_statuses_scheduled_is_read_only",
                                            },
                                            "name": Object {
                                              "$id": "root_statuses_scheduled_name",
                                            },
                                          }
                                        }
                                        key="scheduled"
                                        name="scheduled"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onDropPropertyClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyChange={[Function]}
                                        readonly={false}
                                        registry={
                                          Object {
                                            "ArrayFieldTemplate": [Function],
                                            "FieldTemplate": [Function],
                                            "ObjectFieldTemplate": [Function],
                                            "definitions": Object {},
                                            "fields": Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            },
                                            "formContext": Object {
                                              "listFields": Array [
                                                "scheduled",
                                                "cancelled",
                                              ],
                                              "titleFields": Array [
                                                "statuses",
                                              ],
                                            },
                                            "widgets": Object {
                                              "AltDateTimeWidget": [Function],
                                              "AltDateWidget": [Function],
                                              "BaseInput": [Function],
                                              "CheckboxWidget": [Function],
                                              "CheckboxesWidget": [Function],
                                              "ColorWidget": [Function],
                                              "DateTimeWidget": [Function],
                                              "DateWidget": [Function],
                                              "EmailWidget": [Function],
                                              "FileWidget": [Function],
                                              "HiddenWidget": [Function],
                                              "PasswordWidget": [Function],
                                              "RadioWidget": [Function],
                                              "RangeWidget": [Function],
                                              "SelectWidget": [Function],
                                              "TextWidget": [Function],
                                              "TextareaWidget": [Function],
                                              "URLWidget": [Function],
                                              "UpDownWidget": [Function],
                                            },
                                          }
                                        }
                                        required={false}
                                        schema={
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "allow_delete": Object {
                                                "type": "boolean",
                                              },
                                              "is_read_only": Object {
                                                "type": "boolean",
                                              },
                                              "name": Object {
                                                "type": "string",
                                              },
                                            },
                                            "required": Array [
                                              "name",
                                              "is_read_only",
                                            ],
                                            "type": "object",
                                          }
                                        }
                                        uiSchema={Object {}}
                                        wasPropertyKeyModified={false}
                                      >
                                        <CustomFieldTemplate
                                          classNames="form-group field field-object"
                                          description={
                                            <DescriptionField
                                              formContext={
                                                Object {
                                                  "listFields": Array [
                                                    "scheduled",
                                                    "cancelled",
                                                  ],
                                                  "titleFields": Array [
                                                    "statuses",
                                                  ],
                                                }
                                              }
                                              id="root_statuses_scheduled__description"
                                            />
                                          }
                                          disabled={false}
                                          displayLabel={false}
                                          errors={<ErrorList />}
                                          fields={
                                            Object {
                                              "AnyOfField": [Function],
                                              "ArrayField": [Function],
                                              "BooleanField": [Function],
                                              "DescriptionField": [Function],
                                              "NullField": [Function],
                                              "NumberField": [Function],
                                              "ObjectField": [Function],
                                              "OneOfField": [Function],
                                              "SchemaField": [Function],
                                              "StringField": [Function],
                                              "TitleField": [Function],
                                              "UnsupportedField": [Function],
                                            }
                                          }
                                          formContext={
                                            Object {
                                              "listFields": Array [
                                                "scheduled",
                                                "cancelled",
                                              ],
                                              "titleFields": Array [
                                                "statuses",
                                              ],
                                            }
                                          }
                                          help={<Help />}
                                          hidden={false}
                                          id="root_statuses_scheduled"
                                          label="scheduled"
                                          onDropPropertyClick={[Function]}
                                          onKeyChange={[Function]}
                                          readonly={false}
                                          required={false}
                                          schema={
                                            Object {
                                              "additionalProperties": false,
                                              "properties": Object {
                                                "allow_delete": Object {
                                                  "type": "boolean",
                                                },
                                                "is_read_only": Object {
                                                  "type": "boolean",
                                                },
                                                "name": Object {
                                                  "type": "string",
                                                },
                                              },
                                              "required": Array [
                                                "name",
                                                "is_read_only",
                                              ],
                                              "type": "object",
                                            }
                                          }
                                          uiSchema={Object {}}
                                        >
                                          <div
                                            className="form-group field field-object"
                                          >
                                            <ObjectField
                                              autofocus={false}
                                              disabled={false}
                                              errorSchema={Object {}}
                                              formContext={
                                                Object {
                                                  "listFields": Array [
                                                    "scheduled",
                                                    "cancelled",
                                                  ],
                                                  "titleFields": Array [
                                                    "statuses",
                                                  ],
                                                }
                                              }
                                              formData={
                                                Object {
                                                  "allow_authorization": false,
                                                  "allow_cancel": true,
                                                  "allow_delete": true,
                                                  "allow_open": false,
                                                  "allow_request_approval": false,
                                                  "is_read_only": true,
                                                  "name": "Scheduled",
                                                  "show_authorization": true,
                                                }
                                              }
                                              idSchema={
                                                Object {
                                                  "$id": "root_statuses_scheduled",
                                                  "allow_delete": Object {
                                                    "$id": "root_statuses_scheduled_allow_delete",
                                                  },
                                                  "is_read_only": Object {
                                                    "$id": "root_statuses_scheduled_is_read_only",
                                                  },
                                                  "name": Object {
                                                    "$id": "root_statuses_scheduled_name",
                                                  },
                                                }
                                              }
                                              name="scheduled"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onDropPropertyClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyChange={[Function]}
                                              readonly={false}
                                              registry={
                                                Object {
                                                  "ArrayFieldTemplate": [Function],
                                                  "FieldTemplate": [Function],
                                                  "ObjectFieldTemplate": [Function],
                                                  "definitions": Object {},
                                                  "fields": Object {
                                                    "AnyOfField": [Function],
                                                    "ArrayField": [Function],
                                                    "BooleanField": [Function],
                                                    "DescriptionField": [Function],
                                                    "NullField": [Function],
                                                    "NumberField": [Function],
                                                    "ObjectField": [Function],
                                                    "OneOfField": [Function],
                                                    "SchemaField": [Function],
                                                    "StringField": [Function],
                                                    "TitleField": [Function],
                                                    "UnsupportedField": [Function],
                                                  },
                                                  "formContext": Object {
                                                    "listFields": Array [
                                                      "scheduled",
                                                      "cancelled",
                                                    ],
                                                    "titleFields": Array [
                                                      "statuses",
                                                    ],
                                                  },
                                                  "widgets": Object {
                                                    "AltDateTimeWidget": [Function],
                                                    "AltDateWidget": [Function],
                                                    "BaseInput": [Function],
                                                    "CheckboxWidget": [Function],
                                                    "CheckboxesWidget": [Function],
                                                    "ColorWidget": [Function],
                                                    "DateTimeWidget": [Function],
                                                    "DateWidget": [Function],
                                                    "EmailWidget": [Function],
                                                    "FileWidget": [Function],
                                                    "HiddenWidget": [Function],
                                                    "PasswordWidget": [Function],
                                                    "RadioWidget": [Function],
                                                    "RangeWidget": [Function],
                                                    "SelectWidget": [Function],
                                                    "TextWidget": [Function],
                                                    "TextareaWidget": [Function],
                                                    "URLWidget": [Function],
                                                    "UpDownWidget": [Function],
                                                  },
                                                }
                                              }
                                              required={false}
                                              schema={
                                                Object {
                                                  "additionalProperties": false,
                                                  "properties": Object {
                                                    "allow_delete": Object {
                                                      "type": "boolean",
                                                    },
                                                    "is_read_only": Object {
                                                      "type": "boolean",
                                                    },
                                                    "name": Object {
                                                      "type": "string",
                                                    },
                                                  },
                                                  "required": Array [
                                                    "name",
                                                    "is_read_only",
                                                  ],
                                                  "type": "object",
                                                }
                                              }
                                              uiSchema={
                                                Object {
                                                  "classNames": undefined,
                                                }
                                              }
                                              wasPropertyKeyModified={false}
                                            >
                                              <ObjectFieldTemplate
                                                DescriptionField={[Function]}
                                                TitleField={[Function]}
                                                disabled={false}
                                                formContext={
                                                  Object {
                                                    "listFields": Array [
                                                      "scheduled",
                                                      "cancelled",
                                                    ],
                                                    "titleFields": Array [
                                                      "statuses",
                                                    ],
                                                  }
                                                }
                                                formData={
                                                  Object {
                                                    "allow_authorization": false,
                                                    "allow_cancel": true,
                                                    "allow_delete": true,
                                                    "allow_open": false,
                                                    "allow_request_approval": false,
                                                    "is_read_only": true,
                                                    "name": "Scheduled",
                                                    "show_authorization": true,
                                                  }
                                                }
                                                idSchema={
                                                  Object {
                                                    "$id": "root_statuses_scheduled",
                                                    "allow_delete": Object {
                                                      "$id": "root_statuses_scheduled_allow_delete",
                                                    },
                                                    "is_read_only": Object {
                                                      "$id": "root_statuses_scheduled_is_read_only",
                                                    },
                                                    "name": Object {
                                                      "$id": "root_statuses_scheduled_name",
                                                    },
                                                  }
                                                }
                                                onAddClick={[Function]}
                                                properties={
                                                  Array [
                                                    Object {
                                                      "content": <SchemaField
                                                        autofocus={false}
                                                        disabled={false}
                                                        errorSchema={Object {}}
                                                        formData={true}
                                                        idSchema={
                                                          Object {
                                                            "$id": "root_statuses_scheduled_allow_delete",
                                                          }
                                                        }
                                                        name="allow_delete"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onDropPropertyClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyChange={[Function]}
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {
                                                              "listFields": Array [
                                                                "scheduled",
                                                                "cancelled",
                                                              ],
                                                              "titleFields": Array [
                                                                "statuses",
                                                              ],
                                                            },
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={false}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        uiSchema={Object {}}
                                                        wasPropertyKeyModified={false}
                                                      />,
                                                      "disabled": false,
                                                      "name": "allow_delete",
                                                      "readonly": false,
                                                      "required": false,
                                                    },
                                                    Object {
                                                      "content": <SchemaField
                                                        autofocus={false}
                                                        disabled={false}
                                                        errorSchema={Object {}}
                                                        formData={true}
                                                        idSchema={
                                                          Object {
                                                            "$id": "root_statuses_scheduled_is_read_only",
                                                          }
                                                        }
                                                        name="is_read_only"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onDropPropertyClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyChange={[Function]}
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {
                                                              "listFields": Array [
                                                                "scheduled",
                                                                "cancelled",
                                                              ],
                                                              "titleFields": Array [
                                                                "statuses",
                                                              ],
                                                            },
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "boolean",
                                                          }
                                                        }
                                                        uiSchema={Object {}}
                                                        wasPropertyKeyModified={false}
                                                      />,
                                                      "disabled": false,
                                                      "name": "is_read_only",
                                                      "readonly": false,
                                                      "required": false,
                                                    },
                                                    Object {
                                                      "content": <SchemaField
                                                        autofocus={false}
                                                        disabled={false}
                                                        errorSchema={Object {}}
                                                        formData="Scheduled"
                                                        idSchema={
                                                          Object {
                                                            "$id": "root_statuses_scheduled_name",
                                                          }
                                                        }
                                                        name="name"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onDropPropertyClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyChange={[Function]}
                                                        readonly={false}
                                                        registry={
                                                          Object {
                                                            "ArrayFieldTemplate": [Function],
                                                            "FieldTemplate": [Function],
                                                            "ObjectFieldTemplate": [Function],
                                                            "definitions": Object {},
                                                            "fields": Object {
                                                              "AnyOfField": [Function],
                                                              "ArrayField": [Function],
                                                              "BooleanField": [Function],
                                                              "DescriptionField": [Function],
                                                              "NullField": [Function],
                                                              "NumberField": [Function],
                                                              "ObjectField": [Function],
                                                              "OneOfField": [Function],
                                                              "SchemaField": [Function],
                                                              "StringField": [Function],
                                                              "TitleField": [Function],
                                                              "UnsupportedField": [Function],
                                                            },
                                                            "formContext": Object {
                                                              "listFields": Array [
                                                                "scheduled",
                                                                "cancelled",
                                                              ],
                                                              "titleFields": Array [
                                                                "statuses",
                                                              ],
                                                            },
                                                            "widgets": Object {
                                                              "AltDateTimeWidget": [Function],
                                                              "AltDateWidget": [Function],
                                                              "BaseInput": [Function],
                                                              "CheckboxWidget": [Function],
                                                              "CheckboxesWidget": [Function],
                                                              "ColorWidget": [Function],
                                                              "DateTimeWidget": [Function],
                                                              "DateWidget": [Function],
                                                              "EmailWidget": [Function],
                                                              "FileWidget": [Function],
                                                              "HiddenWidget": [Function],
                                                              "PasswordWidget": [Function],
                                                              "RadioWidget": [Function],
                                                              "RangeWidget": [Function],
                                                              "SelectWidget": [Function],
                                                              "TextWidget": [Function],
                                                              "TextareaWidget": [Function],
                                                              "URLWidget": [Function],
                                                              "UpDownWidget": [Function],
                                                            },
                                                          }
                                                        }
                                                        required={true}
                                                        schema={
                                                          Object {
                                                            "type": "string",
                                                          }
                                                        }
                                                        uiSchema={Object {}}
                                                        wasPropertyKeyModified={false}
                                                      />,
                                                      "disabled": false,
                                                      "name": "name",
                                                      "readonly": false,
                                                      "required": false,
                                                    },
                                                  ]
                                                }
                                                readonly={false}
                                                required={false}
                                                schema={
                                                  Object {
                                                    "additionalProperties": false,
                                                    "properties": Object {
                                                      "allow_delete": Object {
                                                        "type": "boolean",
                                                      },
                                                      "is_read_only": Object {
                                                        "type": "boolean",
                                                      },
                                                      "name": Object {
                                                        "type": "string",
                                                      },
                                                    },
                                                    "required": Array [
                                                      "name",
                                                      "is_read_only",
                                                    ],
                                                    "type": "object",
                                                  }
                                                }
                                                title="scheduled"
                                                uiSchema={
                                                  Object {
                                                    "classNames": undefined,
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(ListItem))
                                                  button={true}
                                                  onClick={[Function]}
                                                  selected={false}
                                                >
                                                  <ForwardRef(ListItem)
                                                    button={true}
                                                    classes={
                                                      Object {
                                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                        "button": "MuiListItem-button",
                                                        "container": "MuiListItem-container",
                                                        "dense": "MuiListItem-dense",
                                                        "disabled": "Mui-disabled",
                                                        "divider": "MuiListItem-divider",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "gutters": "MuiListItem-gutters",
                                                        "root": "MuiListItem-root",
                                                        "secondaryAction": "MuiListItem-secondaryAction",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                    onClick={[Function]}
                                                    selected={false}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      component="div"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="div"
                                                        disabled={false}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                      >
                                                        <div
                                                          aria-disabled={false}
                                                          className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="button"
                                                          tabIndex={0}
                                                        >
                                                          <WithStyles(ForwardRef(ListItemText))
                                                            key=".0"
                                                            primary="scheduled"
                                                          >
                                                            <ForwardRef(ListItemText)
                                                              classes={
                                                                Object {
                                                                  "dense": "MuiListItemText-dense",
                                                                  "inset": "MuiListItemText-inset",
                                                                  "multiline": "MuiListItemText-multiline",
                                                                  "primary": "MuiListItemText-primary",
                                                                  "root": "MuiListItemText-root",
                                                                  "secondary": "MuiListItemText-secondary",
                                                                }
                                                              }
                                                              primary="scheduled"
                                                            >
                                                              <div
                                                                className="MuiListItemText-root"
                                                              >
                                                                <WithStyles(ForwardRef(Typography))
                                                                  className="MuiListItemText-primary"
                                                                  component="span"
                                                                  display="block"
                                                                  variant="body1"
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    className="MuiListItemText-primary"
                                                                    classes={
                                                                      Object {
                                                                        "alignCenter": "MuiTypography-alignCenter",
                                                                        "alignJustify": "MuiTypography-alignJustify",
                                                                        "alignLeft": "MuiTypography-alignLeft",
                                                                        "alignRight": "MuiTypography-alignRight",
                                                                        "body1": "MuiTypography-body1",
                                                                        "body2": "MuiTypography-body2",
                                                                        "button": "MuiTypography-button",
                                                                        "caption": "MuiTypography-caption",
                                                                        "colorError": "MuiTypography-colorError",
                                                                        "colorInherit": "MuiTypography-colorInherit",
                                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                        "displayBlock": "MuiTypography-displayBlock",
                                                                        "displayInline": "MuiTypography-displayInline",
                                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                                        "h1": "MuiTypography-h1",
                                                                        "h2": "MuiTypography-h2",
                                                                        "h3": "MuiTypography-h3",
                                                                        "h4": "MuiTypography-h4",
                                                                        "h5": "MuiTypography-h5",
                                                                        "h6": "MuiTypography-h6",
                                                                        "noWrap": "MuiTypography-noWrap",
                                                                        "overline": "MuiTypography-overline",
                                                                        "paragraph": "MuiTypography-paragraph",
                                                                        "root": "MuiTypography-root",
                                                                        "srOnly": "MuiTypography-srOnly",
                                                                        "subtitle1": "MuiTypography-subtitle1",
                                                                        "subtitle2": "MuiTypography-subtitle2",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    display="block"
                                                                    variant="body1"
                                                                  >
                                                                    <span
                                                                      className="MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
                                                                    >
                                                                      scheduled
                                                                    </span>
                                                                  </ForwardRef(Typography)>
                                                                </WithStyles(ForwardRef(Typography))>
                                                              </div>
                                                            </ForwardRef(ListItemText)>
                                                          </WithStyles(ForwardRef(ListItemText))>
                                                          <WithStyles(ForwardRef(Icon))
                                                            key=".1"
                                                          >
                                                            <ForwardRef(Icon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiIcon-colorAction",
                                                                  "colorDisabled": "MuiIcon-colorDisabled",
                                                                  "colorError": "MuiIcon-colorError",
                                                                  "colorPrimary": "MuiIcon-colorPrimary",
                                                                  "colorSecondary": "MuiIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                                                  "root": "MuiIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-hidden={true}
                                                                className="material-icons MuiIcon-root"
                                                              >
                                                                expand_more
                                                              </span>
                                                            </ForwardRef(Icon)>
                                                          </WithStyles(ForwardRef(Icon))>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </div>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(ListItem)>
                                                </WithStyles(ForwardRef(ListItem))>
                                                <WithStyles(ForwardRef(Collapse))
                                                  in={false}
                                                  timeout="auto"
                                                  unmountOnExit={true}
                                                >
                                                  <ForwardRef(Collapse)
                                                    classes={
                                                      Object {
                                                        "container": "MuiCollapse-container",
                                                        "entered": "MuiCollapse-entered",
                                                        "hidden": "MuiCollapse-hidden",
                                                        "wrapper": "MuiCollapse-wrapper",
                                                        "wrapperInner": "MuiCollapse-wrapperInner",
                                                      }
                                                    }
                                                    in={false}
                                                    timeout="auto"
                                                    unmountOnExit={true}
                                                  >
                                                    <Transition
                                                      addEndListener={[Function]}
                                                      appear={false}
                                                      enter={true}
                                                      exit={true}
                                                      in={false}
                                                      mountOnEnter={false}
                                                      onEnter={[Function]}
                                                      onEntered={[Function]}
                                                      onEntering={[Function]}
                                                      onExit={[Function]}
                                                      onExited={[Function]}
                                                      onExiting={[Function]}
                                                      timeout={null}
                                                      unmountOnExit={true}
                                                    />
                                                  </ForwardRef(Collapse)>
                                                </WithStyles(ForwardRef(Collapse))>
                                                <WithStyles(ForwardRef(Divider))
                                                  light={true}
                                                >
                                                  <ForwardRef(Divider)
                                                    classes={
                                                      Object {
                                                        "absolute": "MuiDivider-absolute",
                                                        "flexItem": "MuiDivider-flexItem",
                                                        "inset": "MuiDivider-inset",
                                                        "light": "MuiDivider-light",
                                                        "middle": "MuiDivider-middle",
                                                        "root": "MuiDivider-root",
                                                        "vertical": "MuiDivider-vertical",
                                                      }
                                                    }
                                                    light={true}
                                                  >
                                                    <hr
                                                      className="MuiDivider-root MuiDivider-light"
                                                    />
                                                  </ForwardRef(Divider)>
                                                </WithStyles(ForwardRef(Divider))>
                                              </ObjectFieldTemplate>
                                            </ObjectField>
                                          </div>
                                        </CustomFieldTemplate>
                                      </SchemaField>
                                    </nav>
                                  </ForwardRef(List)>
                                </WithStyles(ForwardRef(List))>
                              </ObjectFieldTemplate>
                            </ObjectField>
                          </div>
                        </CustomFieldTemplate>
                      </SchemaField>
                    </div>
                  </ObjectFieldTemplate>
                </ObjectField>
              </div>
            </CustomFieldTemplate>
          </SchemaField>
        </form>
      </Form>
    </StatelessSettingSchema>
  </SettingSchema>
</EventSettings>
`;
