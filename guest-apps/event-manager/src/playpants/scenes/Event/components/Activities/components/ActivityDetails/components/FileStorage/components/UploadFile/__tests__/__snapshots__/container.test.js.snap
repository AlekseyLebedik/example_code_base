// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UploadFile initial rendering 1`] = `
<Connect(UploadFile)
  activitySettings={
    Array [
      Object {
        "allow_duplication": true,
        "allow_multi_titles": true,
        "allow_revert": false,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": false,
        "name": "Message of The Day",
        "type": "motd",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": true,
        "allow_revert": false,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": false,
        "name": "Playlists",
        "type": "playlist",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": true,
        "name": "Publisher Variables",
        "type": "pubvars",
        "variable_mapping": Object {
          "LKKNORQKTP": "mp_xp_mult_scale",
          "MSTMLNKSSO": "mp_weapon_xp",
        },
      },
      Object {
        "allow_duplication": false,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": true,
        "name": "Publisher Storage",
        "type": "pubstorage",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": true,
        "name": "Python Script",
        "type": "pyscript",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": true,
          "type": "title",
        },
        "enabled": true,
        "name": "Achievements Engine",
        "type": "ae",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": true,
          "type": "title",
        },
        "enabled": true,
        "name": "Publisher Objects",
        "type": "publisher_objects",
      },
    ]
  }
  agGridProps={
    Object {
      "columnDefs": [MockFunction],
      "noRowsLocked": "<div />",
      "noRowsUnlocked": "<div />",
    }
  }
  allowDetachedEvents={false}
  allowMultiTitles={true}
  badgeCount={
    Object {
      "discussion": 2,
      "tasks": 0,
    }
  }
  baseUrl="/event-manager/3/"
  changeMainTab={[MockFunction]}
  classes={Object {}}
  conflicts={Array []}
  contextsData={
    Array [
      "1",
      "test",
      "another",
    ]
  }
  currentProject={
    Object {
      "contentTypeId": 19,
      "id": 1,
      "name": "GTR Project",
      "titles": Array [
        Object {
          "environments": Array [
            Object {
              "contentTypeId": 8,
              "id": 2,
              "shortType": "cert",
              "type": "Certification",
              "usesABTesting": true,
              "usesAE": true,
              "usesAsyncMMP": false,
              "usesLegacyStore": false,
              "usesMarketplace": true,
              "usesObjectStore": true,
            },
            Object {
              "contentTypeId": 8,
              "id": 1,
              "shortType": "dev",
              "type": "Development",
              "usesABTesting": true,
              "usesAE": true,
              "usesAsyncMMP": false,
              "usesLegacyStore": false,
              "usesMarketplace": true,
              "usesObjectStore": true,
            },
          ],
          "id": 1,
          "name": "GTR-PS3",
          "platform": "PS3",
        },
      ],
    }
  }
  currentUser={
    Object {
      "id": 1,
      "name": "Initial User",
    }
  }
  dateTime={[MockFunction]}
  deleteEvent={[MockFunction]}
  disabled={false}
  downloadFile={[MockFunction]}
  editAuths={[MockFunction]}
  editEvent={[MockFunction]}
  event={
    Object {
      "data": Object {
        "activities": Array [
          Object {
            "activity": Object {
              "inputs": Array [
                Object {
                  "language": "sp",
                  "text": "Hola Amigo :D",
                },
              ],
            },
            "exec_order": 0,
            "id": 13,
            "publish_on": "on_start",
            "title_envs": Array [
              1,
            ],
            "type": "motd",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          Object {
            "activity": Object {
              "inputs": Array [
                Object {
                  "key": "weapon_type",
                  "value": "Gun",
                },
                Object {
                  "key": "attachment_icons",
                  "value": Array [],
                },
                Object {
                  "key": "invalid",
                  "value": "test",
                },
              ],
              "name": "Double XP",
              "template_id": "double_xp",
              "version": "v1.0.4",
            },
            "exec_order": 1,
            "id": 12,
            "publish_on": "on_start",
            "title_envs": Array [
              4,
            ],
            "type": "pyscript",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          Object {
            "activity": Object {
              "ruleset_to_activate": Object {
                "activationTimestamp": null,
                "code": "idiwoq03292kj4lsl",
                "codeHash": "4mhdBfYBdYmeco1ve62h0b6rue8=",
                "codeSignatureTimestamp": 1565841879,
                "code_signature": "v/kWwu8MBe1GGSxK64a3OqKynmKpGJYGlylUMT0asJ+ZHiuonlDAl2igzISRqgMuPWJf/HqCxvAbxuAMxq+YCg==",
                "creationTimestamp": 1565841879,
                "isActive": true,
                "label": "stronghold-5",
                "lastUpdateTimestamp": 1565842668,
              },
            },
            "exec_order": 0,
            "id": 1,
            "publish_on": "on_start",
            "title_envs": Array [
              1,
            ],
            "type": "ae",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          Object {
            "activity": Object {
              "deploy": Array [
                Object {
                  "build_uid": "e36576c1fb46e4d60c9ccf1cb5ae2f01dfcd96c6e226b424c715aec84155bd9b",
                  "target_name": "uidev:dev(mp)",
                  "uid": "tp_deployment_1",
                },
              ],
              "modify": Array [
                Object {
                  "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa3",
                  "uid": "modify_1",
                  "user_params": Object {},
                },
              ],
              "undeploy": Array [
                Object {
                  "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa2",
                  "uid": "undeploy_1",
                },
              ],
            },
            "exec_order": 0,
            "id": 2,
            "publish_on": "on_start",
            "title_envs": Array [
              1,
            ],
            "type": "tp_deployment",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
        ],
        "authorizations": Array [],
        "authorizers": Array [],
        "auto_tags": Array [
          "PS4",
        ],
        "created_at": 1560983839,
        "created_by": Object {
          "id": 1,
          "name": "Initial User",
        },
        "end_at": 1561243001,
        "env_type": "Development",
        "event_type": "event-manager",
        "id": 2,
        "is_schedule": false,
        "locked_by": 1,
        "manual_tags": Array [
          "PS4",
        ],
        "note": "testing notes",
        "platforms": Array [
          "PS",
        ],
        "project": 1,
        "publish_at": 1561057200,
        "status": "open",
        "task": null,
        "title": "Test Event",
        "updated_at": 1560985103,
        "updated_by": Object {
          "id": 1,
          "name": "Initial User",
        },
      },
      "loading": false,
    }
  }
  eventData={Object {}}
  eventId={2}
  eventUrl="/event-manager/3/events/2"
  failedProgress={[MockFunction]}
  fetchContexts={[MockFunction]}
  fileDetailsFetch={[MockFunction]}
  files={
    Object {
      "3": Object {
        "X-Progress-ID": 1563392198,
        "comment": "",
        "context": "1",
        "download": false,
        "filename": "test.txt",
        "id": 3,
        "progress": 0,
        "remoteFilename": "test.txt",
        "size": "5 bytes",
        "title": "",
      },
    }
  }
  handleSetPrimaryTab={[MockFunction]}
  handleSetSecondaryTab={[MockFunction]}
  history={
    Object {
      "push": [MockFunction],
    }
  }
  inProgress={false}
  isEventManagerEvent={true}
  isLoadingEventsPage={false}
  loadDiscussion={[MockFunction]}
  loadEvent={[MockFunction]}
  noTitleSelected={false}
  onCloseRequestErrorDialog={[MockFunction]}
  onDeleteEvent={[MockFunction]}
  onSave={[MockFunction]}
  onUpdate={[MockFunction]}
  permissions={
    Object {
      "achievementWritePermission": true,
      "adminPermission": true,
      "eventWritePermission": true,
      "publisherObjectsWritePermission": true,
      "pubstorageWritePermission": true,
      "pubvarsWritePermission": true,
      "pyscriptWritePermission": true,
      "staffUser": true,
      "tpDeploymentWritePermission": true,
      "wipPermission": true,
    }
  }
  primaryTab="details"
  removeFile={[MockFunction]}
  requestErrorDialogOpen={
    Object {
      "open": false,
    }
  }
  saveEdit={[MockFunction]}
  secondaryTab="tasks"
  selectedActivity={
    Object {
      "activity": Object {
        "files": Array [
          3,
        ],
      },
      "id": 50,
      "title_envs": Array [
        1,
      ],
      "type": "pubstorage",
    }
  }
  selectedItemId="12"
  selectedTab="activities"
  selectedTitle={
    Object {
      "id": 3,
    }
  }
  setInProgress={[MockFunction]}
  setNewestFileDetails={[MockFunction]}
  status={
    Object {
      "allowAuths": true,
      "canCancel": true,
      "canDelete": true,
      "canOpen": false,
      "failed": false,
      "locked": false,
      "name": "Open",
      "readOnly": false,
      "showAuths": false,
      "showTemplates": true,
    }
  }
  store={
    Object {
      "@@observable": [Function],
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  tabUrl="/event-manager/3/events/2/activities"
  titles={
    Array [
      Object {
        "env": Object {
          "id": 3,
        },
        "environments": Array [
          Object {
            "id": 3,
          },
        ],
        "id": 3,
        "name": "mw2-PS3",
      },
      Object {
        "env": Object {
          "id": 5,
        },
        "environments": Array [
          Object {
            "id": 5,
          },
        ],
        "id": 4,
        "name": "mw2-XBOX1",
      },
    ]
  }
  type="dropzone"
  updateFile={[MockFunction]}
  updateProgress={[MockFunction]}
  updateUserProfileSetting={[MockFunction]}
  uploadDisabled={false}
  uploadFile={[MockFunction]}
  uploadFileAction={[MockFunction]}
  uploadProgress={
    Object {
      "1563392198": Object {
        "received": 776,
        "size": 776,
      },
    }
  }
  uploadProgressFetch={[MockFunction]}
  user={
    Object {
      "actions": Object {
        "createUserProfileSetting": [MockFunction],
        "updateUserProfileSetting": [MockFunction],
      },
    }
  }
>
  <UploadFile
    activitySettings={
      Array [
        Object {
          "allow_duplication": true,
          "allow_multi_titles": true,
          "allow_revert": false,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": false,
          "name": "Message of The Day",
          "type": "motd",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": true,
          "allow_revert": false,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": false,
          "name": "Playlists",
          "type": "playlist",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": true,
          "name": "Publisher Variables",
          "type": "pubvars",
          "variable_mapping": Object {
            "LKKNORQKTP": "mp_xp_mult_scale",
            "MSTMLNKSSO": "mp_weapon_xp",
          },
        },
        Object {
          "allow_duplication": false,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": true,
          "name": "Publisher Storage",
          "type": "pubstorage",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": true,
          "name": "Python Script",
          "type": "pyscript",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": true,
            "type": "title",
          },
          "enabled": true,
          "name": "Achievements Engine",
          "type": "ae",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": true,
            "type": "title",
          },
          "enabled": true,
          "name": "Publisher Objects",
          "type": "publisher_objects",
        },
      ]
    }
    agGridProps={
      Object {
        "columnDefs": [MockFunction],
        "noRowsLocked": "<div />",
        "noRowsUnlocked": "<div />",
      }
    }
    allowDetachedEvents={false}
    allowMultiTitles={true}
    badgeCount={
      Object {
        "discussion": 2,
        "tasks": 0,
      }
    }
    baseUrl="/event-manager/3/"
    changeMainTab={[MockFunction]}
    classes={Object {}}
    conflicts={Array []}
    contextsData={
      Array [
        "1",
        "test",
        "another",
      ]
    }
    currentProject={
      Object {
        "contentTypeId": 19,
        "id": 1,
        "name": "GTR Project",
        "titles": Array [
          Object {
            "environments": Array [
              Object {
                "contentTypeId": 8,
                "id": 2,
                "shortType": "cert",
                "type": "Certification",
                "usesABTesting": true,
                "usesAE": true,
                "usesAsyncMMP": false,
                "usesLegacyStore": false,
                "usesMarketplace": true,
                "usesObjectStore": true,
              },
              Object {
                "contentTypeId": 8,
                "id": 1,
                "shortType": "dev",
                "type": "Development",
                "usesABTesting": true,
                "usesAE": true,
                "usesAsyncMMP": false,
                "usesLegacyStore": false,
                "usesMarketplace": true,
                "usesObjectStore": true,
              },
            ],
            "id": 1,
            "name": "GTR-PS3",
            "platform": "PS3",
          },
        ],
      }
    }
    currentUser={
      Object {
        "id": 1,
        "name": "Initial User",
      }
    }
    dateTime={[MockFunction]}
    deleteEvent={[MockFunction]}
    disabled={false}
    downloadFile={[MockFunction]}
    editAuths={[MockFunction]}
    editEvent={[MockFunction]}
    event={
      Object {
        "data": Object {
          "activities": Array [
            Object {
              "activity": Object {
                "inputs": Array [
                  Object {
                    "language": "sp",
                    "text": "Hola Amigo :D",
                  },
                ],
              },
              "exec_order": 0,
              "id": 13,
              "publish_on": "on_start",
              "title_envs": Array [
                1,
              ],
              "type": "motd",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
            Object {
              "activity": Object {
                "inputs": Array [
                  Object {
                    "key": "weapon_type",
                    "value": "Gun",
                  },
                  Object {
                    "key": "attachment_icons",
                    "value": Array [],
                  },
                  Object {
                    "key": "invalid",
                    "value": "test",
                  },
                ],
                "name": "Double XP",
                "template_id": "double_xp",
                "version": "v1.0.4",
              },
              "exec_order": 1,
              "id": 12,
              "publish_on": "on_start",
              "title_envs": Array [
                4,
              ],
              "type": "pyscript",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
            Object {
              "activity": Object {
                "ruleset_to_activate": Object {
                  "activationTimestamp": null,
                  "code": "idiwoq03292kj4lsl",
                  "codeHash": "4mhdBfYBdYmeco1ve62h0b6rue8=",
                  "codeSignatureTimestamp": 1565841879,
                  "code_signature": "v/kWwu8MBe1GGSxK64a3OqKynmKpGJYGlylUMT0asJ+ZHiuonlDAl2igzISRqgMuPWJf/HqCxvAbxuAMxq+YCg==",
                  "creationTimestamp": 1565841879,
                  "isActive": true,
                  "label": "stronghold-5",
                  "lastUpdateTimestamp": 1565842668,
                },
              },
              "exec_order": 0,
              "id": 1,
              "publish_on": "on_start",
              "title_envs": Array [
                1,
              ],
              "type": "ae",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
            Object {
              "activity": Object {
                "deploy": Array [
                  Object {
                    "build_uid": "e36576c1fb46e4d60c9ccf1cb5ae2f01dfcd96c6e226b424c715aec84155bd9b",
                    "target_name": "uidev:dev(mp)",
                    "uid": "tp_deployment_1",
                  },
                ],
                "modify": Array [
                  Object {
                    "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa3",
                    "uid": "modify_1",
                    "user_params": Object {},
                  },
                ],
                "undeploy": Array [
                  Object {
                    "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa2",
                    "uid": "undeploy_1",
                  },
                ],
              },
              "exec_order": 0,
              "id": 2,
              "publish_on": "on_start",
              "title_envs": Array [
                1,
              ],
              "type": "tp_deployment",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
          ],
          "authorizations": Array [],
          "authorizers": Array [],
          "auto_tags": Array [
            "PS4",
          ],
          "created_at": 1560983839,
          "created_by": Object {
            "id": 1,
            "name": "Initial User",
          },
          "end_at": 1561243001,
          "env_type": "Development",
          "event_type": "event-manager",
          "id": 2,
          "is_schedule": false,
          "locked_by": 1,
          "manual_tags": Array [
            "PS4",
          ],
          "note": "testing notes",
          "platforms": Array [
            "PS",
          ],
          "project": 1,
          "publish_at": 1561057200,
          "status": "open",
          "task": null,
          "title": "Test Event",
          "updated_at": 1560985103,
          "updated_by": Object {
            "id": 1,
            "name": "Initial User",
          },
        },
        "loading": false,
      }
    }
    eventData={Object {}}
    eventId={2}
    eventUrl="/event-manager/3/events/2"
    failedProgress={[MockFunction]}
    fetchContexts={[MockFunction]}
    fileDetailsFetch={[MockFunction]}
    files={
      Object {
        "3": Object {
          "X-Progress-ID": 1563392198,
          "comment": "",
          "context": "1",
          "download": false,
          "filename": "test.txt",
          "id": 3,
          "progress": 0,
          "remoteFilename": "test.txt",
          "size": "5 bytes",
          "title": "",
        },
      }
    }
    handleSetPrimaryTab={[MockFunction]}
    handleSetSecondaryTab={[MockFunction]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    inProgress={false}
    isEventManagerEvent={true}
    isLoadingEventsPage={false}
    loadDiscussion={[MockFunction]}
    loadEvent={[MockFunction]}
    noTitleSelected={false}
    onCloseRequestErrorDialog={[MockFunction]}
    onDeleteEvent={[MockFunction]}
    onSave={[MockFunction]}
    onUpdate={[MockFunction]}
    permissions={
      Object {
        "achievementWritePermission": true,
        "adminPermission": true,
        "eventWritePermission": true,
        "publisherObjectsWritePermission": true,
        "pubstorageWritePermission": true,
        "pubvarsWritePermission": true,
        "pyscriptWritePermission": true,
        "staffUser": true,
        "tpDeploymentWritePermission": true,
        "wipPermission": true,
      }
    }
    primaryTab="details"
    removeFile={[MockFunction]}
    requestErrorDialogOpen={
      Object {
        "open": false,
      }
    }
    saveEdit={[MockFunction]}
    secondaryTab="tasks"
    selectedActivity={
      Object {
        "activity": Object {
          "files": Array [
            3,
          ],
        },
        "id": 50,
        "title_envs": Array [
          1,
        ],
        "type": "pubstorage",
      }
    }
    selectedItemId="12"
    selectedTab="activities"
    selectedTitle={
      Object {
        "id": 3,
      }
    }
    setInProgress={[MockFunction]}
    setNewestFileDetails={[MockFunction]}
    status={
      Object {
        "allowAuths": true,
        "canCancel": true,
        "canDelete": true,
        "canOpen": false,
        "failed": false,
        "locked": false,
        "name": "Open",
        "readOnly": false,
        "showAuths": false,
        "showTemplates": true,
      }
    }
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    tabUrl="/event-manager/3/events/2/activities"
    titles={
      Array [
        Object {
          "env": Object {
            "id": 3,
          },
          "environments": Array [
            Object {
              "id": 3,
            },
          ],
          "id": 3,
          "name": "mw2-PS3",
        },
        Object {
          "env": Object {
            "id": 5,
          },
          "environments": Array [
            Object {
              "id": 5,
            },
          ],
          "id": 4,
          "name": "mw2-XBOX1",
        },
      ]
    }
    type="dropzone"
    updateFile={[MockFunction]}
    updateProgress={[MockFunction]}
    updateUserProfileSetting={[MockFunction]}
    uploadDisabled={false}
    uploadFile={[MockFunction]}
    uploadFileAction={[Function]}
    uploadProgress={Object {}}
    uploadProgressFetch={[Function]}
    user={
      Object {
        "actions": Object {
          "createUserProfileSetting": [MockFunction],
          "updateUserProfileSetting": [MockFunction],
        },
      }
    }
  >
    <UploadFileStateless
      activitySettings={
        Array [
          Object {
            "allow_duplication": true,
            "allow_multi_titles": true,
            "allow_revert": false,
            "context": Object {
              "is_enabled": false,
              "type": "title",
            },
            "enabled": false,
            "name": "Message of The Day",
            "type": "motd",
          },
          Object {
            "allow_duplication": true,
            "allow_multi_titles": true,
            "allow_revert": false,
            "context": Object {
              "is_enabled": false,
              "type": "title",
            },
            "enabled": false,
            "name": "Playlists",
            "type": "playlist",
          },
          Object {
            "allow_duplication": true,
            "allow_multi_titles": false,
            "allow_revert": true,
            "context": Object {
              "is_enabled": false,
              "type": "title",
            },
            "enabled": true,
            "name": "Publisher Variables",
            "type": "pubvars",
            "variable_mapping": Object {
              "LKKNORQKTP": "mp_xp_mult_scale",
              "MSTMLNKSSO": "mp_weapon_xp",
            },
          },
          Object {
            "allow_duplication": false,
            "allow_multi_titles": false,
            "allow_revert": true,
            "context": Object {
              "is_enabled": false,
              "type": "title",
            },
            "enabled": true,
            "name": "Publisher Storage",
            "type": "pubstorage",
          },
          Object {
            "allow_duplication": true,
            "allow_multi_titles": false,
            "allow_revert": true,
            "context": Object {
              "is_enabled": false,
              "type": "title",
            },
            "enabled": true,
            "name": "Python Script",
            "type": "pyscript",
          },
          Object {
            "allow_duplication": true,
            "allow_multi_titles": false,
            "allow_revert": true,
            "context": Object {
              "is_enabled": true,
              "type": "title",
            },
            "enabled": true,
            "name": "Achievements Engine",
            "type": "ae",
          },
          Object {
            "allow_duplication": true,
            "allow_multi_titles": false,
            "allow_revert": true,
            "context": Object {
              "is_enabled": true,
              "type": "title",
            },
            "enabled": true,
            "name": "Publisher Objects",
            "type": "publisher_objects",
          },
        ]
      }
      agGridProps={
        Object {
          "columnDefs": [MockFunction],
          "noRowsLocked": "<div />",
          "noRowsUnlocked": "<div />",
        }
      }
      allowDetachedEvents={false}
      allowMultiTitles={true}
      badgeCount={
        Object {
          "discussion": 2,
          "tasks": 0,
        }
      }
      baseUrl="/event-manager/3/"
      changeMainTab={[MockFunction]}
      classes={Object {}}
      conflicts={Array []}
      contextsData={
        Array [
          "1",
          "test",
          "another",
        ]
      }
      currentProject={
        Object {
          "contentTypeId": 19,
          "id": 1,
          "name": "GTR Project",
          "titles": Array [
            Object {
              "environments": Array [
                Object {
                  "contentTypeId": 8,
                  "id": 2,
                  "shortType": "cert",
                  "type": "Certification",
                  "usesABTesting": true,
                  "usesAE": true,
                  "usesAsyncMMP": false,
                  "usesLegacyStore": false,
                  "usesMarketplace": true,
                  "usesObjectStore": true,
                },
                Object {
                  "contentTypeId": 8,
                  "id": 1,
                  "shortType": "dev",
                  "type": "Development",
                  "usesABTesting": true,
                  "usesAE": true,
                  "usesAsyncMMP": false,
                  "usesLegacyStore": false,
                  "usesMarketplace": true,
                  "usesObjectStore": true,
                },
              ],
              "id": 1,
              "name": "GTR-PS3",
              "platform": "PS3",
            },
          ],
        }
      }
      currentUser={
        Object {
          "id": 1,
          "name": "Initial User",
        }
      }
      customComponent={null}
      dateTime={[MockFunction]}
      deleteEvent={[MockFunction]}
      disabled={false}
      downloadFile={[MockFunction]}
      editAuths={[MockFunction]}
      editEvent={[MockFunction]}
      event={
        Object {
          "data": Object {
            "activities": Array [
              Object {
                "activity": Object {
                  "inputs": Array [
                    Object {
                      "language": "sp",
                      "text": "Hola Amigo :D",
                    },
                  ],
                },
                "exec_order": 0,
                "id": 13,
                "publish_on": "on_start",
                "title_envs": Array [
                  1,
                ],
                "type": "motd",
                "updated_by": Object {
                  "id": 1,
                  "name": "Initial User",
                },
              },
              Object {
                "activity": Object {
                  "inputs": Array [
                    Object {
                      "key": "weapon_type",
                      "value": "Gun",
                    },
                    Object {
                      "key": "attachment_icons",
                      "value": Array [],
                    },
                    Object {
                      "key": "invalid",
                      "value": "test",
                    },
                  ],
                  "name": "Double XP",
                  "template_id": "double_xp",
                  "version": "v1.0.4",
                },
                "exec_order": 1,
                "id": 12,
                "publish_on": "on_start",
                "title_envs": Array [
                  4,
                ],
                "type": "pyscript",
                "updated_by": Object {
                  "id": 1,
                  "name": "Initial User",
                },
              },
              Object {
                "activity": Object {
                  "ruleset_to_activate": Object {
                    "activationTimestamp": null,
                    "code": "idiwoq03292kj4lsl",
                    "codeHash": "4mhdBfYBdYmeco1ve62h0b6rue8=",
                    "codeSignatureTimestamp": 1565841879,
                    "code_signature": "v/kWwu8MBe1GGSxK64a3OqKynmKpGJYGlylUMT0asJ+ZHiuonlDAl2igzISRqgMuPWJf/HqCxvAbxuAMxq+YCg==",
                    "creationTimestamp": 1565841879,
                    "isActive": true,
                    "label": "stronghold-5",
                    "lastUpdateTimestamp": 1565842668,
                  },
                },
                "exec_order": 0,
                "id": 1,
                "publish_on": "on_start",
                "title_envs": Array [
                  1,
                ],
                "type": "ae",
                "updated_by": Object {
                  "id": 1,
                  "name": "Initial User",
                },
              },
              Object {
                "activity": Object {
                  "deploy": Array [
                    Object {
                      "build_uid": "e36576c1fb46e4d60c9ccf1cb5ae2f01dfcd96c6e226b424c715aec84155bd9b",
                      "target_name": "uidev:dev(mp)",
                      "uid": "tp_deployment_1",
                    },
                  ],
                  "modify": Array [
                    Object {
                      "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa3",
                      "uid": "modify_1",
                      "user_params": Object {},
                    },
                  ],
                  "undeploy": Array [
                    Object {
                      "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa2",
                      "uid": "undeploy_1",
                    },
                  ],
                },
                "exec_order": 0,
                "id": 2,
                "publish_on": "on_start",
                "title_envs": Array [
                  1,
                ],
                "type": "tp_deployment",
                "updated_by": Object {
                  "id": 1,
                  "name": "Initial User",
                },
              },
            ],
            "authorizations": Array [],
            "authorizers": Array [],
            "auto_tags": Array [
              "PS4",
            ],
            "created_at": 1560983839,
            "created_by": Object {
              "id": 1,
              "name": "Initial User",
            },
            "end_at": 1561243001,
            "env_type": "Development",
            "event_type": "event-manager",
            "id": 2,
            "is_schedule": false,
            "locked_by": 1,
            "manual_tags": Array [
              "PS4",
            ],
            "note": "testing notes",
            "platforms": Array [
              "PS",
            ],
            "project": 1,
            "publish_at": 1561057200,
            "status": "open",
            "task": null,
            "title": "Test Event",
            "updated_at": 1560985103,
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          "loading": false,
        }
      }
      eventData={Object {}}
      eventId={2}
      eventUrl="/event-manager/3/events/2"
      failedProgress={[MockFunction]}
      fetchContexts={[MockFunction]}
      fileDetailsFetch={[MockFunction]}
      files={
        Object {
          "3": Object {
            "X-Progress-ID": 1563392198,
            "comment": "",
            "context": "1",
            "download": false,
            "filename": "test.txt",
            "id": 3,
            "progress": 0,
            "remoteFilename": "test.txt",
            "size": "5 bytes",
            "title": "",
          },
        }
      }
      handleSetPrimaryTab={[MockFunction]}
      handleSetSecondaryTab={[MockFunction]}
      history={
        Object {
          "push": [MockFunction],
        }
      }
      inProgress={false}
      isEventManagerEvent={true}
      isLoadingEventsPage={false}
      loadDiscussion={[MockFunction]}
      loadEvent={[MockFunction]}
      noTitleSelected={false}
      onCloseRequestErrorDialog={[MockFunction]}
      onDeleteEvent={[MockFunction]}
      onDrop={[Function]}
      onFileUploadButton={[Function]}
      onSave={[MockFunction]}
      onUpdate={[MockFunction]}
      permissions={
        Object {
          "achievementWritePermission": true,
          "adminPermission": true,
          "eventWritePermission": true,
          "publisherObjectsWritePermission": true,
          "pubstorageWritePermission": true,
          "pubvarsWritePermission": true,
          "pyscriptWritePermission": true,
          "staffUser": true,
          "tpDeploymentWritePermission": true,
          "wipPermission": true,
        }
      }
      primaryTab="details"
      removeFile={[MockFunction]}
      requestErrorDialogOpen={
        Object {
          "open": false,
        }
      }
      saveEdit={[MockFunction]}
      secondaryTab="tasks"
      selectedActivity={
        Object {
          "activity": Object {
            "files": Array [
              3,
            ],
          },
          "id": 50,
          "title_envs": Array [
            1,
          ],
          "type": "pubstorage",
        }
      }
      selectedItemId="12"
      selectedTab="activities"
      selectedTitle={
        Object {
          "id": 3,
        }
      }
      setInProgress={[MockFunction]}
      setNewestFileDetails={[MockFunction]}
      status={
        Object {
          "allowAuths": true,
          "canCancel": true,
          "canDelete": true,
          "canOpen": false,
          "failed": false,
          "locked": false,
          "name": "Open",
          "readOnly": false,
          "showAuths": false,
          "showTemplates": true,
        }
      }
      store={
        Object {
          "@@observable": [Function],
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
      tabUrl="/event-manager/3/events/2/activities"
      titles={
        Array [
          Object {
            "env": Object {
              "id": 3,
            },
            "environments": Array [
              Object {
                "id": 3,
              },
            ],
            "id": 3,
            "name": "mw2-PS3",
          },
          Object {
            "env": Object {
              "id": 5,
            },
            "environments": Array [
              Object {
                "id": 5,
              },
            ],
            "id": 4,
            "name": "mw2-XBOX1",
          },
        ]
      }
      type="dropzone"
      updateFile={[MockFunction]}
      updateProgress={[MockFunction]}
      updateUserProfileSetting={[MockFunction]}
      uploadDisabled={false}
      uploadFile={[MockFunction]}
      uploadFileAction={[Function]}
      uploadProgress={Object {}}
      uploadProgressFetch={[Function]}
      user={
        Object {
          "actions": Object {
            "createUserProfileSetting": [MockFunction],
            "updateUserProfileSetting": [MockFunction],
          },
        }
      }
    >
      <n
        acceptStyle={
          Object {
            "backgroundColor": "#aae0f7",
            "borderColor": "#eee424",
            "borderStyle": "solid",
            "borderWidth": "3px",
          }
        }
        className="agGridLayout"
        data-cy="fileInputDropzone"
        disableClick={true}
        disabled={false}
        getDataTransferItems={[Function]}
        inputProps={Object {}}
        maxSize={Infinity}
        minSize={0}
        multiple={false}
        onDrop={[Function]}
        preventDropOnDocument={true}
      >
        <div
          aria-disabled={false}
          className="agGridLayout"
          data-cy="fileInputDropzone"
          onClick={[Function]}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDragStart={[Function]}
          onDrop={[Function]}
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <input
            autoComplete="off"
            disabled={false}
            multiple={false}
            onChange={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 0.00001,
                "pointerEvents": "none",
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
            type="file"
          />
        </div>
      </n>
    </UploadFileStateless>
  </UploadFile>
</Connect(UploadFile)>
`;
