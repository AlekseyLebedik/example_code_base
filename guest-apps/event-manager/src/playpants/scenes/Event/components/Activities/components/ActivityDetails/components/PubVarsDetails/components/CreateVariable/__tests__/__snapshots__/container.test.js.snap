// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateActivityFormBase renders the CreateVariable container correctly 1`] = `
<CreateVariable
  activitySettings={
    Array [
      Object {
        "allow_duplication": true,
        "allow_multi_titles": true,
        "allow_revert": false,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": false,
        "name": "Message of The Day",
        "type": "motd",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": true,
        "allow_revert": false,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": false,
        "name": "Playlists",
        "type": "playlist",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": true,
        "name": "Publisher Variables",
        "type": "pubvars",
        "variable_mapping": Object {
          "LKKNORQKTP": "mp_xp_mult_scale",
          "MSTMLNKSSO": "mp_weapon_xp",
        },
      },
      Object {
        "allow_duplication": false,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": true,
        "name": "Publisher Storage",
        "type": "pubstorage",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": false,
          "type": "title",
        },
        "enabled": true,
        "name": "Python Script",
        "type": "pyscript",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": true,
          "type": "title",
        },
        "enabled": true,
        "name": "Achievements Engine",
        "type": "ae",
      },
      Object {
        "allow_duplication": true,
        "allow_multi_titles": false,
        "allow_revert": true,
        "context": Object {
          "is_enabled": true,
          "type": "title",
        },
        "enabled": true,
        "name": "Publisher Objects",
        "type": "publisher_objects",
      },
    ]
  }
  allowDetachedEvents={false}
  allowMultiTitles={false}
  badgeCount={
    Object {
      "discussion": 2,
      "tasks": 0,
    }
  }
  baseUrl="/event-manager/3/"
  changeMainTab={[MockFunction]}
  classes={Object {}}
  clearVariable={[MockFunction]}
  conflicts={Array []}
  contextsData={
    Array [
      "1",
      "test",
      "another",
    ]
  }
  createVariable={[MockFunction]}
  currentUser={
    Object {
      "id": 1,
      "name": "Initial User",
    }
  }
  dateTime={[MockFunction]}
  deleteEvent={[MockFunction]}
  disabled={false}
  downloadFile={[MockFunction]}
  editAuths={[MockFunction]}
  editEvent={[MockFunction]}
  event={
    Object {
      "data": Object {
        "activities": Array [
          Object {
            "activity": Object {
              "inputs": Array [
                Object {
                  "language": "sp",
                  "text": "Hola Amigo :D",
                },
              ],
            },
            "exec_order": 0,
            "id": 13,
            "publish_on": "on_start",
            "title_envs": Array [
              1,
            ],
            "type": "motd",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          Object {
            "activity": Object {
              "inputs": Array [
                Object {
                  "key": "weapon_type",
                  "value": "Gun",
                },
                Object {
                  "key": "attachment_icons",
                  "value": Array [],
                },
                Object {
                  "key": "invalid",
                  "value": "test",
                },
              ],
              "name": "Double XP",
              "template_id": "double_xp",
              "version": "v1.0.4",
            },
            "exec_order": 1,
            "id": 12,
            "publish_on": "on_start",
            "title_envs": Array [
              4,
            ],
            "type": "pyscript",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          Object {
            "activity": Object {
              "ruleset_to_activate": Object {
                "activationTimestamp": null,
                "code": "idiwoq03292kj4lsl",
                "codeHash": "4mhdBfYBdYmeco1ve62h0b6rue8=",
                "codeSignatureTimestamp": 1565841879,
                "code_signature": "v/kWwu8MBe1GGSxK64a3OqKynmKpGJYGlylUMT0asJ+ZHiuonlDAl2igzISRqgMuPWJf/HqCxvAbxuAMxq+YCg==",
                "creationTimestamp": 1565841879,
                "isActive": true,
                "label": "stronghold-5",
                "lastUpdateTimestamp": 1565842668,
              },
            },
            "exec_order": 0,
            "id": 1,
            "publish_on": "on_start",
            "title_envs": Array [
              1,
            ],
            "type": "ae",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
          Object {
            "activity": Object {
              "deploy": Array [
                Object {
                  "build_uid": "e36576c1fb46e4d60c9ccf1cb5ae2f01dfcd96c6e226b424c715aec84155bd9b",
                  "target_name": "uidev:dev(mp)",
                  "uid": "tp_deployment_1",
                },
              ],
              "modify": Array [
                Object {
                  "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa3",
                  "uid": "modify_1",
                  "user_params": Object {},
                },
              ],
              "undeploy": Array [
                Object {
                  "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa2",
                  "uid": "undeploy_1",
                },
              ],
            },
            "exec_order": 0,
            "id": 2,
            "publish_on": "on_start",
            "title_envs": Array [
              1,
            ],
            "type": "tp_deployment",
            "updated_by": Object {
              "id": 1,
              "name": "Initial User",
            },
          },
        ],
        "authorizations": Array [],
        "authorizers": Array [],
        "auto_tags": Array [
          "PS4",
        ],
        "created_at": 1560983839,
        "created_by": Object {
          "id": 1,
          "name": "Initial User",
        },
        "end_at": 1561243001,
        "env_type": "Development",
        "event_type": "event-manager",
        "id": 2,
        "is_schedule": false,
        "locked_by": 1,
        "manual_tags": Array [
          "PS4",
        ],
        "note": "testing notes",
        "platforms": Array [
          "PS",
        ],
        "project": 1,
        "publish_at": 1561057200,
        "status": "open",
        "task": null,
        "title": "Test Event",
        "updated_at": 1560985103,
        "updated_by": Object {
          "id": 1,
          "name": "Initial User",
        },
      },
      "loading": false,
    }
  }
  eventData={Object {}}
  eventId={2}
  eventUrl="/event-manager/3/events/2"
  fileDetailsFetch={[MockFunction]}
  filterNamespaces={[MockFunction]}
  filterValues={
    Object {
      "context": Array [
        "1",
      ],
      "group_id": Array [
        "1",
      ],
      "namespace": Array [
        "Namespace1",
      ],
    }
  }
  getPubVars={[MockFunction]}
  handleSetPrimaryTab={[MockFunction]}
  handleSetSecondaryTab={[MockFunction]}
  hasChanges={false}
  hideChangedVarSets={true}
  history={
    Object {
      "push": [MockFunction],
    }
  }
  isEventManagerEvent={true}
  isLoadingEventsPage={false}
  loadDiscussion={[MockFunction]}
  loadEvent={[MockFunction]}
  modifyVariable={[MockFunction]}
  noTitleSelected={false}
  onCloseRequestErrorDialog={[MockFunction]}
  onDeleteEvent={[MockFunction]}
  onSave={[MockFunction]}
  onSaveActivity={[MockFunction]}
  onUpdate={[MockFunction]}
  permissions={
    Object {
      "achievementWritePermission": true,
      "adminPermission": true,
      "eventWritePermission": true,
      "publisherObjectsWritePermission": true,
      "pubstorageWritePermission": true,
      "pubvarsWritePermission": true,
      "pyscriptWritePermission": true,
      "staffUser": true,
      "tpDeploymentWritePermission": true,
      "wipPermission": true,
    }
  }
  primaryTab="details"
  pubVarsActivity={
    Object {
      "activity": Object {
        "variable_sets": Array [
          Object {
            "context": "1",
            "group_id": "1",
            "is_major_update": false,
            "liveVariables": Object {
              "test": "var1",
            },
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace1",
            "oldVariables": Object {
              "test": "var1",
            },
            "variables": Object {
              "test": "var1",
            },
          },
          Object {
            "context": "1",
            "group_id": "2",
            "is_major_update": false,
            "liveVariables": Object {
              "test": "var1",
            },
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace2",
            "oldVariables": Object {
              "test": "var1",
            },
            "variables": Object {},
          },
          Object {
            "context": "1",
            "group_id": "1",
            "is_major_update": false,
            "liveVariables": Object {},
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace3",
            "oldVariables": Object {},
            "variables": Object {
              "test": "var1",
            },
          },
          Object {
            "context": "1",
            "group_id": "2",
            "is_major_update": false,
            "liveVariables": Object {
              "test": "var1",
            },
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace4",
            "oldVariables": Object {
              "test": "var1",
            },
            "variables": Object {
              "test": "var1",
              "test2": "var2",
            },
          },
        ],
      },
    }
  }
  removeFile={[MockFunction]}
  requestErrorDialogOpen={
    Object {
      "open": false,
    }
  }
  saveEdit={[MockFunction]}
  secondaryTab="tasks"
  selectedActivity={
    Object {
      "activity": Object {
        "id": 51,
        "title_envs": Array [],
        "type": "pubvars",
        "variable_sets": Array [
          Object {
            "context": "1",
            "group_id": "1",
            "is_major_update": false,
            "liveVariables": Object {
              "test": "var1",
            },
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace1",
            "oldVariables": Object {
              "test": "var1",
            },
            "variables": Object {
              "test": "var1",
            },
          },
          Object {
            "context": "1",
            "group_id": "2",
            "is_major_update": false,
            "liveVariables": Object {
              "test": "var1",
            },
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace2",
            "oldVariables": Object {
              "test": "var1",
            },
            "variables": Object {},
          },
          Object {
            "context": "1",
            "group_id": "1",
            "is_major_update": false,
            "liveVariables": Object {},
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace3",
            "oldVariables": Object {},
            "variables": Object {
              "test": "var1",
            },
          },
          Object {
            "context": "1",
            "group_id": "2",
            "is_major_update": false,
            "liveVariables": Object {
              "test": "var1",
            },
            "major_version": 1,
            "minor_version": 1,
            "namespace": "Namespace4",
            "oldVariables": Object {
              "test": "var1",
            },
            "variables": Object {
              "test": "var1",
              "test2": "var2",
            },
          },
        ],
      },
      "title_envs": Array [],
    }
  }
  selectedItemId="12"
  selectedNamespace={
    Object {
      "context": "1",
      "group_id": "1",
      "is_major_update": false,
      "liveVariables": Object {
        "test": "var1",
      },
      "major_version": 1,
      "minor_version": 1,
      "namespace": "Namespace1",
      "oldVariables": Object {
        "test": "var1",
      },
      "variables": Object {
        "test": "var1",
      },
    }
  }
  selectedTab="activities"
  selectedTitle={
    Object {
      "id": 3,
    }
  }
  selectedValues={
    Object {
      "context": "",
      "group_id": "",
      "namespace": "",
    }
  }
  status={
    Object {
      "allowAuths": true,
      "canCancel": true,
      "canDelete": true,
      "canOpen": false,
      "failed": false,
      "locked": false,
      "name": "Open",
      "readOnly": false,
      "showAuths": false,
      "showTemplates": true,
    }
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  tabUrl="/event-manager/3/events/2/activities"
  titles={
    Array [
      Object {
        "env": Object {
          "id": 3,
        },
        "environments": Array [
          Object {
            "id": 3,
          },
        ],
        "id": 3,
        "name": "mw2-PS3",
      },
      Object {
        "env": Object {
          "id": 5,
        },
        "environments": Array [
          Object {
            "id": 5,
          },
        ],
        "id": 4,
        "name": "mw2-XBOX1",
      },
    ]
  }
  toggleChangedVarSets={[MockFunction]}
  updateFile={[MockFunction]}
  updateSelectedActivity={[MockFunction]}
  updateSelectedValues={[MockFunction]}
  updateUserProfileSetting={[MockFunction]}
  uploadFileAction={[MockFunction]}
  uploadProgress={
    Object {
      "1563392198": Object {
        "received": 776,
        "size": 776,
      },
    }
  }
  uploadProgressFetch={[MockFunction]}
  user={
    Object {
      "actions": Object {
        "createUserProfileSetting": [MockFunction],
        "updateUserProfileSetting": [MockFunction],
      },
    }
  }
  variableSets={
    Array [
      Object {
        "context": "1",
        "group_id": "1",
        "is_major_update": false,
        "liveVariables": Object {
          "test": "var1",
        },
        "major_version": 1,
        "minor_version": 1,
        "namespace": "Namespace1",
        "oldVariables": Object {
          "test": "var1",
        },
        "variables": Object {
          "test": "var1",
        },
      },
      Object {
        "context": "1",
        "group_id": "2",
        "is_major_update": false,
        "liveVariables": Object {
          "test": "var1",
        },
        "major_version": 1,
        "minor_version": 1,
        "namespace": "Namespace2",
        "oldVariables": Object {
          "test": "var1",
        },
        "variables": Object {},
      },
      Object {
        "context": "1",
        "group_id": "1",
        "is_major_update": false,
        "liveVariables": Object {},
        "major_version": 1,
        "minor_version": 1,
        "namespace": "Namespace3",
        "oldVariables": Object {},
        "variables": Object {
          "test": "var1",
        },
      },
      Object {
        "context": "1",
        "group_id": "2",
        "is_major_update": false,
        "liveVariables": Object {
          "test": "var1",
        },
        "major_version": 1,
        "minor_version": 1,
        "namespace": "Namespace4",
        "oldVariables": Object {
          "test": "var1",
        },
        "variables": Object {
          "test": "var1",
          "test2": "var2",
        },
      },
    ]
  }
>
  <StatelessCreateVariable
    activitySettings={
      Array [
        Object {
          "allow_duplication": true,
          "allow_multi_titles": true,
          "allow_revert": false,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": false,
          "name": "Message of The Day",
          "type": "motd",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": true,
          "allow_revert": false,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": false,
          "name": "Playlists",
          "type": "playlist",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": true,
          "name": "Publisher Variables",
          "type": "pubvars",
          "variable_mapping": Object {
            "LKKNORQKTP": "mp_xp_mult_scale",
            "MSTMLNKSSO": "mp_weapon_xp",
          },
        },
        Object {
          "allow_duplication": false,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": true,
          "name": "Publisher Storage",
          "type": "pubstorage",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": false,
            "type": "title",
          },
          "enabled": true,
          "name": "Python Script",
          "type": "pyscript",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": true,
            "type": "title",
          },
          "enabled": true,
          "name": "Achievements Engine",
          "type": "ae",
        },
        Object {
          "allow_duplication": true,
          "allow_multi_titles": false,
          "allow_revert": true,
          "context": Object {
            "is_enabled": true,
            "type": "title",
          },
          "enabled": true,
          "name": "Publisher Objects",
          "type": "publisher_objects",
        },
      ]
    }
    addVariable={[Function]}
    allowDetachedEvents={false}
    allowMultiTitles={false}
    badgeCount={
      Object {
        "discussion": 2,
        "tasks": 0,
      }
    }
    baseUrl="/event-manager/3/"
    changeMainTab={[MockFunction]}
    classes={Object {}}
    clearVariable={[MockFunction]}
    clearVariableAddDialog={[Function]}
    conflicts={Array []}
    contextsData={
      Array [
        "1",
        "test",
        "another",
      ]
    }
    createVariable={[MockFunction]}
    currentUser={
      Object {
        "id": 1,
        "name": "Initial User",
      }
    }
    dateTime={[MockFunction]}
    deleteEvent={[MockFunction]}
    disabled={false}
    downloadFile={[MockFunction]}
    editAuths={[MockFunction]}
    editEvent={[MockFunction]}
    event={
      Object {
        "data": Object {
          "activities": Array [
            Object {
              "activity": Object {
                "inputs": Array [
                  Object {
                    "language": "sp",
                    "text": "Hola Amigo :D",
                  },
                ],
              },
              "exec_order": 0,
              "id": 13,
              "publish_on": "on_start",
              "title_envs": Array [
                1,
              ],
              "type": "motd",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
            Object {
              "activity": Object {
                "inputs": Array [
                  Object {
                    "key": "weapon_type",
                    "value": "Gun",
                  },
                  Object {
                    "key": "attachment_icons",
                    "value": Array [],
                  },
                  Object {
                    "key": "invalid",
                    "value": "test",
                  },
                ],
                "name": "Double XP",
                "template_id": "double_xp",
                "version": "v1.0.4",
              },
              "exec_order": 1,
              "id": 12,
              "publish_on": "on_start",
              "title_envs": Array [
                4,
              ],
              "type": "pyscript",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
            Object {
              "activity": Object {
                "ruleset_to_activate": Object {
                  "activationTimestamp": null,
                  "code": "idiwoq03292kj4lsl",
                  "codeHash": "4mhdBfYBdYmeco1ve62h0b6rue8=",
                  "codeSignatureTimestamp": 1565841879,
                  "code_signature": "v/kWwu8MBe1GGSxK64a3OqKynmKpGJYGlylUMT0asJ+ZHiuonlDAl2igzISRqgMuPWJf/HqCxvAbxuAMxq+YCg==",
                  "creationTimestamp": 1565841879,
                  "isActive": true,
                  "label": "stronghold-5",
                  "lastUpdateTimestamp": 1565842668,
                },
              },
              "exec_order": 0,
              "id": 1,
              "publish_on": "on_start",
              "title_envs": Array [
                1,
              ],
              "type": "ae",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
            Object {
              "activity": Object {
                "deploy": Array [
                  Object {
                    "build_uid": "e36576c1fb46e4d60c9ccf1cb5ae2f01dfcd96c6e226b424c715aec84155bd9b",
                    "target_name": "uidev:dev(mp)",
                    "uid": "tp_deployment_1",
                  },
                ],
                "modify": Array [
                  Object {
                    "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa3",
                    "uid": "modify_1",
                    "user_params": Object {},
                  },
                ],
                "undeploy": Array [
                  Object {
                    "build_uid": "84fe6b23-9eef-4fcd-b350-cef71c228eaa2",
                    "uid": "undeploy_1",
                  },
                ],
              },
              "exec_order": 0,
              "id": 2,
              "publish_on": "on_start",
              "title_envs": Array [
                1,
              ],
              "type": "tp_deployment",
              "updated_by": Object {
                "id": 1,
                "name": "Initial User",
              },
            },
          ],
          "authorizations": Array [],
          "authorizers": Array [],
          "auto_tags": Array [
            "PS4",
          ],
          "created_at": 1560983839,
          "created_by": Object {
            "id": 1,
            "name": "Initial User",
          },
          "end_at": 1561243001,
          "env_type": "Development",
          "event_type": "event-manager",
          "id": 2,
          "is_schedule": false,
          "locked_by": 1,
          "manual_tags": Array [
            "PS4",
          ],
          "note": "testing notes",
          "platforms": Array [
            "PS",
          ],
          "project": 1,
          "publish_at": 1561057200,
          "status": "open",
          "task": null,
          "title": "Test Event",
          "updated_at": 1560985103,
          "updated_by": Object {
            "id": 1,
            "name": "Initial User",
          },
        },
        "loading": false,
      }
    }
    eventData={Object {}}
    eventId={2}
    eventUrl="/event-manager/3/events/2"
    fileDetailsFetch={[MockFunction]}
    filterNamespaces={[MockFunction]}
    filterValues={
      Object {
        "context": Array [
          "1",
        ],
        "group_id": Array [
          "1",
        ],
        "namespace": Array [
          "Namespace1",
        ],
      }
    }
    getPubVars={[MockFunction]}
    handleSetPrimaryTab={[MockFunction]}
    handleSetSecondaryTab={[MockFunction]}
    hasChanges={false}
    hideChangedVarSets={true}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    isEventManagerEvent={true}
    isLoadingEventsPage={false}
    loadDiscussion={[MockFunction]}
    loadEvent={[MockFunction]}
    modifyVariable={[MockFunction]}
    noTitleSelected={false}
    onCloseRequestErrorDialog={[MockFunction]}
    onDeleteEvent={[MockFunction]}
    onSave={[MockFunction]}
    onSaveActivity={[MockFunction]}
    onUpdate={[MockFunction]}
    open={false}
    permissions={
      Object {
        "achievementWritePermission": true,
        "adminPermission": true,
        "eventWritePermission": true,
        "publisherObjectsWritePermission": true,
        "pubstorageWritePermission": true,
        "pubvarsWritePermission": true,
        "pyscriptWritePermission": true,
        "staffUser": true,
        "tpDeploymentWritePermission": true,
        "wipPermission": true,
      }
    }
    primaryTab="details"
    pubVarsActivity={
      Object {
        "activity": Object {
          "variable_sets": Array [
            Object {
              "context": "1",
              "group_id": "1",
              "is_major_update": false,
              "liveVariables": Object {
                "test": "var1",
              },
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace1",
              "oldVariables": Object {
                "test": "var1",
              },
              "variables": Object {
                "test": "var1",
              },
            },
            Object {
              "context": "1",
              "group_id": "2",
              "is_major_update": false,
              "liveVariables": Object {
                "test": "var1",
              },
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace2",
              "oldVariables": Object {
                "test": "var1",
              },
              "variables": Object {},
            },
            Object {
              "context": "1",
              "group_id": "1",
              "is_major_update": false,
              "liveVariables": Object {},
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace3",
              "oldVariables": Object {},
              "variables": Object {
                "test": "var1",
              },
            },
            Object {
              "context": "1",
              "group_id": "2",
              "is_major_update": false,
              "liveVariables": Object {
                "test": "var1",
              },
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace4",
              "oldVariables": Object {
                "test": "var1",
              },
              "variables": Object {
                "test": "var1",
                "test2": "var2",
              },
            },
          ],
        },
      }
    }
    removeFile={[MockFunction]}
    requestErrorDialogOpen={
      Object {
        "open": false,
      }
    }
    saveEdit={[MockFunction]}
    secondaryTab="tasks"
    selectedActivity={
      Object {
        "activity": Object {
          "id": 51,
          "title_envs": Array [],
          "type": "pubvars",
          "variable_sets": Array [
            Object {
              "context": "1",
              "group_id": "1",
              "is_major_update": false,
              "liveVariables": Object {
                "test": "var1",
              },
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace1",
              "oldVariables": Object {
                "test": "var1",
              },
              "variables": Object {
                "test": "var1",
              },
            },
            Object {
              "context": "1",
              "group_id": "2",
              "is_major_update": false,
              "liveVariables": Object {
                "test": "var1",
              },
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace2",
              "oldVariables": Object {
                "test": "var1",
              },
              "variables": Object {},
            },
            Object {
              "context": "1",
              "group_id": "1",
              "is_major_update": false,
              "liveVariables": Object {},
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace3",
              "oldVariables": Object {},
              "variables": Object {
                "test": "var1",
              },
            },
            Object {
              "context": "1",
              "group_id": "2",
              "is_major_update": false,
              "liveVariables": Object {
                "test": "var1",
              },
              "major_version": 1,
              "minor_version": 1,
              "namespace": "Namespace4",
              "oldVariables": Object {
                "test": "var1",
              },
              "variables": Object {
                "test": "var1",
                "test2": "var2",
              },
            },
          ],
        },
        "title_envs": Array [],
      }
    }
    selectedItemId="12"
    selectedNamespace={
      Object {
        "context": "1",
        "group_id": "1",
        "is_major_update": false,
        "liveVariables": Object {
          "test": "var1",
        },
        "major_version": 1,
        "minor_version": 1,
        "namespace": "Namespace1",
        "oldVariables": Object {
          "test": "var1",
        },
        "variables": Object {
          "test": "var1",
        },
      }
    }
    selectedTab="activities"
    selectedTitle={
      Object {
        "id": 3,
      }
    }
    selectedValues={
      Object {
        "context": "",
        "group_id": "",
        "namespace": "",
      }
    }
    setOpen={[Function]}
    setValue={[Function]}
    setValueError={[Function]}
    setVarError={[Function]}
    setVariable={[Function]}
    status={
      Object {
        "allowAuths": true,
        "canCancel": true,
        "canDelete": true,
        "canOpen": false,
        "failed": false,
        "locked": false,
        "name": "Open",
        "readOnly": false,
        "showAuths": false,
        "showTemplates": true,
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    tabUrl="/event-manager/3/events/2/activities"
    titles={
      Array [
        Object {
          "env": Object {
            "id": 3,
          },
          "environments": Array [
            Object {
              "id": 3,
            },
          ],
          "id": 3,
          "name": "mw2-PS3",
        },
        Object {
          "env": Object {
            "id": 5,
          },
          "environments": Array [
            Object {
              "id": 5,
            },
          ],
          "id": 4,
          "name": "mw2-XBOX1",
        },
      ]
    }
    toggleChangedVarSets={[MockFunction]}
    updateFile={[MockFunction]}
    updateSelectedActivity={[MockFunction]}
    updateSelectedValues={[MockFunction]}
    updateUserProfileSetting={[MockFunction]}
    uploadFileAction={[MockFunction]}
    uploadProgress={
      Object {
        "1563392198": Object {
          "received": 776,
          "size": 776,
        },
      }
    }
    uploadProgressFetch={[MockFunction]}
    user={
      Object {
        "actions": Object {
          "createUserProfileSetting": [MockFunction],
          "updateUserProfileSetting": [MockFunction],
        },
      }
    }
    validateValue={[Function]}
    validateVariable={[Function]}
    value=""
    valueError={null}
    variable=""
    variableError={null}
    variableSets={
      Array [
        Object {
          "context": "1",
          "group_id": "1",
          "is_major_update": false,
          "liveVariables": Object {
            "test": "var1",
          },
          "major_version": 1,
          "minor_version": 1,
          "namespace": "Namespace1",
          "oldVariables": Object {
            "test": "var1",
          },
          "variables": Object {
            "test": "var1",
          },
        },
        Object {
          "context": "1",
          "group_id": "2",
          "is_major_update": false,
          "liveVariables": Object {
            "test": "var1",
          },
          "major_version": 1,
          "minor_version": 1,
          "namespace": "Namespace2",
          "oldVariables": Object {
            "test": "var1",
          },
          "variables": Object {},
        },
        Object {
          "context": "1",
          "group_id": "1",
          "is_major_update": false,
          "liveVariables": Object {},
          "major_version": 1,
          "minor_version": 1,
          "namespace": "Namespace3",
          "oldVariables": Object {},
          "variables": Object {
            "test": "var1",
          },
        },
        Object {
          "context": "1",
          "group_id": "2",
          "is_major_update": false,
          "liveVariables": Object {
            "test": "var1",
          },
          "major_version": 1,
          "minor_version": 1,
          "namespace": "Namespace4",
          "oldVariables": Object {
            "test": "var1",
          },
          "variables": Object {
            "test": "var1",
            "test2": "var2",
          },
        },
      ]
    }
  >
    <WithStyles(WrappedIcon)
      color="primary"
      icon="add_circle"
      onClick={[Function]}
      tooltip="Create Variable"
    >
      <WrappedIcon
        classes={
          Object {
            "colorPrimary": "WrappedIcon-colorPrimary-2",
            "colorSecondary": "WrappedIcon-colorSecondary-3",
            "root": "WrappedIcon-root-1",
          }
        }
        color="primary"
        icon="add_circle"
        onClick={[Function]}
        tooltip="Create Variable"
      >
        <WithStyles(ForwardRef(Tooltip))
          TransitionComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "disableStrictModeCompat": [Function],
                "in": [Function],
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "style": [Function],
                "timeout": [Function],
              },
              "render": [Function],
            }
          }
          title="Create Variable"
        >
          <ForwardRef(Tooltip)
            TransitionComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "disableStrictModeCompat": [Function],
                  "in": [Function],
                  "onEnter": [Function],
                  "onEntered": [Function],
                  "onEntering": [Function],
                  "onExit": [Function],
                  "onExited": [Function],
                  "onExiting": [Function],
                  "style": [Function],
                  "timeout": [Function],
                },
                "render": [Function],
              }
            }
            classes={
              Object {
                "arrow": "MuiTooltip-arrow",
                "popper": "MuiTooltip-popper",
                "popperArrow": "MuiTooltip-popperArrow",
                "popperInteractive": "MuiTooltip-popperInteractive",
                "tooltip": "MuiTooltip-tooltip",
                "tooltipArrow": "MuiTooltip-tooltipArrow",
                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                "touch": "MuiTooltip-touch",
              }
            }
            title="Create Variable"
          >
            <WithStyles(ForwardRef(IconButton))
              aria-describedby={null}
              className=""
              classes={
                Object {
                  "colorPrimary": "WrappedIcon-colorPrimary-2",
                  "colorSecondary": "WrappedIcon-colorSecondary-3",
                  "root": "WrappedIcon-root-1 undefined",
                }
              }
              color="primary"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseLeave={[Function]}
              onMouseOver={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              title="Create Variable"
              type="button"
            >
              <ForwardRef(IconButton)
                aria-describedby={null}
                className=""
                classes={
                  Object {
                    "colorInherit": "MuiIconButton-colorInherit",
                    "colorPrimary": "MuiIconButton-colorPrimary WrappedIcon-colorPrimary-2",
                    "colorSecondary": "MuiIconButton-colorSecondary WrappedIcon-colorSecondary-3",
                    "disabled": "Mui-disabled",
                    "edgeEnd": "MuiIconButton-edgeEnd",
                    "edgeStart": "MuiIconButton-edgeStart",
                    "label": "MuiIconButton-label",
                    "root": "MuiIconButton-root WrappedIcon-root-1 undefined",
                    "sizeSmall": "MuiIconButton-sizeSmall",
                  }
                }
                color="primary"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onMouseLeave={[Function]}
                onMouseOver={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                title="Create Variable"
                type="button"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  aria-describedby={null}
                  centerRipple={true}
                  className="MuiIconButton-root WrappedIcon-root-1 undefined MuiIconButton-colorPrimary WrappedIcon-colorPrimary-2"
                  disabled={false}
                  focusRipple={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseOver={[Function]}
                  onTouchEnd={[Function]}
                  onTouchStart={[Function]}
                  title="Create Variable"
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    aria-describedby={null}
                    centerRipple={true}
                    className="MuiIconButton-root WrappedIcon-root-1 undefined MuiIconButton-colorPrimary WrappedIcon-colorPrimary-2"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    disabled={false}
                    focusRipple={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseOver={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    title="Create Variable"
                    type="button"
                  >
                    <button
                      aria-describedby={null}
                      className="MuiButtonBase-root MuiIconButton-root WrappedIcon-root-1 undefined MuiIconButton-colorPrimary WrappedIcon-colorPrimary-2"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      title="Create Variable"
                      type="button"
                    >
                      <span
                        className="MuiIconButton-label"
                      >
                        <WithStyles(ForwardRef(Icon))>
                          <ForwardRef(Icon)
                            classes={
                              Object {
                                "colorAction": "MuiIcon-colorAction",
                                "colorDisabled": "MuiIcon-colorDisabled",
                                "colorError": "MuiIcon-colorError",
                                "colorPrimary": "MuiIcon-colorPrimary",
                                "colorSecondary": "MuiIcon-colorSecondary",
                                "fontSizeInherit": "MuiIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiIcon-fontSizeSmall",
                                "root": "MuiIcon-root",
                              }
                            }
                          >
                            <span
                              aria-hidden={true}
                              className="material-icons MuiIcon-root"
                            >
                              add_circle
                            </span>
                          </ForwardRef(Icon)>
                        </WithStyles(ForwardRef(Icon))>
                      </span>
                      <WithStyles(memo)
                        center={true}
                      >
                        <ForwardRef(TouchRipple)
                          center={true}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(IconButton)>
            </WithStyles(ForwardRef(IconButton))>
            <ForwardRef(Popper)
              anchorEl={
                <button
                  class="MuiButtonBase-root MuiIconButton-root WrappedIcon-root-1 undefined MuiIconButton-colorPrimary WrappedIcon-colorPrimary-2"
                  tabindex="0"
                  title="Create Variable"
                  type="button"
                >
                  <span
                    class="MuiIconButton-label"
                  >
                    <span
                      aria-hidden="true"
                      class="material-icons MuiIcon-root"
                    >
                      add_circle
                    </span>
                  </span>
                  <span
                    class="MuiTouchRipple-root"
                  />
                </button>
              }
              className="MuiTooltip-popper"
              id={null}
              open={false}
              placement="bottom"
              popperOptions={
                Object {
                  "modifiers": Object {
                    "arrow": Object {
                      "element": null,
                      "enabled": false,
                    },
                  },
                }
              }
              transition={true}
            />
          </ForwardRef(Tooltip)>
        </WithStyles(ForwardRef(Tooltip))>
      </WrappedIcon>
    </WithStyles(WrappedIcon)>
    <WithStyles(ForwardRef(Dialog))
      fullWidth={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Dialog)
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullWidth={true}
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root"
          closeAfterTransition={true}
          disableBackdropClick={false}
          disableEscapeKeyDown={false}
          onClose={[Function]}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </StatelessCreateVariable>
</CreateVariable>
`;
