// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventTypeField renders the Platforms component correctly 1`] = `
<EventTypeBase
  eventTypeName="PMG"
>
  <WithStyles(ForwardRef(TextField))
    disabled={true}
    fullWidth={true}
    label="Type"
    value="PMG"
  >
    <ForwardRef(TextField)
      classes={
        Object {
          "root": "MuiTextField-root",
        }
      }
      disabled={true}
      fullWidth={true}
      label="Type"
      value="PMG"
    >
      <WithStyles(ForwardRef(FormControl))
        className="MuiTextField-root"
        color="primary"
        disabled={true}
        error={false}
        fullWidth={true}
        required={false}
        variant="standard"
      >
        <ForwardRef(FormControl)
          className="MuiTextField-root"
          classes={
            Object {
              "fullWidth": "MuiFormControl-fullWidth",
              "marginDense": "MuiFormControl-marginDense",
              "marginNormal": "MuiFormControl-marginNormal",
              "root": "MuiFormControl-root",
            }
          }
          color="primary"
          disabled={true}
          error={false}
          fullWidth={true}
          required={false}
          variant="standard"
        >
          <div
            className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
          >
            <WithStyles(ForwardRef(InputLabel))>
              <ForwardRef(InputLabel)
                classes={
                  Object {
                    "animated": "MuiInputLabel-animated",
                    "asterisk": "MuiInputLabel-asterisk",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "filled": "MuiInputLabel-filled",
                    "focused": "Mui-focused",
                    "formControl": "MuiInputLabel-formControl",
                    "marginDense": "MuiInputLabel-marginDense",
                    "outlined": "MuiInputLabel-outlined",
                    "required": "Mui-required",
                    "root": "MuiInputLabel-root",
                    "shrink": "MuiInputLabel-shrink",
                  }
                }
              >
                <WithStyles(ForwardRef(FormLabel))
                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                  classes={
                    Object {
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "required": "Mui-required",
                    }
                  }
                  data-shrink={true}
                >
                  <ForwardRef(FormLabel)
                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                    classes={
                      Object {
                        "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                        "colorSecondary": "MuiFormLabel-colorSecondary",
                        "disabled": "Mui-disabled Mui-disabled",
                        "error": "Mui-error Mui-error",
                        "filled": "MuiFormLabel-filled",
                        "focused": "Mui-focused Mui-focused",
                        "required": "Mui-required Mui-required",
                        "root": "MuiFormLabel-root",
                      }
                    }
                    data-shrink={true}
                  >
                    <label
                      className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-disabled Mui-disabled MuiFormLabel-filled"
                      data-shrink={true}
                    >
                      Type
                    </label>
                  </ForwardRef(FormLabel)>
                </WithStyles(ForwardRef(FormLabel))>
              </ForwardRef(InputLabel)>
            </WithStyles(ForwardRef(InputLabel))>
            <WithStyles(ForwardRef(Input))
              autoFocus={false}
              fullWidth={true}
              multiline={false}
              value="PMG"
            >
              <ForwardRef(Input)
                autoFocus={false}
                classes={
                  Object {
                    "colorSecondary": "MuiInput-colorSecondary",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "focused": "Mui-focused",
                    "formControl": "MuiInput-formControl",
                    "fullWidth": "MuiInput-fullWidth",
                    "input": "MuiInput-input",
                    "inputMarginDense": "MuiInput-inputMarginDense",
                    "inputMultiline": "MuiInput-inputMultiline",
                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                    "marginDense": "MuiInput-marginDense",
                    "multiline": "MuiInput-multiline",
                    "root": "MuiInput-root",
                    "underline": "MuiInput-underline",
                  }
                }
                fullWidth={true}
                multiline={false}
                value="PMG"
              >
                <WithStyles(ForwardRef(InputBase))
                  autoFocus={false}
                  classes={
                    Object {
                      "colorSecondary": "MuiInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInput-formControl",
                      "fullWidth": "MuiInput-fullWidth",
                      "input": "MuiInput-input",
                      "inputMarginDense": "MuiInput-inputMarginDense",
                      "inputMultiline": "MuiInput-inputMultiline",
                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                      "marginDense": "MuiInput-marginDense",
                      "multiline": "MuiInput-multiline",
                      "root": "MuiInput-root MuiInput-underline",
                      "underline": null,
                    }
                  }
                  fullWidth={true}
                  inputComponent="input"
                  multiline={false}
                  type="text"
                  value="PMG"
                >
                  <ForwardRef(InputBase)
                    autoFocus={false}
                    classes={
                      Object {
                        "adornedEnd": "MuiInputBase-adornedEnd",
                        "adornedStart": "MuiInputBase-adornedStart",
                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                        "disabled": "Mui-disabled Mui-disabled",
                        "error": "Mui-error Mui-error",
                        "focused": "Mui-focused Mui-focused",
                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                        "input": "MuiInputBase-input MuiInput-input",
                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                      }
                    }
                    fullWidth={true}
                    inputComponent="input"
                    multiline={false}
                    type="text"
                    value="PMG"
                  >
                    <div
                      className="MuiInputBase-root MuiInput-root MuiInput-underline Mui-disabled Mui-disabled MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                      onClick={[Function]}
                    >
                      <input
                        aria-invalid={false}
                        autoFocus={false}
                        className="MuiInputBase-input MuiInput-input Mui-disabled Mui-disabled"
                        disabled={true}
                        onAnimationStart={[Function]}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        type="text"
                        value="PMG"
                      />
                    </div>
                  </ForwardRef(InputBase)>
                </WithStyles(ForwardRef(InputBase))>
              </ForwardRef(Input)>
            </WithStyles(ForwardRef(Input))>
          </div>
        </ForwardRef(FormControl)>
      </WithStyles(ForwardRef(FormControl))>
    </ForwardRef(TextField)>
  </WithStyles(ForwardRef(TextField))>
</EventTypeBase>
`;
