// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePickerFields component renders correctly 1`] = `
<DatePickerFields
  eventsCalendarSettings={
    Object {
      "customViewOn": false,
      "datePickerProps": Object {
        "disableDateSelection": [MockFunction] {
          "calls": Array [
            Array [
              true,
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "project": Object {
          "id": 1,
          "name": "Test Project",
        },
        "setEndDate": [MockFunction],
        "setEndValue": [MockFunction],
        "setEndValueError": [MockFunction],
        "setStartDate": [MockFunction],
        "setStartValue": [MockFunction],
        "setStartValueError": [MockFunction],
      },
      "displayView": "calendar",
      "envTypeFilters": Object {
        "Certification": true,
        "Development": true,
        "Live": true,
      },
      "eventTimeOffset": 0,
      "filters": Object {
        "customTags": Object {
          "unspecified": true,
          "userTags": Object {
            "0": Object {
              "checked": true,
              "tags": Array [
                "PS4",
                "XBOX",
              ],
            },
            "1": Object {
              "checked": true,
              "tags": Array [
                "COD",
                "BO4",
              ],
            },
          },
        },
        "environments": Object {
          "Certification": true,
          "Cross Environment": true,
          "Development": true,
          "Live": true,
        },
        "gamertags": Object {},
        "platforms": Object {
          "CROSSPLAY": true,
          "PC": true,
          "PS4": true,
          "SWITCH": true,
          "Unspecified": true,
          "XB1": true,
        },
        "projects": Object {
          "Call of Duty: Modern Warfare 2": true,
          "Cross Project": true,
          "GTR Project": true,
          "Permissions: Test 1": true,
        },
        "sources": Object {
          "abTesting": Object {
            "active": false,
            "analysis": false,
            "archived": false,
            "config": false,
            "killed": false,
          },
          "demonwareEvents": Object {
            "criticalEvents": true,
            "generalComments": true,
            "incidents": true,
            "maintenance": true,
          },
          "eventManager": Object {
            "applied": false,
            "approved": true,
            "cancelled": false,
            "expired": false,
            "pending": false,
            "rejected": false,
            "scheduled": false,
            "test-failed": false,
            "testing": false,
          },
          "externalEvents": Object {
            "holidays": true,
            "pmg": Object {
              "Other": true,
            },
            "sports": false,
            "video-games": false,
          },
          "informationalEvents": Object {
            "demonware": true,
          },
        },
        "stories": undefined,
      },
      "groupLoadingStatuses": Object {
        "abTesting": Object {
          "error": null,
          "isLoading": false,
        },
        "demonwareEvents": Object {
          "error": null,
          "isLoading": false,
        },
        "eventManager": Object {
          "error": null,
          "isLoading": false,
        },
        "externalEvents": Object {
          "error": null,
          "isLoading": false,
        },
        "informationalEvents": Object {
          "error": null,
          "isLoading": false,
        },
      },
      "numberOfDays": 30,
      "selectedDay": "2019-01-01T00:00:00.000Z",
      "selectedStyle": "sources",
      "selectedView": "month",
    }
  }
  onChangeDatePickerSelection={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  userTimezone="UTC"
>
  <div
    className="eventsCalendarSidebarDatePickerInfo"
  >
    <WithStyles(ForwardRef(TextField))
      InputLabelProps={
        Object {
          "className": "eventsCalendarSidebarDatePickerInfoField",
        }
      }
      fullWidth={true}
      label="Project"
      value="Test Project"
    >
      <ForwardRef(TextField)
        InputLabelProps={
          Object {
            "className": "eventsCalendarSidebarDatePickerInfoField",
          }
        }
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        fullWidth={true}
        label="Project"
        value="Test Project"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={true}
          required={false}
          variant="standard"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            required={false}
            variant="standard"
          >
            <div
              className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
            >
              <WithStyles(ForwardRef(InputLabel))
                className="eventsCalendarSidebarDatePickerInfoField"
              >
                <ForwardRef(InputLabel)
                  className="eventsCalendarSidebarDatePickerInfoField"
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={true}
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={true}
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                        data-shrink={true}
                      >
                        Project
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(Input))
                autoFocus={false}
                fullWidth={true}
                multiline={false}
                value="Test Project"
              >
                <ForwardRef(Input)
                  autoFocus={false}
                  classes={
                    Object {
                      "colorSecondary": "MuiInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInput-formControl",
                      "fullWidth": "MuiInput-fullWidth",
                      "input": "MuiInput-input",
                      "inputMarginDense": "MuiInput-inputMarginDense",
                      "inputMultiline": "MuiInput-inputMultiline",
                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                      "marginDense": "MuiInput-marginDense",
                      "multiline": "MuiInput-multiline",
                      "root": "MuiInput-root",
                      "underline": "MuiInput-underline",
                    }
                  }
                  fullWidth={true}
                  multiline={false}
                  value="Test Project"
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={false}
                    classes={
                      Object {
                        "colorSecondary": "MuiInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "marginDense": "MuiInput-marginDense",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root MuiInput-underline",
                        "underline": null,
                      }
                    }
                    fullWidth={true}
                    inputComponent="input"
                    multiline={false}
                    type="text"
                    value="Test Project"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                          "input": "MuiInputBase-input MuiInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                        }
                      }
                      fullWidth={true}
                      inputComponent="input"
                      multiline={false}
                      type="text"
                      value="Test Project"
                    >
                      <div
                        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          autoFocus={false}
                          className="MuiInputBase-input MuiInput-input"
                          disabled={false}
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                          value="Test Project"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(Input)>
              </WithStyles(ForwardRef(Input))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
    <WithStyles(ForwardRef(TextField))
      InputLabelProps={
        Object {
          "className": "eventsCalendarSidebarDatePickerInfoField",
        }
      }
      InputProps={
        Object {
          "className": "eventsCalendarSidebarDatePickerInfoField",
          "endAdornment": false,
        }
      }
      autoFocus={true}
      error={false}
      fullWidth={true}
      helperText={null}
      label="Start Date"
      onChange={[Function]}
      value="N/A"
    >
      <ForwardRef(TextField)
        InputLabelProps={
          Object {
            "className": "eventsCalendarSidebarDatePickerInfoField",
          }
        }
        InputProps={
          Object {
            "className": "eventsCalendarSidebarDatePickerInfoField",
            "endAdornment": false,
          }
        }
        autoFocus={true}
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        error={false}
        fullWidth={true}
        helperText={null}
        label="Start Date"
        onChange={[Function]}
        value="N/A"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={true}
          required={false}
          variant="standard"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            required={false}
            variant="standard"
          >
            <div
              className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
            >
              <WithStyles(ForwardRef(InputLabel))
                className="eventsCalendarSidebarDatePickerInfoField"
              >
                <ForwardRef(InputLabel)
                  className="eventsCalendarSidebarDatePickerInfoField"
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={true}
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={true}
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                        data-shrink={true}
                      >
                        Start Date
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(Input))
                autoFocus={true}
                className="eventsCalendarSidebarDatePickerInfoField"
                endAdornment={false}
                fullWidth={true}
                multiline={false}
                onChange={[Function]}
                value="N/A"
              >
                <ForwardRef(Input)
                  autoFocus={true}
                  className="eventsCalendarSidebarDatePickerInfoField"
                  classes={
                    Object {
                      "colorSecondary": "MuiInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInput-formControl",
                      "fullWidth": "MuiInput-fullWidth",
                      "input": "MuiInput-input",
                      "inputMarginDense": "MuiInput-inputMarginDense",
                      "inputMultiline": "MuiInput-inputMultiline",
                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                      "marginDense": "MuiInput-marginDense",
                      "multiline": "MuiInput-multiline",
                      "root": "MuiInput-root",
                      "underline": "MuiInput-underline",
                    }
                  }
                  endAdornment={false}
                  fullWidth={true}
                  multiline={false}
                  onChange={[Function]}
                  value="N/A"
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={true}
                    className="eventsCalendarSidebarDatePickerInfoField"
                    classes={
                      Object {
                        "colorSecondary": "MuiInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "marginDense": "MuiInput-marginDense",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root MuiInput-underline",
                        "underline": null,
                      }
                    }
                    endAdornment={false}
                    fullWidth={true}
                    inputComponent="input"
                    multiline={false}
                    onChange={[Function]}
                    type="text"
                    value="N/A"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={true}
                      className="eventsCalendarSidebarDatePickerInfoField"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                          "input": "MuiInputBase-input MuiInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                        }
                      }
                      endAdornment={false}
                      fullWidth={true}
                      inputComponent="input"
                      multiline={false}
                      onChange={[Function]}
                      type="text"
                      value="N/A"
                    >
                      <div
                        className="MuiInputBase-root MuiInput-root MuiInput-underline eventsCalendarSidebarDatePickerInfoField MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          autoFocus={true}
                          className="MuiInputBase-input MuiInput-input"
                          disabled={false}
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                          value="N/A"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(Input)>
              </WithStyles(ForwardRef(Input))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
    <WithStyles(ForwardRef(TextField))
      InputLabelProps={
        Object {
          "className": "eventsCalendarSidebarDatePickerInfoField",
        }
      }
      InputProps={
        Object {
          "className": "eventsCalendarSidebarDatePickerInfoField",
          "endAdornment": false,
        }
      }
      autoFocus={true}
      error={false}
      fullWidth={true}
      helperText={null}
      label="End Date"
      onChange={[Function]}
      value="N/A"
    >
      <ForwardRef(TextField)
        InputLabelProps={
          Object {
            "className": "eventsCalendarSidebarDatePickerInfoField",
          }
        }
        InputProps={
          Object {
            "className": "eventsCalendarSidebarDatePickerInfoField",
            "endAdornment": false,
          }
        }
        autoFocus={true}
        classes={
          Object {
            "root": "MuiTextField-root",
          }
        }
        error={false}
        fullWidth={true}
        helperText={null}
        label="End Date"
        onChange={[Function]}
        value="N/A"
      >
        <WithStyles(ForwardRef(FormControl))
          className="MuiTextField-root"
          color="primary"
          disabled={false}
          error={false}
          fullWidth={true}
          required={false}
          variant="standard"
        >
          <ForwardRef(FormControl)
            className="MuiTextField-root"
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth",
                "marginDense": "MuiFormControl-marginDense",
                "marginNormal": "MuiFormControl-marginNormal",
                "root": "MuiFormControl-root",
              }
            }
            color="primary"
            disabled={false}
            error={false}
            fullWidth={true}
            required={false}
            variant="standard"
          >
            <div
              className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
            >
              <WithStyles(ForwardRef(InputLabel))
                className="eventsCalendarSidebarDatePickerInfoField"
              >
                <ForwardRef(InputLabel)
                  className="eventsCalendarSidebarDatePickerInfoField"
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated",
                      "asterisk": "MuiInputLabel-asterisk",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "filled": "MuiInputLabel-filled",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputLabel-formControl",
                      "marginDense": "MuiInputLabel-marginDense",
                      "outlined": "MuiInputLabel-outlined",
                      "required": "Mui-required",
                      "root": "MuiInputLabel-root",
                      "shrink": "MuiInputLabel-shrink",
                    }
                  }
                >
                  <WithStyles(ForwardRef(FormLabel))
                    className="MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                    classes={
                      Object {
                        "asterisk": "MuiInputLabel-asterisk",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "required": "Mui-required",
                      }
                    }
                    data-shrink={true}
                  >
                    <ForwardRef(FormLabel)
                      className="MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                          "colorSecondary": "MuiFormLabel-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "filled": "MuiFormLabel-filled",
                          "focused": "Mui-focused Mui-focused",
                          "required": "Mui-required Mui-required",
                          "root": "MuiFormLabel-root",
                        }
                      }
                      data-shrink={true}
                    >
                      <label
                        className="MuiFormLabel-root MuiInputLabel-root eventsCalendarSidebarDatePickerInfoField MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                        data-shrink={true}
                      >
                        End Date
                      </label>
                    </ForwardRef(FormLabel)>
                  </WithStyles(ForwardRef(FormLabel))>
                </ForwardRef(InputLabel)>
              </WithStyles(ForwardRef(InputLabel))>
              <WithStyles(ForwardRef(Input))
                autoFocus={true}
                className="eventsCalendarSidebarDatePickerInfoField"
                endAdornment={false}
                fullWidth={true}
                multiline={false}
                onChange={[Function]}
                value="N/A"
              >
                <ForwardRef(Input)
                  autoFocus={true}
                  className="eventsCalendarSidebarDatePickerInfoField"
                  classes={
                    Object {
                      "colorSecondary": "MuiInput-colorSecondary",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInput-formControl",
                      "fullWidth": "MuiInput-fullWidth",
                      "input": "MuiInput-input",
                      "inputMarginDense": "MuiInput-inputMarginDense",
                      "inputMultiline": "MuiInput-inputMultiline",
                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                      "marginDense": "MuiInput-marginDense",
                      "multiline": "MuiInput-multiline",
                      "root": "MuiInput-root",
                      "underline": "MuiInput-underline",
                    }
                  }
                  endAdornment={false}
                  fullWidth={true}
                  multiline={false}
                  onChange={[Function]}
                  value="N/A"
                >
                  <WithStyles(ForwardRef(InputBase))
                    autoFocus={true}
                    className="eventsCalendarSidebarDatePickerInfoField"
                    classes={
                      Object {
                        "colorSecondary": "MuiInput-colorSecondary",
                        "disabled": "Mui-disabled",
                        "error": "Mui-error",
                        "focused": "Mui-focused",
                        "formControl": "MuiInput-formControl",
                        "fullWidth": "MuiInput-fullWidth",
                        "input": "MuiInput-input",
                        "inputMarginDense": "MuiInput-inputMarginDense",
                        "inputMultiline": "MuiInput-inputMultiline",
                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                        "marginDense": "MuiInput-marginDense",
                        "multiline": "MuiInput-multiline",
                        "root": "MuiInput-root MuiInput-underline",
                        "underline": null,
                      }
                    }
                    endAdornment={false}
                    fullWidth={true}
                    inputComponent="input"
                    multiline={false}
                    onChange={[Function]}
                    type="text"
                    value="N/A"
                  >
                    <ForwardRef(InputBase)
                      autoFocus={true}
                      className="eventsCalendarSidebarDatePickerInfoField"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd",
                          "adornedStart": "MuiInputBase-adornedStart",
                          "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                          "disabled": "Mui-disabled Mui-disabled",
                          "error": "Mui-error Mui-error",
                          "focused": "Mui-focused Mui-focused",
                          "formControl": "MuiInputBase-formControl MuiInput-formControl",
                          "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                          "input": "MuiInputBase-input MuiInput-input",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                          "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                          "multiline": "MuiInputBase-multiline MuiInput-multiline",
                          "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                        }
                      }
                      endAdornment={false}
                      fullWidth={true}
                      inputComponent="input"
                      multiline={false}
                      onChange={[Function]}
                      type="text"
                      value="N/A"
                    >
                      <div
                        className="MuiInputBase-root MuiInput-root MuiInput-underline eventsCalendarSidebarDatePickerInfoField MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
                        onClick={[Function]}
                      >
                        <input
                          aria-invalid={false}
                          autoFocus={true}
                          className="MuiInputBase-input MuiInput-input"
                          disabled={false}
                          onAnimationStart={[Function]}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="text"
                          value="N/A"
                        />
                      </div>
                    </ForwardRef(InputBase)>
                  </WithStyles(ForwardRef(InputBase))>
                </ForwardRef(Input)>
              </WithStyles(ForwardRef(Input))>
            </div>
          </ForwardRef(FormControl)>
        </WithStyles(ForwardRef(FormControl))>
      </ForwardRef(TextField)>
    </WithStyles(ForwardRef(TextField))>
  </div>
</DatePickerFields>
`;
